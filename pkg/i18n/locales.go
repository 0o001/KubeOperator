// Code generated for package i18n by go-bindata DO NOT EDIT. (@generated)
// sources:
// locales/en-US/home.yml
// locales/zh-CN/home.yml
package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localesEnUsHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xcd\x72\xa3\x48\x12\xbe\xf3\x14\x65\x14\x1d\x7b\xe9\x9d\x98\xb3\x6f\x34\xc2\x36\xdb\x12\x10\x80\x3c\xed\xbd\x10\x25\x48\x49\xb5\x46\x55\x44\x55\x61\x8f\xe6\xb6\xef\xb5\xef\xb4\xaf\xb0\x91\x45\xf1\x27\xc9\x6d\x75\xec\xa9\xdb\x76\xe5\x7f\xe6\x97\x5f\xb2\x28\xc5\xf1\x28\xb8\x13\x79\xeb\xa0\x08\x7e\x84\x59\x9e\xdd\x13\x37\xa2\x47\x20\xb4\x96\x40\xab\x13\x81\x3f\x99\xd2\xca\x75\xc2\xa4\x88\xe2\x7c\x7c\x94\xd4\x40\x15\x90\x1d\xab\x6b\xc2\x38\xd1\x07\x20\x12\xf6\x4c\x69\x79\x22\x61\x42\x44\xf7\x2b\x75\x52\x1a\x8e\x44\x81\xd6\x8c\xef\x49\x43\xf7\xe0\x3a\x8e\xb3\x28\xeb\x56\x69\x90\x8e\xbf\xda\x64\x79\x90\x16\xcb\x60\x15\xe4\x41\xf1\xe0\x85\xab\x60\x79\x4f\xdc\x92\x72\xc2\x85\x26\x15\xd4\xa0\x81\xd8\xe7\x68\xa8\x6c\xa5\x04\xae\x89\xd2\x54\x83\x3b\x28\x08\x33\xe3\x5e\xba\x89\xa2\x30\x7a\xbc\x27\x6e\x7e\x98\x88\x29\xa3\x4c\xb6\x9c\x33\xbe\xbf\x10\x5a\xc5\xbe\xb7\xba\x27\x6e\x78\x6c\x84\xd4\x83\x54\x49\x39\x4a\x6d\x81\xb4\xcd\x5e\xd2\x0a\xaa\x51\x32\x8a\x8b\x87\x55\xf0\xe3\x9e\xb8\x3e\xe5\x7f\xd3\x64\xc7\x78\x45\x76\x35\xfc\x49\x58\xd3\x05\x28\xa1\x02\xae\x19\xad\x9d\x59\x6c\x45\x1a\x64\xf1\x26\xf5\x83\x7b\xe2\x3e\x50\x56\x43\x45\xb4\xb0\x61\xde\x91\xfc\x00\x12\xd0\x5d\xca\x09\x55\x4a\x94\x8c\x6a\xa8\xc8\x41\x28\x4d\x5a\x5e\x81\x24\xfa\xc0\x14\x79\x85\x93\xfb\x81\xda\xe2\x9f\x71\xf4\x4b\xba\xff\x12\x1c\xae\xe8\x7e\xf0\x36\xab\xbc\xf0\xd3\x60\x19\x44\x79\xe8\xad\x0a\xdf\x8b\x4c\xb2\x3a\xb3\xf7\xc4\x5d\xc2\x8e\xb6\xb5\x26\x63\xa4\x93\x8c\x75\x46\x2b\xb7\xeb\x2c\xff\x29\xf0\xbf\x8f\xc5\x35\xa5\x19\xa5\x38\xb6\xdb\x28\x6a\xda\xc6\x74\xa0\x32\xff\x6f\x15\x48\xf3\xc6\x75\x12\x2f\xcb\xfe\x88\xd3\xe5\xe0\x4c\xb4\x59\x61\xe1\x1a\xaa\xd4\xbb\x90\x15\xe9\xdb\x66\x0b\x64\x5b\x53\xfe\xfa\xdf\xff\xfc\xdb\x75\x92\x34\x7c\xf6\xf2\xa0\xf8\x1e\xbc\x9c\x0b\xa2\x27\x8d\x64\x6f\x54\x03\x06\x3e\xf1\x62\x14\x77\x16\x98\x7e\xe7\x29\xce\xf2\xc2\x5b\xa5\x81\xb7\x7c\x19\xa7\xe0\x09\x2b\x73\x3e\x2a\xb6\x32\x46\x62\x08\xfa\x6a\x41\xba\xca\x62\x4d\xac\x8a\x49\x61\xde\x99\x3e\x98\x04\xd8\x7e\xbc\xa6\xb7\xf8\xf6\x52\x24\x69\xfc\x8f\xc0\xcf\xff\x2f\x13\x8d\x14\xff\x82\x52\xbb\x4e\xf6\x92\xe5\xc1\xba\xb0\xc3\xfe\x10\x6f\xa2\xe5\xf5\x59\xaf\x45\x49\x6b\x1c\xf4\x1d\x93\x4a\x9b\x44\x45\x31\xca\x79\xcf\x5e\xb8\xf2\xbe\xad\xb0\x45\x22\x41\xc2\x86\xd0\x37\xca\x6a\xba\xad\xc1\x75\xc2\xac\x1b\x36\x13\xc3\x64\xcc\x59\x37\x79\x9d\x52\x74\xd8\xed\xf2\x1d\xae\x93\x38\xcd\x8b\x20\x4d\xe3\xb4\xaf\x59\x24\x48\x45\x35\xc5\x30\xad\xd8\x3b\x55\x64\x27\x5a\x5e\xdd\x11\xeb\x69\x79\x80\xf2\xd5\xf8\x69\x9f\xec\x58\x0d\x77\x73\xa5\xa8\xae\x78\xf6\x56\x1b\xf4\x34\x38\x36\xfa\xd4\xe9\x15\x9c\xd4\x8c\x03\xf9\xa2\xce\xde\xc7\x79\xe1\xc7\xeb\xc4\xd4\xa0\x97\x0b\x79\x29\x8e\x8d\xc1\xa8\x9f\x0a\xff\x91\xc6\xd1\x63\xf1\x10\xa7\x6b\x2f\xb7\x62\x52\x42\xa9\x49\xe7\x9d\x90\x47\xaa\x3f\x14\x9e\x4c\xe1\xb4\x2a\xfe\x64\x84\x84\xee\x32\xf0\xa1\x0e\xdb\x25\xf3\xb2\x76\x55\xbf\x41\xda\x76\x5b\xb4\x59\xdf\x13\xd7\x23\x5a\x68\x5a\x13\xb1\x23\x5f\x14\x91\xe2\x5d\xe1\x7f\x4d\xf8\x54\x02\xa1\x5b\x8e\xe1\xd4\x5f\x89\x7a\x45\x30\x34\x7a\x06\x78\xea\xfb\x36\x8c\xe6\x43\xb1\x45\x00\x35\xad\x2a\x41\x89\x56\x96\xe8\xc4\x57\x22\x81\x2a\xc1\xef\x3f\xf0\x27\xf3\x9e\xe7\x58\xa7\xe8\x9b\x6d\xf8\x33\x61\xc7\x59\x20\x8e\x8c\x08\x82\x79\x58\x7b\xb9\xff\xd4\xa3\x40\x0f\x21\x4c\x11\xd6\x57\xc7\x75\xe2\x34\x7c\x0c\x23\x9b\xf8\xe9\x7b\x21\xd9\x9e\x71\x5a\x7f\x24\xb8\xc9\xc6\xfd\xe2\xf9\x79\x68\x1c\xcd\x7b\x38\xb3\x0b\x09\x38\x8e\xc5\xa4\x6d\x05\xd7\xb4\xd4\xa6\x71\x69\x75\x64\x1c\xd7\x29\xd5\x42\xde\x59\x85\xd3\xea\x45\x82\xa8\xb6\x3c\x18\x85\x66\xfe\xbc\xe5\x3a\x8c\x2e\x71\x1a\x8d\x56\x16\xab\x8d\xd2\xce\x85\x0b\xac\xbe\x9b\x3b\x9d\x06\x2b\x2f\x0f\x96\x13\x78\xd9\xa0\xd8\x81\xa2\xeb\x53\x10\xb1\xd8\x61\x5c\x58\x2d\xbd\x64\xf0\x60\x93\x2c\xbd\xc1\x83\xba\xa2\xcd\xb9\x61\xa8\x58\x67\xf7\x39\x48\xc3\x87\x97\xc2\x8f\x97\x13\x0a\xf0\x0c\x92\xed\x58\x49\x35\x13\x9c\x94\xa2\x02\x02\x52\x0a\xe9\x3a\xc1\xda\x0b\x57\xc5\x32\xcc\x2c\xca\xac\x29\xab\x7b\x86\xa1\x4c\x0b\x56\x4c\xdd\x98\xd8\x5e\xdb\xb4\xbc\xc1\x11\x15\x1e\xa9\x2e\x0f\x64\x67\x5a\xab\x83\x37\xdc\x64\x43\xff\x64\xf8\xd3\xe0\x2b\xa6\xe6\x27\x6b\xac\xef\x91\x73\x25\x06\xd7\xee\x89\xfb\x2e\x05\xdf\x8f\x8b\x8e\x08\x39\x11\xe9\x1c\x34\x1b\x67\x70\xee\x7c\xe3\x38\x0b\xe4\x5e\x82\xf7\x2b\x22\x0d\x1e\xc3\x38\xba\x95\x72\x90\x4e\xf8\xb3\x25\x81\x4c\x01\x4d\xe1\xbf\xbd\x21\x64\x1b\x37\x9b\x31\x54\xe3\xb3\x4d\x54\x53\x3e\x27\x68\x1d\xea\xfb\x5d\x62\xf7\xa0\xa7\x3b\xf1\x0a\xe0\x97\x82\xef\xd8\xbe\x95\xa6\x6f\x4c\xe1\xc2\xb5\xf7\x18\x7c\xac\x8a\x1d\xe9\x1e\x6e\x53\x94\x14\xd9\x53\x9c\x76\x00\xae\xda\xdd\x8e\x95\x0c\xa9\x68\x88\x94\x6f\x21\x1a\xe0\x4a\xd3\xf2\xd5\x79\x0c\xf2\xbe\x02\x7d\x85\x23\xd1\x27\xd9\x00\x2d\xbe\xb7\x73\xb3\x86\xe3\x16\xe4\x30\x7a\xde\x12\xfb\xe9\x8b\x22\xc3\xb4\x6d\x01\x38\xa1\x95\xa1\x9f\xd3\x01\xed\x71\xe0\x8b\x9a\x61\x8a\xd1\x6f\x89\x8b\x35\x31\xd0\xb9\x7e\x09\x7c\xc8\xe5\xac\xc0\x35\x22\xd7\xcb\x3e\x79\x59\x61\xcb\x33\x59\x21\x93\x52\x0e\xa5\xf1\xaf\x20\x8c\xb3\xe0\xa2\x02\x27\xc2\x49\xef\xc9\x94\xe5\xec\x45\xee\x65\xdf\x71\xbd\x54\x15\xc1\x47\x38\x05\x96\xfe\x9b\x1f\xfb\xae\xb1\x2c\xfe\x6b\xd3\x15\xec\x9d\x32\x4d\x98\x26\x95\xe0\xf0\x1b\x1a\xd8\xd2\xf2\xb5\x6d\xbc\xb2\x14\x2d\xd7\x4e\xe2\xa5\xde\xba\x08\xd6\x49\xfe\x72\x5e\xb6\x86\x4a\x7a\x04\x0d\x52\x21\x77\xc9\x8b\x6c\x93\x24\x5d\x75\x37\x5c\xb5\x0d\x6e\x66\xec\xe1\x53\x83\x67\xc6\x9c\xc1\xce\xb0\xa9\xc3\x88\x81\x9e\x7d\xf3\xfc\xef\x9b\xa4\xf0\x7c\x3f\xde\x44\xbf\x42\xd4\x66\x8e\xdf\xcc\xd8\x9c\x05\x8e\x4c\x6f\x3c\x59\x79\xd1\x35\xce\xd9\xf9\xd8\xd9\xc1\xf7\x63\x67\xb5\x0a\xaa\x9e\xd4\xf5\x97\x4f\x7f\x0e\x4c\xcc\xcc\xaf\x8d\x1b\xa2\x31\x56\x6e\x0f\xc2\x9a\xfe\x66\x72\x70\x96\xca\x4f\xe2\xe9\xf2\x46\xa8\x4d\xdc\xaf\x46\xd6\x1b\x09\x57\x41\x36\xbd\x0d\x2c\x20\xd8\x16\xd4\xa3\x21\xe4\x92\x64\x0b\x3b\x21\x81\xa8\x77\xa6\xcb\x03\x9e\xb6\xfa\xc2\x93\x19\x8c\x75\x56\x2e\xef\xd2\x2d\xa0\x30\x0a\x42\x45\xda\xc6\x0c\xee\x44\x2c\x0d\xb2\x3c\x4e\x83\x4b\x39\x09\x4a\x0b\xc9\xf8\x7e\x3e\xea\xa9\x25\x4f\x97\xf5\x9a\x84\xf9\x69\x70\x23\xa7\xbf\x7e\x72\x8c\xf3\x3f\x1c\x18\x7d\x99\xb7\x50\x0b\x5c\xc3\x5a\xcc\x71\x3a\xc7\xdb\x52\x34\x20\xed\x3e\x1f\xb0\xa1\x01\x89\xf4\xd7\xa0\x43\x47\xf1\x2e\xe0\xed\xc9\x5e\x30\x03\xbc\xb9\xce\xc0\x27\x3b\xc8\x0c\xec\xcb\x3e\x7c\xd3\x78\x1d\x64\x9a\x89\xb8\xd4\x99\xd8\xf6\x9c\xe8\x3c\x1b\xdc\x4b\x99\x6f\xe7\x03\x3a\x11\x76\x16\xc8\x70\x3a\x02\x34\xa0\x74\xd7\x48\xd9\x89\x97\x07\x29\x38\xfb\x0b\x4b\xac\x40\x76\x24\xe5\x77\x4b\x97\x56\xf1\x63\x18\x9d\xcb\x6c\xa6\x2c\x11\x97\xfc\x9d\x7d\x3d\xd2\x9e\x7c\xfc\xbc\xd2\x48\x71\x60\x5b\xa6\x15\xc1\x37\xd6\xc6\x4e\x8a\x23\xa9\xc5\x7e\x8f\x0d\xc6\xf8\x6f\xb7\x90\x4c\x67\x51\x32\xe5\xf8\x61\x66\xc0\xf8\x1c\xa1\xf1\x60\x63\x8a\x68\xaa\x5e\xcf\xd1\x18\x45\xdf\x8e\xbe\x59\x99\xce\xf3\xba\xf0\xe3\xe8\x21\x7c\x1c\xef\x64\x7f\xba\x4c\x2f\xe8\xcb\x28\x70\xfe\x1d\x28\x3f\x5f\xc4\x1f\x35\x5a\x05\x4d\x2d\x4e\x47\x83\xeb\x35\xe5\x37\x36\x9c\xb3\x60\x0d\xae\xf5\xc1\x4f\xb4\x07\x5c\x83\x84\x0a\x8f\x5b\x05\x7b\xa3\x12\x5d\xa8\x59\xa9\xd5\x88\x5d\xc6\x77\x4c\xed\xf8\xec\x2b\x69\xe6\x87\x32\xdd\x53\xc6\x87\x4f\x67\xd3\xcb\x38\x4c\xf0\x76\x42\x0f\xcb\xb2\x6d\x18\x54\x84\xf2\x6a\xe2\xa4\x04\xa3\xa9\x32\xc2\x61\xf4\xec\xad\x42\x4c\x47\xd8\x74\x67\xc6\x1b\xad\x59\xd5\x73\x92\xc9\xb7\x0c\xde\x22\x99\xc0\x73\x6c\x0f\x1c\x43\xef\xc2\xa0\x55\x25\x41\x29\x30\x16\x7f\xff\xed\x92\xeb\x28\x4d\xa5\x09\xc6\xbe\x34\xde\xa8\x76\xcb\x01\x1b\xcf\xa4\xe9\xef\x8d\x10\x35\x9a\x4b\xe2\x78\x75\xb5\x4e\x61\x42\xf0\xcd\x84\xb4\x5c\x81\xfc\xe1\x63\x40\xc7\x06\xe7\x51\x0f\x64\xa3\xe3\xb3\x4a\xcb\x93\x83\x44\x2a\xcb\xd3\x97\xcb\x6f\x2f\xf9\xf4\x93\xa3\xd8\x75\x9f\xaf\xa8\x2c\x0f\x4c\x43\xa9\x5b\x09\x66\x77\x5f\x34\xdb\x85\xc2\x4d\x36\x84\x70\x83\x3a\x93\x7f\x1c\xb1\xc9\xd6\x1a\x50\xb7\x47\xee\x24\x8d\x9f\xc3\x65\x90\x0e\xfc\x6f\x8a\xde\xa5\x04\x93\x13\x6c\x90\x56\x8b\x23\xd5\xac\x24\x47\xa4\x38\x36\x13\x47\xca\x5b\x5a\xd7\x27\xfc\x25\xdb\x9d\xe6\x67\xb1\x9a\x80\x5f\xfe\x92\x04\x33\x13\x06\xf3\x06\x3f\x51\xd7\x40\x64\xee\x48\xcc\xeb\x53\xff\xb3\x22\x88\xb5\x5f\xc9\x1c\xf3\x3e\xe7\x30\x23\xf2\xef\x7e\xc2\x61\x88\x41\x14\xd8\x5f\xdb\xfa\xb8\xf3\xe6\x0b\x7b\xd8\x82\xb4\xd4\xe6\x53\x5c\x37\x99\x0a\x94\xc2\x93\x26\x0b\xb2\x0c\xa9\xf4\xf7\xe0\x65\x06\xc8\xf6\xef\xe6\xbb\x9d\x9d\x08\x4b\x90\x93\x34\xc6\x35\x37\x99\x9b\xfe\x6d\x77\x80\x0a\xfe\x06\x52\x4d\xa9\x9b\x11\x43\x66\x1b\xc5\xd3\x33\xa6\x9d\x5c\xbc\x7d\xfe\xcd\x38\xe0\xee\xa5\x7b\x70\x4c\x9d\xd1\x3b\x2c\xf5\x8f\x2c\x44\x3a\x94\x75\x7f\x43\x50\x7e\x63\xc8\x36\xce\x1a\xf0\x7f\x01\x00\x00\xff\xff\x7c\x8d\xb4\x61\x74\x17\x00\x00")

func localesEnUsHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesEnUsHomeYml,
		"locales/en-US/home.yml",
	)
}

func localesEnUsHomeYml() (*asset, error) {
	bytes, err := localesEnUsHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/en-US/home.yml", size: 6004, mode: os.FileMode(420), modTime: time.Unix(1646821796, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesZhCnHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x58\x5b\x53\x1a\x5b\x16\x7e\xef\x5f\x41\x41\x9d\xb7\x33\x53\xf3\x7c\xde\x3a\xd0\x9a\x9e\x34\xdd\x5d\xdd\x8d\x27\xce\x4b\x97\xc7\x30\x19\x27\x2a\x94\xe8\x54\x9d\x79\x0a\xde\x00\x05\xe1\x24\xe2\x44\x25\x51\xbc\x44\x8e\x06\xf0\x92\x08\x72\xd1\x3f\xd3\x7b\x77\xf3\xe4\x5f\x98\xda\x7b\x77\x37\x9b\x26\x1a\x5f\xac\x12\xd6\xb7\xf6\xda\xeb\xf2\xad\x6f\x13\x98\x8c\xcd\xcc\xc4\x66\x19\x91\x0d\x73\x3a\xf7\x92\x57\x35\xf5\x17\x9f\x1f\x14\x72\xe6\xc9\x39\x68\x5c\x82\xea\x07\x50\xaa\xf8\x19\x5e\xd6\x45\x49\xeb\x1b\x58\xf5\x06\x28\x55\xcc\xab\xb6\xd9\xde\xb3\x6a\xb7\x66\xb7\xd6\x2b\x7f\xeb\x7d\x3c\x00\xe5\x33\xb0\xba\x6d\xb4\xdf\x83\xd6\x7b\x5e\xf6\x33\x4c\x60\x72\x7a\x21\x31\x1f\x9d\x63\x82\x42\x44\xd5\x38\x45\x0f\x71\x02\xa7\x71\xfa\x08\xcb\x0b\x5c\xe8\x17\x9f\x1f\xfe\x6f\x1f\x5e\x15\x41\x7a\xbf\xb7\x7d\x04\xba\xef\x41\x26\x67\xae\x5d\xc3\xb7\x49\x73\x67\xb9\xb7\xbb\x6a\xde\x1e\xf9\x5d\x28\xaf\xe2\x20\x94\x88\x28\xf2\xe2\xe8\x2f\x3e\x3f\x31\x30\x9a\x39\x50\xaa\x58\x77\x05\xab\x9c\x35\x9a\xd5\xfb\x4e\x72\x08\x22\x48\x41\x56\x40\xf7\xaa\x77\xc0\xca\x31\x81\xd9\x07\xe7\x52\x66\xeb\xa4\x0f\x10\x25\x7d\x44\xe0\x5e\xa2\xc0\x4a\xa7\xd6\x52\x17\x66\x6e\x41\xfa\x1c\x74\x6e\xe0\xdb\x13\xdf\x54\xdc\xcf\xa0\x2b\xcd\x45\x5f\x45\x67\xe7\xa7\x26\xa6\x99\x81\xdb\xe8\x0a\xa7\x4a\x11\x25\xc8\xa1\x93\xc8\x85\x8e\x2e\xac\xaf\xc7\xf7\x9d\xa4\x55\x3f\x36\x4f\x3e\xf4\xde\x1d\x1b\xcd\x75\x58\xca\x80\x95\x2b\x2b\xb9\x69\x34\xdb\xb0\xd4\xf2\x3f\xe0\x44\xff\x87\x24\x3e\xd5\x13\xc8\xd7\xcd\xcd\x0a\xc8\x62\x67\x23\x6c\x44\xd0\xf4\xa0\xc2\x85\x38\x51\xe3\x59\x41\x0f\xb2\x22\xce\x02\x39\x07\xe5\xad\xfd\xc1\xaa\x1d\x81\x54\x15\xe6\x6a\x46\x33\x67\x2d\x75\xc9\x21\x38\x75\xb8\x13\x82\xcf\xb9\xe0\x8b\x7e\x91\xc8\x89\xa4\x2b\x08\xc0\x68\x6e\x98\x9b\x15\x98\x6e\xa0\x0f\x77\x9b\xa0\x90\xf5\x33\x32\xab\xaa\xbf\x4a\x4a\xc8\x3d\x50\x8c\x08\x24\xeb\xab\xe6\x7e\xd2\xc1\xb5\xcc\x3f\x5b\xf8\x20\x59\xe1\xc7\x58\x8d\xd3\x5f\x70\xe3\x5e\x84\x73\x43\x0f\x82\x61\x02\xff\x8a\x25\xe6\x99\xe7\x92\xaa\xe9\xac\xa0\x70\x6c\x68\xbc\xdf\x93\x24\x9d\x54\xd3\xda\x79\xc5\xd6\xee\x55\x86\xd3\xe9\xe2\xcc\x76\x9e\xa4\xd3\x69\xbc\x61\x07\xfa\xb3\x71\x5d\x56\xa4\xbf\x73\x41\xed\xa9\xbe\xca\x37\xe6\x6e\x0d\x87\xaf\x8e\xab\x1a\x17\xd6\xed\x59\x1a\x91\x22\x62\xc8\x1e\xa5\x95\x34\x19\x1c\x58\xfa\x02\x4b\x2d\x5e\x26\x85\x90\x90\x29\x3b\xc6\xf2\x02\xfb\x4c\x40\x75\xe3\x65\x9f\xf5\x6d\x19\xb6\x0a\x28\x33\xd7\x57\x7e\x86\x57\x49\x6b\xe3\x10\xb1\x2f\x3b\x02\xa3\xb9\x41\x86\xd0\xc7\xcb\x3e\xb0\x7a\x69\x9e\x26\xef\x3b\x59\xbb\xa5\xd3\x05\xb0\xb6\x07\x1b\x6d\xb0\xb6\xef\x27\xb9\xe4\xc3\xb2\xa4\x68\x3a\xa7\x28\x92\xe2\xd4\x00\x96\x4e\xed\xe6\xcf\xd7\xc9\xdc\x98\x3b\xcb\xb0\x78\x0e\x73\x35\x7c\xd7\x06\x3c\x7c\x0b\xf7\x8e\xc9\x57\x70\x2b\x65\xb4\xaf\x71\xd8\xb4\x43\xe4\x4a\x1f\x63\x85\x08\x8a\xfe\xa7\x84\xcf\x2a\x67\x61\x29\x63\xfe\xd9\x22\x7e\x3c\xc6\x92\xa6\x07\xa5\xb0\x8c\x73\xee\x01\x61\x73\x34\xe8\xb5\x2c\x2c\x7e\x1d\xc4\xfd\xaa\x48\xe2\xa8\x3e\x22\x29\x61\x56\x73\x11\xe6\x59\x1d\xe4\x0f\xe1\x7e\x07\x74\xf2\x46\x33\x07\xab\x87\x66\xd9\x73\x1e\x35\x21\x74\x3d\xec\x13\x33\xb7\xe8\xb8\xf4\x39\xa8\xaf\xf6\xde\x1d\x0f\x22\xed\x0e\x78\x0c\x46\xca\x3e\x08\xb3\x5b\x48\x8c\x84\x51\xef\xac\x5c\xf8\x3c\x97\x83\xd5\x43\xd0\x6c\xde\x77\xb2\x56\xe3\xca\xba\x4b\xd9\x60\x97\x0f\x9c\x0e\xe4\xf1\x79\xa4\xce\xa4\x1d\x90\x23\xe3\xee\x23\xea\x7b\xbb\x17\xb3\x60\x63\x0f\xec\xee\xdf\x77\x76\x7e\x4a\x7c\x37\x08\x95\x1d\xe3\x5c\x2f\x3f\xc2\x33\x4c\x60\x21\x11\x9d\xeb\x0f\x38\xba\x78\x98\xd5\x82\xcf\xdd\xe9\xee\x6d\x6e\x5b\xf5\xba\x9f\x91\x14\x7e\x94\x17\xed\x94\xba\x26\x1b\x7b\x83\x56\x11\xb5\xcf\xcd\x6c\x50\xe3\x71\x2c\x84\x4f\x60\xe9\x14\x14\x10\x9b\x91\x26\xb3\x92\x9b\x68\xcb\xd4\xca\x66\x61\x15\xfc\xf1\x01\x77\x18\x46\xd3\xb9\x47\x54\x5e\x3d\x22\x78\x6c\xc1\x86\xc2\xbc\xf8\x10\xef\xf9\x26\x5e\xcd\x4c\xcd\xfa\x88\x39\xe1\x18\xeb\xe0\x8c\x62\x40\x3a\x3a\x85\x13\x58\x8d\x0b\x51\x43\x6f\x87\x79\x59\x76\xd9\xd7\xa9\xb5\x10\x62\x65\xf7\xd0\x88\x1c\x62\xf1\xa1\xe8\xd3\x81\xc3\x8c\xbb\x1a\xdc\xbc\xc1\x27\x8d\x71\x0a\x3f\x32\xae\x07\xa5\x10\xb5\x11\x7b\xa7\x59\xab\x9e\xa4\xb2\xc5\x85\x59\x5e\xd0\x43\xbc\x6a\xd3\x40\x6f\xb1\x66\xb4\xaf\xc9\xda\xb5\x0e\xce\xcc\xcf\xc9\x87\xd2\xe5\x60\xe9\x62\x10\x34\xc8\xde\xf4\x56\x72\x2e\x75\xd9\xb4\xef\x16\x58\x45\xff\xf5\xe9\xdf\x61\x7a\x97\xfb\x49\x39\x1d\xe2\x1f\xc4\x62\x16\xa1\x51\x30\xbd\x35\x58\x7e\x12\x14\x26\x6e\x12\x90\x59\xbb\xa0\x78\x9b\x61\x02\x73\xd1\xd7\x53\xb1\x59\x87\x80\x15\x6e\x94\x97\xc4\x27\x6d\x59\x90\x6d\x81\xbd\x3d\x9a\x80\xa9\xdd\xc8\x04\xfe\x1b\x9b\x8d\x3a\x5e\xd1\x7e\x7d\x9a\x4f\xc7\xc3\x00\xaf\x2f\x55\xcc\xee\xa5\x55\x2b\x83\xf4\xbb\x41\xbd\x41\xe8\xd3\xda\x68\x80\xfc\x96\x4d\x06\x78\x9f\xd0\xac\xd9\x5b\xc9\x99\x5d\xb2\x15\xf8\x30\x3b\xca\x3d\x04\x2c\x96\xc0\x52\xfe\x21\xa0\xac\xab\xcf\x25\x05\xa5\x90\x8f\xfb\x9c\x95\xc0\x30\x81\x58\x3c\x3a\x9b\x98\x9f\x98\x7c\xc3\x8c\x72\x9a\x93\x3c\xa7\x2a\x7d\x62\xc3\x99\x42\x49\x89\xcf\xc5\xfe\x1d\x9d\x9c\x0f\x47\x67\x7e\x8b\xce\xb9\xdd\xcf\x86\x6c\x5a\xb3\xeb\x88\xef\xee\x6c\x0d\x7a\x44\x28\x06\x74\x47\x98\x6c\x0e\xb2\xb4\x1d\xff\xae\x34\x71\xe8\xf3\x81\xf9\x24\xe3\x34\xa4\x4b\x1c\xd4\x73\x56\xd5\xed\x74\x23\x08\x36\xa6\xd7\xf6\x7d\x27\x39\x84\x65\x02\xb3\xb1\x57\x51\x46\x44\x73\xe6\xe8\x06\x5b\x46\xea\x1a\xab\xbe\xc0\x7c\x7c\x6d\xb4\xb7\xac\xb5\x45\x73\xf1\x06\x16\xcf\x7b\xa9\x3c\x7c\x9f\x33\xba\x25\x44\xca\xa5\x0a\xcc\x9c\x58\xe5\xec\xcf\x3e\xab\xde\x30\xab\x19\x70\xbb\x02\x6a\x4b\x46\xfb\x0b\xf9\x18\x2d\xa5\x7a\xf1\xaf\xe8\x98\xdf\x26\x26\xdf\x2c\xc4\xd9\xc9\xc9\xd8\xc2\xec\x3c\x23\xb3\x0a\x1b\xd6\xb9\xb0\xac\x8d\xa3\x13\xf2\x8b\xb0\x78\xee\xd4\x09\x5d\x5c\x8d\xc8\x32\x29\x20\x62\xff\xcd\x3a\xcc\x22\xd9\x6b\x5e\xb4\xc1\xa7\x75\x3f\xe3\xd1\x60\x70\xbf\xdc\x3b\xcd\x52\x13\x6b\xb7\xf1\x33\x36\xf8\x22\x22\xeb\x6c\x30\x28\x45\xc4\xa7\xea\x14\x70\x94\x32\xda\x5d\xeb\xeb\x67\x90\x6f\x3c\xa0\x56\x98\x40\x7c\x7a\xc2\x1d\x41\x59\x60\xc5\xc7\x44\x14\x3d\x0e\x68\x94\x4b\x15\xa7\x8c\xeb\x8e\x4a\xaf\x1a\xdd\x3b\x73\xb3\xe2\xd5\xbb\x3f\x88\xd4\xe3\xd8\x13\x29\xf5\xc2\x78\x86\x53\xef\xc9\xca\x23\x11\x7b\x52\xf0\x68\xc4\x8e\x37\x5e\xe0\x54\x5a\xa7\xda\xda\xcd\xf6\x8d\xfc\x11\x21\x04\x56\x73\x20\x9d\x82\xb9\x03\xfa\x90\x01\x96\x20\x1e\xdd\x37\x0c\xe9\x32\x62\xfd\x9d\x37\x8c\xc2\xa9\x9a\xa4\x70\x1e\x73\x98\x3c\x00\x47\x39\xc7\xdc\x9d\x33\x25\x9a\x88\x2d\xcc\x4d\x46\x87\xf3\x4c\x5d\xe3\x91\xe0\xe9\xe6\xf2\x48\xdf\xfe\xdc\x0d\x08\xdd\x8b\x4f\x46\x6b\xc3\x33\x7d\xd6\xdd\x2e\xd2\x36\xd5\x23\x32\x46\x94\x34\x1c\x62\x0d\x47\xb2\xe6\x9c\x05\xe0\x4a\x1e\x42\x43\x9c\xa3\xaf\xb0\xd8\x01\x8d\x4b\x87\x85\x70\x53\x0e\xfb\xa3\x5b\x86\xf2\xea\x19\x94\x61\x1c\x5d\x2c\x0a\xc7\x04\xa6\x5f\x4d\xc4\xc9\x76\x77\x79\xcf\x7e\xd9\x14\xb2\xb0\x7a\x0c\xd2\xe7\x68\x6c\xed\x15\xdf\xfa\x9b\xad\x04\x04\x69\x94\x17\xbd\x08\x57\x08\x10\xef\x38\x2d\xd8\xba\xbf\xde\xc9\xab\xda\xfc\x9c\x84\xd5\x03\xf4\x15\x81\x98\xdb\xed\xde\xf6\xaa\xef\x01\x49\xc4\x04\x26\xa7\x12\x4c\x90\x57\x31\x9d\x79\x39\x0e\x45\xea\xac\x57\x98\x39\x83\xf9\xbc\xd1\xac\x9a\x3b\xcb\x46\xbb\x0d\xd6\xca\x08\xfd\x9f\x99\x60\x6c\xf6\x9f\x53\xaf\x99\xb1\xb0\x1e\x94\xc4\x11\x7e\xb4\xff\xae\x22\x2b\x87\xda\xcf\x7d\x1b\xef\x63\xde\x35\xed\x77\x05\x55\x8b\x47\x7b\x83\x09\x4c\xc5\xd1\x4a\xeb\xff\x06\x81\x5f\x44\xe6\xce\x32\x2f\xc3\xda\x37\xa4\x39\x1a\x97\xb0\x94\xc1\xff\xb9\x2f\x1a\xab\xde\xe8\xa5\x72\x70\xeb\x9c\x58\xbb\x3f\x54\x78\x5e\x4d\xa8\x79\x0e\xce\x40\x6e\x1f\x0b\xa5\xac\x2b\xfa\x7a\xa9\x35\xb8\x79\x8b\x51\xbc\x38\xc6\x0a\x7c\x08\xdb\x83\xd2\x39\xf8\xf8\xd6\x7d\x36\x38\xdb\xd6\x2d\xe1\x1e\x4c\x17\x70\x60\xc4\x90\xac\x0b\x54\x79\x9f\xbb\xa7\xad\x6f\x0d\x70\xb2\x4e\xbe\x07\xef\xb2\xa0\x5a\x30\xbb\x7f\xb8\x17\xfd\x4b\x3c\x16\x9b\x46\x2e\x65\x49\x12\x86\xb2\xc8\xc7\x7d\xf0\x62\xff\xbb\x1a\x06\x3d\xe2\xa8\x1f\x4c\xfc\xb6\x54\x4a\xcc\xcf\xfd\xce\xa0\x45\xaf\x6a\xca\xf8\xf0\xcb\xd8\xaa\x1f\xc3\x4f\xd7\xf0\x93\xbd\x5a\x70\xe5\xd1\xe3\xd0\x3e\xc2\x9d\x3a\x0f\x3e\xa2\x72\xa1\x47\xd0\xb0\x7a\x68\x1d\x9c\x39\x14\xe9\xf2\xb0\x4b\x3f\x0e\x7f\xc9\x8a\x34\xc6\x87\x38\xc5\x95\x20\x56\xea\x14\xac\x55\x60\xa5\x0c\x3a\x79\x90\xde\x05\xed\x96\xfb\x63\x0f\xa9\x0c\xcc\xac\x83\xb5\x0a\xd1\xc9\xf4\x3b\x87\x62\x06\x6d\x5c\xe6\x5c\x87\xee\xf6\x24\xc4\xe0\xee\x50\xd4\x70\xed\x15\xf2\x95\x0f\x91\xcf\xcf\x83\x1c\xf0\xe3\x1d\xda\x27\xbc\x1f\x2c\x10\x5c\x26\x73\x67\x99\x7c\x68\x56\xb7\xcc\xe2\x31\x62\x74\xfc\x94\xe9\x53\x74\x22\x9a\x48\x20\x61\xab\x72\xaa\x8a\x54\xd9\x0b\x6e\x7c\x80\x85\xec\xef\x7d\x6f\xa2\xbf\xfb\x50\xa1\x8b\x69\x5b\x6b\xc9\x8a\x84\x68\x9b\x6a\x53\xc7\x94\xd0\x83\xd5\xfd\x02\xb2\x5b\x24\x3c\x1b\x82\x84\x92\x28\xd1\xd2\x96\x7e\xba\x38\x19\x45\x41\xcd\xc7\xe6\x26\x5e\x47\x19\x5c\x28\x14\x16\xaa\xd5\x4b\x95\xd7\x68\xde\x40\x7f\x17\x2b\x30\x5f\x30\x6e\x77\x41\x71\xd5\xcf\xfc\x3f\x00\x00\xff\xff\x1f\x18\xa3\xce\x3a\x14\x00\x00")

func localesZhCnHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesZhCnHomeYml,
		"locales/zh-CN/home.yml",
	)
}

func localesZhCnHomeYml() (*asset, error) {
	bytes, err := localesZhCnHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/zh-CN/home.yml", size: 5178, mode: os.FileMode(420), modTime: time.Unix(1646821781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"locales/en-US/home.yml": localesEnUsHomeYml,
	"locales/zh-CN/home.yml": localesZhCnHomeYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"en-US": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesEnUsHomeYml, map[string]*bintree{}},
		}},
		"zh-CN": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesZhCnHomeYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
