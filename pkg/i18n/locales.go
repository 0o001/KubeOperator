// Code generated for package i18n by go-bindata DO NOT EDIT. (@generated)
// sources:
// locales/en-US/home.yml
// locales/zh-CN/home.yml
package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localesEnUsHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x59\xcd\x72\xe3\xb8\x11\xbe\xf3\x29\x60\xb9\xa6\x72\x99\x4c\xed\xd9\x37\x0e\x45\xdb\x8c\x25\x92\x45\x52\xde\x71\x2e\x2c\x88\x6c\x49\x88\x29\x80\x05\x80\xf6\x6a\x6f\x79\xaf\xbc\x53\x5e\x21\xd5\x00\xf8\x27\xc9\x3b\x9e\xca\x69\x2c\x09\xfd\x83\xfe\xf9\xfa\x6b\xcc\x6d\x25\x8e\x47\xc1\xbd\xd8\x5f\x87\x65\xf8\x23\xca\x8b\xfc\x8e\x2c\x62\x7a\x04\x42\x1b\x09\xb4\x3e\x11\xf8\x83\x29\xad\x16\x5e\x94\x96\x71\x52\x8c\x87\xd2\x06\xa8\x02\xb2\x63\x4d\x43\x18\x27\xfa\x00\x44\xc2\x9e\x29\x2d\x4f\x24\x4a\x89\xb0\x5f\xa9\x93\xd2\x70\x24\x0a\xb4\x66\x7c\x4f\x5a\xba\x87\x85\xe7\x79\xb7\x55\xd3\x29\x0d\xd2\x0b\x56\x9b\xbc\x08\xb3\x72\x19\xae\xc2\x22\x2c\xef\xfd\x68\x15\x2e\xef\xc8\xa2\xa2\x9c\x70\xa1\x49\x0d\x0d\x68\x20\xee\x38\x1a\xaa\x3a\x29\x81\x6b\xa2\x34\xd5\xb0\x18\x14\x44\xb9\x71\x2f\xdb\xc4\x71\x14\x3f\xdc\x91\x45\x71\x98\x88\x29\xa3\x4c\x76\x9c\x33\xbe\xbf\x10\x5a\x25\x81\xbf\xba\x23\x8b\xe8\xd8\x0a\xa9\x07\xa9\x8a\x72\x94\xda\x02\xe9\xda\xbd\xa4\x35\xd4\xa3\x64\x9c\x94\xf7\xab\xf0\xc7\x1d\x59\x04\x94\xff\x4d\x93\x1d\xe3\x35\xd9\x35\xf0\x07\x61\xad\xbd\xa0\x84\x1a\xb8\x66\xb4\xf1\x66\x77\x2b\xb3\x30\x4f\x36\x59\x10\xde\x91\xc5\x3d\x65\x0d\xd4\x44\x0b\x77\xcd\x1b\x52\x1c\x40\x02\xba\x4b\x39\xa1\x4a\x89\x8a\x51\x0d\x35\x39\x08\xa5\x49\xc7\x6b\x90\x44\x1f\x98\x22\xaf\x70\x5a\x7c\xa0\xb6\xfc\x67\x12\xff\x92\xee\x3f\x05\x87\x2b\xba\xef\xfd\xcd\xaa\x28\x83\x2c\x5c\x86\x71\x11\xf9\xab\x32\xf0\x63\x13\x2c\x6b\xf6\x8e\x2c\x96\xb0\xa3\x5d\xa3\xc9\x78\xd3\x49\xc4\xac\xd1\x7a\x61\x2b\x2b\x78\x0c\x83\xa7\x31\xb9\x26\x35\xa3\x14\xc7\x72\x1b\x45\x4d\xd9\x98\x0a\x54\xe6\xef\x4e\x81\x34\x67\x16\x5e\xea\xe7\xf9\xef\x49\xb6\x1c\x9c\x89\x37\x2b\x4c\x5c\x4b\x95\x7a\x17\xb2\x26\x7d\xd9\x6c\x81\x6c\x1b\xca\x5f\xff\xfb\x9f\x7f\x2f\xbc\x34\x8b\x9e\xfd\x22\x2c\x9f\xc2\x97\x73\x41\xf4\xa4\x95\xec\x8d\x6a\xc0\x8b\x4f\xbc\x18\xc5\xbd\x5b\x0c\xbf\xf7\x98\xe4\x45\xe9\xaf\xb2\xd0\x5f\xbe\x8c\x5d\xf0\x88\x99\x39\x6f\x15\x97\x19\x23\x31\x5c\xfa\x6a\x42\x6c\x66\x31\x27\x4e\xc5\x24\x31\xef\x4c\x1f\x4c\x00\x5c\x3d\x5e\xd3\x5b\x7e\x7f\x29\xd3\x2c\xf9\x47\x18\x14\xff\x97\x89\x56\x8a\x7f\x41\xa5\x17\x5e\xfe\x92\x17\xe1\xba\x74\xcd\x7e\x9f\x6c\xe2\xe5\xf5\x5e\x6f\x44\x45\x1b\x6c\xf4\x1d\x93\x4a\x9b\x40\xc5\x09\xca\xf9\xcf\x7e\xb4\xf2\xbf\xaf\xb0\x44\x62\x41\xa2\x96\xd0\x37\xca\x1a\xba\x6d\x60\xe1\x45\xb9\x6d\x36\x73\x87\x49\x9b\x33\xdb\x79\x56\x29\x3a\xbc\xb0\xf1\x8e\xd6\x69\x92\x15\x65\x98\x65\x49\xd6\xe7\x2c\x16\xa4\xa6\x9a\xe2\x35\x9d\xd8\x3b\x55\x64\x27\x3a\x5e\xdf\x10\xe7\x69\x75\x80\xea\xd5\xf8\xe9\x8e\xec\x58\x03\x37\x73\xa5\xa8\xae\x7c\xf6\x57\x1b\xf4\x34\x3c\xb6\xfa\x64\xf5\x0a\x4e\x1a\xc6\x81\x7c\x51\x67\xe7\x93\xa2\x0c\x92\x75\x6a\x72\xd0\xcb\x45\xbc\x12\xc7\xd6\x60\xd4\x5f\x0a\xff\x9e\x25\xf1\x43\x79\x9f\x64\x6b\xbf\x70\x62\x52\x42\xa5\x89\xf5\x4e\xc8\x23\xd5\x1f\x0a\x4f\xba\x70\x9a\x95\x60\xd2\x42\x42\xdb\x08\x7c\xa8\xc3\x55\xc9\x3c\xad\x36\xeb\x9f\x90\x76\xd5\x16\x6f\xd6\x77\x64\xe1\x13\x2d\x34\x6d\x88\xd8\x91\x2f\x8a\x48\xf1\xae\xf0\x4f\x73\x7d\x2a\x81\xd0\x2d\xc7\xeb\x34\x5f\x89\x7a\x45\x30\x34\x7a\x06\x78\xea\xeb\x36\x8a\xe7\x4d\xb1\x45\x00\x35\xa5\x2a\x41\x89\x4e\x56\xe8\xc4\x57\x22\x81\x2a\xc1\xef\x3e\xf0\x27\xf7\x9f\xe7\x58\xa7\xe8\x9b\x2b\xf8\x33\x61\xcf\xbb\x45\x1c\x19\x11\x04\xe3\xb0\xf6\x8b\xe0\xb1\x47\x81\x1e\x42\x98\x22\xac\xcf\xce\xc2\x4b\xb2\xe8\x21\x8a\x5d\xe0\xa7\xe7\x85\x64\x7b\xc6\x69\xf3\x91\xe0\x26\x1f\xe7\x8b\x1f\x14\x91\x71\xb4\xe8\xe1\xcc\x0d\x24\xe0\xd8\x16\x93\xb2\x15\x5c\xd3\x4a\x9b\xc2\xa5\xf5\x91\x71\x1c\xa7\x54\x0b\x79\xe3\x14\x4e\xb3\x17\x0b\xa2\xba\xea\x60\x14\x9a\xfe\xf3\x97\xeb\x28\xbe\xc4\x69\x34\x5a\x3b\xac\x36\x4a\xad\x0b\x17\x58\x7d\x33\x77\x3a\x0b\x57\x7e\x11\x2e\x27\xf0\xb2\x41\xb1\x03\x45\xd7\xa7\x20\xe2\xb0\xc3\xb8\xb0\x5a\xfa\xe9\xe0\xc1\x26\x5d\xfa\x83\x07\x4d\x4d\xdb\x73\xc3\x50\x33\x6b\xf7\x39\xcc\xa2\xfb\x97\x32\x48\x96\x13\x0a\xf0\x0c\x92\xed\x58\x45\x35\x13\x9c\x54\xa2\x06\x02\x52\x0a\xb9\xf0\xc2\xb5\x1f\xad\xca\x65\x94\x3b\x94\x59\x53\xd6\xf4\x0c\x43\x99\x12\xac\x99\xfa\x64\x60\x7b\x6d\xd3\xf4\x86\x47\x54\x78\xa4\xba\x3a\x90\x9d\x29\x2d\x0b\x6f\x38\xc9\x86\xfa\xc9\xf1\xd3\xe0\x2b\x86\xe6\x2f\xc6\x58\x5f\x23\xe7\x4a\x0c\xae\xdd\x91\xc5\xbb\x14\x7c\x3f\x0e\x3a\x22\xe4\x44\xc4\x3a\x68\x26\xce\xe0\xdc\xf9\xc4\x89\x93\xf2\x69\xf3\x3d\x4c\xa3\xd2\x14\xc1\x08\xd9\x0a\xec\xa5\x5f\xbb\x2d\xb4\x8c\xd0\x63\xcd\xf8\xa4\x64\x79\x4f\xd0\xf2\x3e\x7c\x06\xce\xa7\x0a\xc7\xfc\x0f\x53\x40\x2a\x3d\x53\x9c\x46\xa4\x11\x7b\xc6\x09\xe3\x16\xc9\x30\x63\x6e\x4e\xb8\xea\x20\x47\xca\xe9\x1e\x8e\xc0\x35\x4e\x54\x64\x8a\x82\xf7\x03\x2d\x0b\x1f\xa2\x24\xfe\x2c\x41\x22\x56\xf8\x67\x23\x0d\x79\x0d\x9a\xc2\x7f\x7b\x43\xc8\x8d\x3e\x6d\xc6\x10\xa3\x9f\xcd\xcd\x86\xf2\x39\x9d\xb4\x33\x2a\xb0\x65\xb0\x77\x41\x72\x13\xfc\xca\x78\xaa\x04\xdf\xb1\x7d\x27\x4d\xcc\x4c\x99\x45\x6b\xff\x21\xfc\x58\x15\x3b\xd2\x3d\x7c\x4e\x51\x5a\xe6\x8f\x49\x66\xc7\x8d\xea\x76\x3b\x56\x31\x24\xce\x11\x12\xd4\x5b\xd1\x02\x57\x9a\x56\xaf\xde\x43\x58\xf4\x19\xe8\xeb\x31\x16\x7d\x90\xcd\x58\xc0\xf3\x2e\x8f\x6b\x38\x6e\x41\x0e\x40\xe1\x2f\xb1\xfa\xbf\x28\x32\x60\xc3\x16\x80\x13\x5a\x1b\xb2\x3c\x85\x93\x1e\xb5\xbe\xa8\x19\x02\x1a\xfd\x8e\x66\x39\x13\x03\xf9\xec\x47\xd6\x87\xcc\xb3\xaf\xad\x2b\xb4\xb3\x97\x7d\xf4\xf3\xd2\xa5\x67\x32\xf0\x26\xa9\x1c\x52\x13\x5c\xc1\x43\xef\x96\x8b\x1a\xbc\x18\x71\xa9\xa7\x7e\x6e\xc3\x28\x0b\x3f\x7f\xc2\x61\x58\xd7\x04\x0f\x61\xcf\xba\x65\xc5\x7c\xec\xab\xc6\xed\x1c\x5f\x5b\x9b\xb0\x77\xca\x34\x61\x9a\xd4\x82\xc3\x37\x34\xb0\xa5\xd5\x6b\xd7\xfa\x55\x25\x3a\xae\xbd\xd4\xcf\xfc\x75\x19\xae\xd3\xe2\xe5\x3c\x6d\x2d\x95\xf4\x08\x1a\xa4\x69\xf7\xa2\xcc\x37\x69\x6a\xb3\xbb\xe1\xaa\x6b\x91\x47\x60\x0d\x9f\x5a\x5c\x8a\xe6\x7c\x7b\x86\xa4\x16\xd1\x06\x32\xf9\xdd\x0f\x9e\x36\x69\xe9\x07\x41\xb2\x89\x7f\x85\x56\xce\x1c\xff\x34\xbf\xf4\x6e\xb1\x65\x7a\xe3\xe9\xca\x8f\xaf\x31\x64\xeb\xa3\xb5\x83\xe7\xc7\xca\xea\x14\xd4\x3d\xb4\xf4\x7b\x5a\xbf\xbc\x4c\xcc\xcc\x77\xa3\x4f\xdc\xc6\x58\xf9\xfc\x25\x9c\xe9\xef\x26\x06\x67\xa1\xfc\xc9\x7d\x6c\xdc\x08\x75\x81\xfb\xd5\x9b\xf5\x46\xa2\x55\x98\x4f\x37\x19\x07\x08\xae\x04\xf5\x68\x08\x99\x2f\xd9\xc2\x4e\x48\x20\xea\x9d\xe9\xea\x80\x8b\xb8\xbe\xf0\x64\x06\x63\xd6\xca\xe5\x16\xbd\x05\x14\x46\x41\xa8\x49\xd7\x9a\xc6\x9d\x88\x65\x61\x5e\x24\x59\x78\x29\x27\x41\x69\x21\x19\xdf\xcf\x5b\x3d\x73\x54\xef\x32\x5f\x93\x6b\xfe\xf4\x72\xe3\x06\x72\x7d\x41\x1a\xfb\x7f\x58\x87\xfa\x34\x6f\xa1\x11\x38\xf5\xb4\x98\xe3\x74\x81\x9b\xb0\x68\x41\x3a\xf6\x31\x60\x43\x0b\x12\x47\x9c\x41\x07\x4b\x48\x2f\xe0\xed\xd1\xed\x5b\x03\xbc\x2d\xbc\x81\xfd\x5a\xc8\x0c\xdd\xc9\xfe\xfa\xa6\xf0\x2c\x64\x9a\x8e\xb8\xd4\x99\xba\xf2\x9c\xe8\x3c\x6b\xdc\x4b\x99\xef\xe7\x0d\x3a\x11\xf6\x6e\x91\x8f\x59\xba\x36\xa0\xb4\x2d\xa4\xfc\xc4\xab\x83\x14\x9c\xfd\x89\x29\x56\x20\x2d\xa5\xfa\xcd\x91\xbb\x55\xf2\x10\xc5\xe7\x32\x9b\x29\xa7\x45\x4a\x72\xe3\x4e\x8f\x24\xad\x18\x1f\x83\x5a\x29\x0e\x6c\xcb\xb4\x22\x78\xc6\xd9\xd8\x49\x71\x44\x16\xb1\xc7\x02\x63\xfc\xdb\x67\x28\xf1\xd4\x44\x99\x17\x7e\xb1\x99\x3c\x4c\x59\x6e\x6d\x4d\x38\x52\x83\x8d\xcb\x94\x17\x44\xb9\x41\xef\x73\x48\xc7\x7d\x94\x29\xa2\xa9\x7a\x3d\x87\x6f\x8c\xd8\xdb\x31\x30\x33\xd6\x7b\x5e\x97\x41\x12\xdf\x47\x0f\xe3\x33\x40\x30\x9d\xbe\x17\xec\x6c\x14\x38\x7f\xe6\x2a\xce\x27\xf7\x47\x95\x59\x43\xdb\x88\xd3\xd1\x0c\x82\x86\xf2\x4f\x56\xa8\x77\xcb\x5a\xe4\x01\x83\x9f\x68\x0f\xb8\x06\x09\x35\xee\xee\x0a\xf6\x46\x25\xba\xd0\xb0\x4a\xab\x11\xec\x8c\xef\x98\x8b\xf1\xd8\x57\xd2\xce\xdf\x01\xe8\x9e\x32\x3e\xbc\x0c\x4e\x17\xff\x28\xc5\xd5\x10\x3d\xac\xaa\xae\x65\x50\x13\xca\xeb\x89\x93\x12\x8c\xa6\xda\x08\x47\xf1\xb3\xbf\x8a\x30\x1c\x51\x6b\xb7\xa8\x37\xda\xb0\xba\x27\x31\x93\xa7\x1a\xde\x21\xfb\xc0\x6d\x73\x0f\x1c\xaf\x6e\xaf\x41\xeb\x5a\x82\x52\x60\x2c\xfe\xf6\xed\x92\x1c\x29\x4d\xa5\xb9\x8c\x3b\x69\xbc\x51\xdd\x96\x03\x56\xaa\x09\xd3\xdf\x5b\x21\x1a\x34\x97\x26\xc9\xea\x6a\x9e\xa2\x94\xe0\x99\x09\xcb\xb9\x32\x23\x86\xb7\x0e\x4b\x1f\xe7\xb7\x1e\xd8\x89\x25\xc0\x4a\xcb\x93\x87\xcc\x2b\x2f\xb2\x97\xcb\xa7\xa5\x62\xfa\xa2\x2a\x76\xf6\x75\x8e\xca\xea\xc0\x34\x54\xba\x93\x60\x86\xfd\x45\xb1\x5d\x28\xdc\xe4\xc3\x15\x3e\xa1\xce\xc4\x1f\x7b\x72\x32\xe6\x06\x98\xee\xa1\x3e\xcd\x92\xe7\x68\x19\x66\x03\x61\x9c\xc2\x7d\x25\xc1\xc4\x04\x0b\xa4\xd3\x02\xd7\x81\x8a\x1c\x91\x13\xb9\x48\x1c\x29\xef\x68\xd3\x9c\xf0\x4b\xb6\x3b\xcd\xb7\x7e\x35\x41\xcb\xe2\x25\x0d\x67\x26\x0c\x48\x0e\x7e\xa2\xae\x81\xf9\xdc\x90\x84\x37\xa7\xfe\xb3\x22\x08\xce\x5f\xc9\x1c\x24\x7f\x4e\x7a\xc6\x51\xb1\xfb\x0b\xd2\x43\x0c\x04\xc1\xfe\x1a\x4d\xc0\x21\x39\x9f\xf0\xc3\xd8\xa4\x95\x36\x2f\x8d\xb6\x33\x15\x28\x85\x3b\x50\x1e\xe6\x39\x72\xef\xa7\xf0\x65\x86\xe0\xee\x77\xf3\x2c\xe9\x3a\xc2\x31\xea\x34\x4b\x70\x2e\x4e\xfa\xa6\x3f\x6b\xf7\x6b\xc1\xdf\x40\xaa\x29\xd7\x33\x62\x48\x85\xe3\x64\xba\xf7\xe8\xb3\xe7\x88\xad\x79\x03\xd2\x82\xd0\x81\x5a\x0b\x39\x3e\x3f\xa2\xd3\x5a\x48\xba\x07\xcf\x14\x00\xba\x8d\x35\xf0\x23\x8f\x90\x58\xe5\xf6\x37\x14\x7d\x63\xc8\x5b\xce\x2b\xd3\x60\x6e\x14\x97\xe1\x8f\x30\xd8\x14\x51\x12\xdb\xb7\x24\x84\xdb\x21\x46\xf0\x07\x54\x9d\x9e\x30\x21\xf7\xda\xef\x9c\x18\x7a\x1b\x8b\xd8\xc0\x0f\x69\x28\x7e\xff\xcd\x90\xe9\x4a\x1c\x5b\xc1\x81\x6b\x2f\x48\xd6\x69\x12\x87\x71\x31\x2c\xce\x16\x6a\xdd\xef\x67\xbe\x7d\x23\x4b\x61\xff\x87\x00\x5a\xa0\x76\xd8\x0c\xd8\xfa\x6d\xf1\xbf\x00\x00\x00\xff\xff\x67\xba\xcc\xfa\x26\x19\x00\x00")

func localesEnUsHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesEnUsHomeYml,
		"locales/en-US/home.yml",
	)
}

func localesEnUsHomeYml() (*asset, error) {
	bytes, err := localesEnUsHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/en-US/home.yml", size: 6438, mode: os.FileMode(420), modTime: time.Unix(1656657925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesZhCnHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x58\x5d\x53\xda\xda\xfa\xbf\xcf\xa7\xc8\xe0\xec\xbb\xfd\xef\xfc\xaf\x7b\x97\x42\xb4\x39\x42\x92\x49\x82\xbb\x9e\x9b\x8c\xb5\x9c\x1e\x4f\x2b\x30\xa2\x67\x66\x9f\xab\xd2\xaa\x80\x82\xd0\x56\x3c\x55\x69\x15\xab\x95\xad\x05\xd4\xb6\x42\x79\xd1\x2f\x93\xb5\x12\xae\xfc\x0a\x67\xd6\x5a\xc9\x62\x01\xd5\xf6\xc6\x91\xe4\x79\x5b\xcf\xcb\xef\xf9\xad\x8c\xcd\xc6\xe6\xe7\x63\x51\x4e\x16\x42\xa2\x29\x3e\x92\x74\x43\xbf\xcf\xfb\x40\x21\x67\x1f\x9f\x81\xc6\x05\xa8\xbe\x03\xa5\x8a\x8f\x93\x54\x53\x56\x8c\xbe\x80\x53\x6f\x80\x52\xc5\xfe\xd2\xb6\xdb\x7b\x4e\xed\xca\xee\xd6\x7a\xe5\x6f\xbd\xf7\x07\xa0\x7c\x0a\x56\xb7\xad\xf6\x5b\xd0\x7a\x2b\xa9\x3e\x8e\x1b\x9b\x7d\xbe\x94\x58\x8c\x2c\x70\xfe\x60\x58\x37\x44\xcd\x0c\x88\x41\xd1\x10\xcd\x71\x41\x0a\x8a\x81\xfb\xbc\x0f\xfe\x77\x1f\x7e\x29\x82\xf4\x7e\x6f\xfb\x10\x74\xdf\x82\x4c\xce\x5e\xbb\x84\x2f\x92\xf6\xce\x72\x6f\x77\xd5\xbe\x3a\xf4\x51\x55\x49\xc7\x41\x68\x61\x59\x96\xe4\x89\xfb\xbc\x8f\x08\x58\xcd\x1c\x28\x55\x9c\xeb\x82\x53\xce\x5a\xcd\xea\x4d\x27\x39\xa2\x12\x54\xfc\x42\x10\x9d\xab\xde\x01\x2b\x47\x44\xcd\x75\x9c\x4b\xd9\xad\xe3\xbe\x82\xac\x98\xe3\x41\xf1\x11\x0a\xac\x74\xe2\xbc\xea\xc2\xcc\x15\x48\x9f\x81\xce\x77\xf8\xe2\x98\x9f\x8b\xfb\x38\x74\xa4\x85\xc8\x93\x48\x74\x71\x6e\xe6\x39\x37\x70\x1a\x53\x13\x75\x25\xac\xf9\x45\xe4\x89\x1c\xe8\xf0\xdc\xf9\x7a\x74\xd3\x49\x3a\xf5\x23\xfb\xf8\x5d\xef\xcd\x91\xd5\x5c\x87\xa5\x0c\x58\xf9\xe2\x24\x37\xad\x66\x1b\x96\x5a\xbe\x5b\x8c\x98\x7f\x57\xe4\x5f\xb5\x04\xf2\x75\x7b\xb3\x02\xb2\xd8\xd8\xb8\x10\x0e\x1a\xa6\x5f\x13\x03\xa2\x6c\x48\x42\xd0\xf4\x0b\x32\xce\x02\xf1\x83\xf2\xd6\x7e\xe7\xd4\x0e\x41\xaa\x0a\x73\x35\xab\x99\x73\x5e\x75\x89\x13\x9c\x3a\xdc\x09\xfe\x87\xa2\x7f\xb2\x5f\x24\xe2\x91\x74\x05\x51\xb0\x9a\x1b\xf6\x66\x05\xa6\x1b\xe8\xe1\x6e\x13\x14\xb2\x3e\x4e\x15\x74\xfd\x0f\x45\x0b\x50\x87\x72\x38\x48\xb2\xbe\x6a\xef\x27\x3d\xbd\x96\xfd\x57\x0b\x3b\x52\x35\x69\x4a\x30\x44\x73\x52\x9c\x1e\xd6\xf0\x4e\x38\xa4\xc1\x71\x63\xff\x8c\x25\x16\xb9\x87\x8a\x6e\x98\x42\x50\x13\x85\xc0\x74\xbf\x27\x49\x3a\x99\xa6\x75\xf3\x8a\xa5\xe9\x51\x46\xd3\x49\xf5\xec\x76\x9e\xa4\xd3\x6b\xbc\x51\x03\xe6\x83\x69\x53\xd5\x94\xbf\x89\x7e\xe3\x57\x6d\x95\xbf\xdb\xbb\x35\x1c\xbe\x3e\xad\x1b\x62\xc8\x74\x67\x69\x5c\x09\xcb\x01\x77\x94\x56\xd2\x64\x70\x60\xe9\x33\x2c\xb5\x24\x95\x14\x42\x41\xa2\xc2\x94\x20\x05\x85\x07\x41\x54\x37\x49\xe5\x9d\x6f\xcb\xb0\x55\x40\x99\xb9\xfc\xe2\xe3\x24\x9d\xb4\x36\x0e\x11\xdb\x72\x23\xb0\x9a\x1b\x64\x08\x79\x49\xe5\xc1\xea\x85\x7d\x92\xbc\xe9\x64\xdd\x96\x4e\x17\xc0\xda\x1e\x6c\xb4\xc1\xda\xbe\x8f\xe4\x52\x0a\xa9\x8a\x66\x98\xa2\xa6\x29\x9a\x57\x03\x58\x3a\x71\x9b\x3f\x5f\x27\x73\x63\xef\x2c\xc3\xe2\x19\xcc\xd5\xf0\x59\x1b\xf0\xe3\x0b\xb8\x77\x44\x5e\xc1\xad\x94\xd5\xbe\xc4\x61\xb3\x06\x91\x29\x73\x4a\x08\x86\x51\xf4\xbf\x25\x78\xa7\x9c\x85\xa5\x8c\xfd\x57\x8b\xd8\x19\x12\x56\x0c\xd3\xaf\x84\x54\x9c\xf3\x21\x25\x2c\x8e\x06\xbd\x96\x85\xc5\xaf\x83\x7a\x7f\x68\x8a\x3c\x61\x8e\x2b\x5a\x48\x30\xa8\x86\x7d\x5a\x07\xf9\x8f\x70\xbf\x03\x3a\x79\xab\x99\x83\xd5\x8f\x76\x79\xc8\x1f\x33\x21\x6c\x3d\x5c\x8f\x99\x2b\xe4\x2e\x7d\x06\xea\xab\xbd\x37\x47\x83\x9a\x6e\x07\xdc\xa5\x46\xca\x3e\xa8\xe6\xb6\x90\x1c\x0e\xa1\xde\x59\x39\xe7\x87\x0e\x07\xab\x1f\x41\xb3\x79\xd3\xc9\x3a\x8d\x2f\xce\x75\xca\x55\xa6\x78\xe0\x75\xa0\x84\xfd\x91\x3a\x93\x76\x40\x86\xac\xeb\xf7\xa8\xef\xdd\x5e\xcc\x82\x8d\x3d\xb0\xbb\x7f\xd3\xd9\xf9\x2d\xf1\xc3\x20\x74\x61\x4a\xa4\x56\x7e\xa6\xcf\x71\x63\x4b\x89\xc8\x42\x7f\xc0\xd1\xc1\x43\x82\xe1\x7f\x48\xa7\xbb\xb7\xb9\xed\xd4\xeb\x3e\x4e\xd1\xa4\x09\x49\x76\x53\x4a\x45\x36\xf6\x06\xa5\xc2\x7a\x1f\x9b\x05\xbf\x21\xe1\x58\x08\x9e\xc0\xd2\x09\x28\x20\x34\x23\x4d\xe6\x24\x37\xd1\x96\xa9\x95\xed\xc2\x2a\x78\xfd\x0e\x77\x18\xd6\x66\x73\x8f\xa0\xbc\x7a\x48\xf4\xb1\x84\x10\x08\x49\xf2\x6d\xb8\xc7\xcf\x3c\x99\x9f\x8b\xf2\x44\x9c\x60\x8c\x73\x70\xca\x20\x20\x1b\x9d\x26\x06\x05\x43\x0c\x30\x43\xef\x86\x79\x51\xa6\xe8\xeb\xd5\x3a\x18\x10\x54\xea\x34\xac\x06\x04\xec\x14\x3d\x1d\x70\x66\x5d\xd7\xe0\xe6\x77\xec\x69\x4a\xd4\xa4\xf1\x69\xd3\xaf\x04\x98\x8d\xd8\x3b\xc9\x3a\xf5\x24\x93\x2d\x31\x24\x48\x41\x33\x20\xe9\x2e\x0c\xf4\x5e\xd6\xac\xf6\x25\x59\xbb\xce\xc1\xa9\xfd\x29\x79\x5b\xba\x3c\x5d\xb6\x18\x44\x1b\x64\xbf\xf7\x56\x72\x14\xba\x5c\xd8\xa7\x05\xd6\xd1\xaf\x3e\xfc\x7b\x48\x4f\xb1\x9f\x94\xd3\x03\xfe\x41\x5d\x8c\x22\xac\x16\x4c\x6f\x0d\x96\x9f\x04\x85\x81\x9b\x04\x64\xd7\xce\x19\xdc\x96\x15\x73\x32\xfc\x40\x54\x25\x13\xd7\xb1\x8f\x91\x83\x8c\xc3\x6a\x56\xc9\x3f\xfc\xb3\xa5\xc7\x91\xf8\x1c\x3f\x33\xff\x64\x2e\xca\x13\x57\xac\x95\x7e\xed\xa8\x1d\x52\x32\x92\xa7\x11\x3b\xf6\x76\x1b\x74\x8b\xd6\x75\x19\x26\xeb\xb8\xf9\x17\x22\x4f\xe7\x62\x51\x6f\x1d\x68\xe2\x84\xa4\xc8\xbf\xb4\xf3\x41\xb6\x05\xf6\xf6\xd8\x75\xc0\x6c\x6a\x6e\xec\x3f\xb1\x68\xc4\xb3\x8a\xb6\xfd\xaf\xd9\xf4\x2c\x0c\x6c\x99\x57\x15\xbb\x7b\xe1\xd4\xca\x20\xfd\x66\x90\xfd\x10\x30\x77\x36\x1a\x20\xbf\xe5\x42\x13\xde\x6e\x2c\x86\xf7\x56\x72\x76\x97\xec\x28\x29\x24\x4c\x88\xb7\x29\x16\x4b\xe0\x55\xfe\x36\x45\xd5\xd4\x1f\x2a\x1a\xca\xb2\x14\xe7\xbd\x05\xc5\x71\x63\xb1\x78\x24\x9a\x58\x9c\x99\x7d\xc6\x4d\x88\x86\x97\x3c\xaf\x47\xfa\x30\x8b\x33\x85\x92\x12\x5f\x88\xfd\x2b\x32\xbb\x18\x8a\xcc\x3f\x8e\x2c\xd0\x59\x14\x02\x2e\xc8\xba\x5d\x85\xcf\xee\xed\x30\x76\x60\x19\x3c\xa6\x80\x42\xf6\x18\xa1\x10\x9e\x7d\x4a\x94\x3c\x30\xbf\x05\x2d\x48\xa7\x8c\xb0\x24\x4f\xeb\xa1\xa0\x9b\x6e\xba\x91\x0a\x16\x66\x49\xc4\x4d\x27\x39\xa2\xcb\x8d\x45\x63\x4f\x22\x9c\x8c\xa6\xde\x63\x31\x2e\xa9\x35\x0d\x41\x9f\xc4\xdb\xe1\xd2\x6a\x6f\x39\x6b\x2f\xed\x97\xdf\xe1\xdb\x9c\xd5\x2d\xa1\xe5\x50\xaa\xc0\xcc\xb1\x53\xce\xfe\xce\x3b\xf5\x86\x5d\xcd\x80\xab\x15\x50\x7b\x65\xb5\x3f\x93\xc7\x68\x39\xd6\x8b\xf7\x90\x83\xc7\x33\xb3\xcf\x96\xe2\xc2\xec\x6c\x6c\x29\xba\xc8\xa9\x82\x26\x84\x4c\x31\xa4\x1a\xd3\xc8\x76\xfe\x25\x2c\x9e\x79\x15\x42\x47\xd6\xc3\xaa\x4a\x4a\x87\xb6\xd0\x66\x1d\x66\x11\xfd\xb6\xcf\xdb\xe0\xc3\xba\x8f\x1b\xe2\x82\x70\xbf\xdc\x3b\xc9\x32\xc8\xe1\x36\xf0\x03\xc1\x3f\x19\x56\x4d\xc1\xef\x57\xc2\xf2\xaf\xf2\x25\x70\x98\xb2\xda\x5d\xe7\xeb\x27\x90\x6f\xdc\xc2\x9a\xb8\xb1\xf8\xf3\x19\x3a\x7c\x6a\x50\x90\xef\x22\x73\xec\x20\x20\x48\xf1\x46\xdd\x6a\xae\x7b\xb7\x85\xaa\xd5\xbd\xb6\x37\x2b\xc3\xbc\xfb\x27\x91\x0e\x19\x1e\x8a\x94\xb9\xe9\x3c\xc0\xa9\x1f\xca\xca\x1d\x11\x0f\xa5\xe0\xce\x88\x3d\x6b\x52\x50\xd4\x59\xbe\xec\xe2\x9a\x6b\x1b\xd9\x23\x84\x0c\xac\xe6\x40\x3a\x05\x73\x07\xac\x93\x01\x7c\x20\x16\xe9\x5d\x8a\x74\x19\x91\xfe\xc1\x5d\x4a\x13\x75\x43\xd1\xc4\x21\x71\x98\x3c\x00\x87\x39\x4f\x9c\x4e\x98\x16\x49\xc4\x96\x16\x66\x23\xa3\x79\x66\x8e\x71\x47\xf0\x6c\x73\x0d\x51\xf0\xfe\xc4\x0d\x10\xee\xf3\x0f\x56\x6b\x63\x68\xee\x9c\xeb\x5d\xc4\xb1\xaa\x87\x64\x8c\x18\x8a\x3a\x82\x17\x1e\x75\xce\x79\x8b\x88\x52\x2f\x02\x40\xa2\xc7\xf3\x30\xe9\x02\x8d\x0b\x0f\x7f\x70\x53\x8e\xda\x63\x5b\x86\xb1\x3a\x34\x28\xa3\x7a\x6c\xb1\x18\x3d\x6e\xec\xf9\x93\x99\x38\x61\x19\x14\xf1\xdc\x1b\x56\x21\x0b\xab\x47\x20\x7d\x86\xc6\xd6\xa5\x1a\xad\xff\x77\x19\x49\x50\x99\x90\xe4\x61\x0d\x4a\x48\x88\x75\x9c\x16\x2c\xdd\xa7\x19\x64\xd7\xda\x9f\x92\xb0\x7a\x80\x5e\x11\x15\x7b\xbb\xdd\xdb\x5e\xe5\x6f\xa1\x66\xac\x09\x53\x37\x04\x23\xac\xf7\x2b\x8c\x69\x1d\x92\xc0\xd3\x32\x97\xe0\xfc\x92\x8e\x01\x6f\x18\x05\xd1\x89\x3c\x3a\x00\x33\xa7\x30\x9f\xb7\x9a\x55\x7b\x67\xd9\x6a\xb7\xc1\x5a\x19\x69\xff\x7b\xde\x1f\x8b\xfe\x63\xee\x29\x37\x15\x32\xfd\x8a\x3c\x2e\x4d\xf4\xef\x81\x64\x29\x31\x7c\xa2\x2f\x33\xfc\xf1\x81\x8a\xf6\xbb\x87\xa9\xd9\x9d\x3d\xc4\x8d\xcd\xc5\xd1\xd2\xeb\x7f\x33\xc1\x37\x38\x7b\x67\x59\x52\x61\xed\x1b\xe2\x48\x8d\x0b\x58\xca\xe0\x5f\xf4\x06\xe6\xd4\x1b\xbd\x54\x0e\x6e\x9d\x11\x69\xfa\x61\x65\xe8\x96\x87\x9a\xec\xe0\x14\xe4\xf6\x31\xb1\xcb\x52\x92\xda\x4b\xad\xc1\xcd\x2b\xac\x25\xc9\x53\x42\x50\x0a\x60\x79\x50\x3a\x03\xef\x5f\xd0\x6b\x8e\xb7\x8f\x69\xa9\xf7\x60\xba\x80\x03\x23\x82\xb0\x78\xd6\x4b\xe5\x51\x87\xf0\x74\x93\x3b\xdf\x1a\xe0\x78\x9d\xbc\x07\x6f\xb2\xa0\x5a\xb0\xbb\xaf\xe9\x41\xff\x2f\x1e\x8b\x3d\x47\x26\x55\x45\x09\x8e\x64\x51\x8a\xf3\xf0\x7c\xff\x87\x2c\x07\x5d\x3a\x99\x0f\x3c\x3e\x97\x4c\x25\x16\x17\xfe\xe4\x10\x15\xd0\x0d\x6d\x7a\xf4\x26\xef\xd4\x8f\xe0\x87\x4b\xf8\xc1\x5d\x41\xb8\xf2\xe8\x32\xeb\xba\xa0\xd3\x39\xa4\x1f\xd6\xc5\xc0\x1d\xda\xb0\xfa\xd1\x39\x38\xf5\xa0\x94\xe2\x35\x85\x29\x0f\xe7\x54\x4d\x99\x92\x02\xa2\x46\x49\x8a\x93\x3a\x01\x6b\x15\x58\x29\x83\x4e\x1e\xa4\x77\x41\xbb\x45\x3f\x4e\x91\xca\xc0\xcc\x3a\x58\xab\x10\x5e\xcf\xde\xcb\x18\x04\x31\xa6\x55\x91\x1a\xa4\x5b\x96\x00\x08\xdd\xb5\xa8\xe1\xda\x2b\xe4\x15\x8f\x40\xea\xf7\x41\xac\xf8\xf9\xae\xed\x03\xe3\x4f\x16\x0d\x2e\x93\xbd\xb3\x4c\x1e\xda\xd5\x2d\xbb\x78\x84\x90\x1f\xcf\x68\x1f\xca\x13\x91\x44\x02\x51\x5f\x5d\xd4\x75\xc4\xdb\x26\xc5\xe9\x01\xb4\x72\xdf\xf3\xcf\x22\x7f\xf2\xa8\xd0\xc5\xb4\xcb\xc6\x54\x4d\x41\xf0\xce\xb4\xa9\x27\x4a\x60\xc4\xe9\x7e\x06\xd9\x2d\x12\x9e\xab\x82\xa8\x94\xac\xb0\xe4\x97\x12\x38\xbb\xfd\x1a\xd4\x76\xe8\xb5\x1a\xa6\xb7\xbc\x4f\x34\x28\xc6\xc5\xd8\xc2\xcc\xd3\x08\x87\xeb\x86\xa2\x44\xa5\x7b\xa4\x4b\x06\x0b\x23\xe8\xef\xcb\x0a\xcc\x17\xac\xab\x5d\x50\x5c\xf5\x71\x18\x77\x24\xd9\x14\x1f\x89\xfe\xb0\x21\x29\xe8\x9a\x41\xbe\x3f\xba\xab\xad\x94\x21\x70\x43\x59\x17\xce\x0a\x9a\x60\xbb\x92\x03\x2f\xb6\x7b\xa9\x9c\x53\x2f\xde\xbb\x87\xf9\xd6\x6c\x6c\x3e\x1e\x8b\x46\xa2\x8b\x9c\x5f\x09\xa9\x8a\x2c\xca\x06\xbd\xdf\xd8\xed\x65\xb4\x8a\xbd\x48\x88\x0d\xb0\x7e\xdd\x4b\xe5\xc0\x61\x8e\x81\x94\xff\x05\x00\x00\xff\xff\x27\x1e\xdc\xe9\x8c\x15\x00\x00")

func localesZhCnHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesZhCnHomeYml,
		"locales/zh-CN/home.yml",
	)
}

func localesZhCnHomeYml() (*asset, error) {
	bytes, err := localesZhCnHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/zh-CN/home.yml", size: 5516, mode: os.FileMode(420), modTime: time.Unix(1656657909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"locales/en-US/home.yml": localesEnUsHomeYml,
	"locales/zh-CN/home.yml": localesZhCnHomeYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"en-US": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesEnUsHomeYml, map[string]*bintree{}},
		}},
		"zh-CN": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesZhCnHomeYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
