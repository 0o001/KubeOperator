// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package i18n generated by go-bindata.// sources:
// locales/en-US/home.yml
// locales/zh-CN/home.yml
package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localesEnUsHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xcd\x72\xa3\x3c\xd6\xde\x73\x15\x0a\xa9\xde\xf5\xd7\xf5\x2e\xbf\xca\x8e\xc6\x24\x61\x62\x03\x05\x38\xfd\x66\x36\x94\x0c\xc7\xb6\x26\x58\xa2\x24\x91\x8c\xdf\xdd\xdc\xd7\xdc\xd3\xdc\xc2\xd4\x91\x04\x06\xdb\xe9\x4e\xd7\xac\x12\xdb\x3a\x3f\x3a\x3f\xcf\x79\x8e\x6e\x6b\x71\x38\x08\xee\x25\xc1\x2a\xaa\xa2\x3f\xe3\xa2\x2c\xee\x88\x9f\xd0\x03\x10\xda\x4a\xa0\xcd\x91\xc0\x3f\x99\xd2\xca\xf7\xe2\xac\x4a\xd2\xf2\x74\x28\x6b\x81\x2a\x20\x5b\xd6\xb6\x84\x71\xa2\xf7\x40\x24\xec\x98\xd2\xf2\x48\xe2\x8c\x08\xfb\x95\x3a\x2a\x0d\x07\xa2\x40\x6b\xc6\x77\xa4\xa3\x3b\xf0\x3d\xcf\xbb\xad\xdb\x5e\x69\x90\x5e\xb8\x5c\x17\x65\x94\x57\x8b\x68\x19\x95\x51\x75\x1f\xc4\xcb\x68\x71\x47\xfc\x9a\x72\xc2\x85\x26\x0d\xb4\xa0\x81\xb8\xe3\x68\xa8\xee\xa5\x04\xae\x89\xd2\x54\x83\x3f\x2a\x88\x0b\xe3\x5e\xbe\x4e\x92\x38\x79\xb8\x23\x7e\xb9\x9f\x88\x29\xa3\x4c\xf6\x9c\x33\xbe\xbb\x10\x5a\xa6\x61\xb0\xbc\x23\x7e\x7c\xe8\x84\xd4\xa3\x54\x4d\x39\x4a\x6d\x80\xf4\xdd\x4e\xd2\x06\x1a\xe3\xfa\x1e\x68\xab\xf7\xa4\xde\x43\xfd\xea\x85\x8f\x51\xf8\x54\x3d\xa6\x45\x59\x15\xc5\x63\x15\xa6\x49\x12\x85\x65\x9c\x26\x77\xc4\x0f\xf1\x04\xd9\x0b\xa5\x49\x51\x3c\x92\x5a\x70\x0e\xb5\x66\x82\xfb\x4e\xec\xe9\xff\x8b\xaa\x4c\x9f\xa2\xd3\xe1\xd7\x7e\x03\x92\x83\x06\x45\xb4\x78\x85\xd9\xc9\x20\x8b\xaf\x9d\xa3\x1d\xfb\x40\x75\x92\x2e\xa2\xaa\x28\x83\x72\x5d\x5c\x13\xe4\xa2\x01\x13\xc5\x5e\xf9\x9e\x3d\x56\x15\xeb\x30\x8c\x0a\x3c\x5e\xf4\x75\x0d\x4a\x6d\xfb\x76\xfc\xf1\x47\x90\xbb\xd8\xfe\xa0\xd2\x06\xd2\xfd\x32\xa6\xed\x9e\xb2\x16\xc3\xe4\xbe\x8f\xf2\x3c\xcd\xef\x88\x1f\x49\x29\xa4\xcd\xbb\x84\x06\xb8\x66\xb4\xf5\x66\x29\xaf\xf2\xa8\x48\xd7\x79\x18\x8d\x4a\x88\x16\x2e\xfb\x37\xa4\xdc\x83\x04\xcc\x22\xe5\x84\x2a\x25\x6a\x46\x35\x34\x36\xb4\x3d\x6f\x40\x12\xbd\x67\x8a\xbc\xc2\xd1\xff\x40\x6d\xf5\xf7\x34\xf9\x2d\xdd\x7f\x09\x0e\x57\x74\xdf\x07\xeb\x65\x59\x85\x79\xb4\x88\x92\x32\x0e\x96\x55\x18\x24\xa6\x86\xac\xd9\x3b\xe2\x2f\x60\x4b\xfb\x56\x93\xd3\x4d\x27\x85\x64\x8d\x36\xbe\x6d\x38\x9b\xaa\x31\x78\xa6\x62\x4f\x52\x1c\xbb\xf0\x24\x6a\xba\xc9\x34\xa6\x32\xff\xf7\x0a\xa4\x39\xe3\x7b\x59\x50\x14\x3f\xd2\x7c\x31\x3a\x93\xac\x97\x58\xcf\x1d\x55\xea\x5d\xc8\x86\x0c\xdd\xb4\x01\xb2\x69\x29\x7f\xfd\xcf\xbf\xff\xe5\x7b\x59\x1e\x3f\x07\x65\x54\x3d\x45\x2f\xe7\x82\xe8\x49\x27\xd9\x1b\xd5\x80\x17\x9f\x78\x71\x12\xf7\x6e\x31\xfc\x9e\x29\xfd\x60\x99\x47\xc1\xe2\xe5\x04\x0e\x8f\x98\x99\x73\x04\x71\x99\x31\x12\x67\x15\x73\x96\x10\x9b\x59\xcc\x89\x53\x31\x49\xcc\x3b\xd3\x7b\x13\x00\xd7\xa6\xd7\xf4\x56\xdf\x5f\xaa\x2c\x4f\xff\x16\x85\xe5\xff\x64\xa2\x93\xe2\x1f\x50\x6b\xdf\x2b\x5e\x8a\x32\x5a\x55\x0e\x03\xef\xd3\x75\xb2\xb8\x0e\x81\xad\xa8\x69\x8b\xf8\xb7\x65\x52\x69\x13\xa8\x24\x45\xb9\xe0\x39\x88\x97\xc1\xf7\x25\x96\x48\x22\x48\xdc\x11\xfa\x46\x59\x4b\x37\x2d\xf8\x5e\x5c\x58\x0c\x32\x77\x98\xa0\x1f\xb3\x80\x64\x95\xa2\xc3\xbe\x8d\x77\xbc\xca\xd2\xbc\xb4\xed\x35\xe4\x2c\x11\xa4\xa1\x9a\xe2\x35\x9d\xd8\x3b\x55\x64\x2b\x7a\xde\xdc\x10\xe7\xa9\xc1\x2c\xe3\xa7\x3b\xb2\x65\x2d\xdc\xcc\x95\xa2\xba\xea\x39\x58\xae\xd1\xd3\xe8\xd0\xe9\xa3\xd5\x2b\x38\x69\x19\x07\xf2\x45\x9d\x9d\x4f\xcb\x2a\x4c\x57\x99\xc9\xc1\x20\x17\xf3\x5a\x1c\x3a\x03\xdd\x3f\x15\xfe\x91\xa7\xc9\x43\x75\x9f\xe6\xab\xa0\x74\x62\x52\x42\xad\x89\xf5\x4e\xc8\x03\xd5\x1f\x0a\x4f\xba\x70\x9a\x95\x70\xd2\x42\x42\xdb\x08\x7c\xa8\xc3\x55\xc9\x3c\xad\x36\xeb\x9f\x90\x76\xd5\x96\xac\x57\x77\xc4\x0f\x88\x16\x9a\xb6\x44\x6c\xc9\x17\x45\xa4\x78\x57\xf8\xaf\xb9\x3e\x95\x40\xe8\x86\xe3\x75\xda\xaf\x44\xbd\xb2\xce\xe9\x19\xe1\x69\xa8\xdb\x38\x99\x37\xc5\x86\x71\x87\x73\x12\x94\xe8\x65\x8d\x4e\x7c\x25\x12\xa8\x12\xfc\xee\x03\x7f\x8a\xe0\x79\x8e\x75\x8a\xbe\xb9\x82\x3f\x13\xf6\xbc\x5b\xc4\x91\x13\x82\x60\x1c\x56\x41\x19\x3e\x0e\x28\x30\x40\x08\x53\x84\x0d\xd9\xf1\xbd\x34\x8f\x1f\xe2\xc4\x05\x7e\x7a\x5e\x48\xb6\x63\x9c\xb6\x1f\x09\xae\x8b\xd3\xd8\x0d\xc2\x32\x36\x8e\x96\x03\x9c\xb9\x39\x0d\x1c\xdb\x62\x52\xb6\x82\x6b\x5a\x6b\x53\xb8\xb4\x39\x30\x8e\x2c\x83\x6a\x21\x6f\x9c\xc2\x69\xf6\x12\x41\x54\x5f\xef\x8d\x42\xd3\x7f\xc1\x62\x15\x27\x97\x38\x8d\x46\x1b\x87\xd5\x46\xa9\x75\xe1\x02\xab\x6f\xe6\x4e\xe7\xd1\x32\x28\xa3\xc5\x04\x5e\xd6\x28\xb6\xa7\xe8\xfa\x14\x44\x1c\x76\x18\x17\x96\x8b\x20\x1b\x3d\x58\x67\x8b\x60\xf4\xa0\x6d\x68\x77\x6e\x18\x1a\x66\xed\x3e\x47\x79\x7c\xff\x52\x85\x38\xc7\x47\xc0\x7c\x06\xc9\xb6\xac\xa6\x38\xed\x49\x8d\x33\x1c\xec\x74\x8d\x56\x41\xbc\xac\x16\x71\xe1\x50\x66\x45\x59\x3b\x10\x2f\x65\x4a\xb0\x61\xea\x93\x81\x1d\xb4\x4d\xd3\x1b\x1d\x50\xe1\x81\xea\x7a\x4f\xb6\xa6\xb4\x2c\xbc\xe1\x24\x1b\xeb\xa7\xc0\x4f\xa3\xaf\x18\x9a\x9f\x8c\xb1\xa1\x46\xce\x95\x0c\xb4\xe1\x5d\x0a\xbe\x3b\x0d\x3a\x22\xe4\x44\xc4\x3a\x68\x26\xce\xe8\xdc\xf9\xc4\xf1\x6e\x91\x92\x0a\x3e\x8c\x88\x3c\x7a\x88\xd3\xe4\xb3\x94\x83\x58\xe1\x5f\x0d\x09\x64\x0a\x68\x0a\xff\x0e\x86\x90\x6d\x7c\xda\x8c\xa1\x1a\xbf\x9a\x44\x2d\xe5\x73\xde\x6a\x51\x3f\xb4\x81\xdd\x81\x9e\xce\xc4\x2b\x80\x5f\x0b\xbe\x65\xbb\x5e\x9a\xba\x31\x89\x8b\x57\xc1\x43\xf4\xb1\x2a\x76\xa0\x3b\xf8\x9c\xa2\xac\x2a\x1e\xd3\xdc\x02\xb8\xea\xb7\x5b\x56\x33\x64\xe8\x71\x87\x61\x11\x1d\x70\xa5\x69\xfd\xea\x3d\x44\xe5\x90\x81\x21\xc3\x89\x18\x82\x6c\x80\x16\xcf\xbb\xbe\x59\xc1\x61\x03\x72\x6c\xbd\x60\x81\xf5\xf4\x45\x91\xb1\xdb\x36\x00\x9c\xd0\xc6\xb0\xf2\x69\x83\x0e\x38\xf0\x45\xcd\x30\xc5\xe8\x77\xc4\xc5\x99\x18\xe9\xdc\x30\x04\x3e\xe4\x72\x4e\xe0\x1a\x91\x1b\x64\x1f\x83\xa2\x72\xe9\x99\x8c\x90\x49\x2a\xc7\xd4\x84\x57\x10\xc6\xbb\x45\x36\xee\x19\xc6\x3e\x90\x29\xb7\xca\x54\x65\x50\x3c\xe1\x78\x69\x1a\x4b\xd9\x85\x1c\xb6\x22\xf3\x71\xa8\x1a\xb7\xdc\x7c\xed\x6c\xc2\xde\x29\xd3\x84\x69\xd2\x08\x0e\xdf\xd0\xc0\x86\xd6\xaf\x7d\x17\xd4\xb5\xe8\xb9\xf6\xb2\x20\x0f\x56\x55\xb4\xca\xca\x97\xf3\xb4\x75\x54\xd2\x03\x68\x90\x0a\xb9\x4b\x59\x15\xeb\x2c\xb3\xd9\x5d\x73\xd5\x77\x38\x99\xb1\x86\x8f\x1d\x0c\xcb\xc6\x75\x6c\xda\xba\x5d\xc0\xb5\xc4\xf7\x20\x7c\x5a\x67\x55\x10\x86\xe9\x3a\xf9\x1d\xa2\x36\x73\xfc\xd3\x8c\xcd\xbb\xc5\x96\x19\x8c\x67\xcb\x20\xb9\xc6\x39\xad\x8f\xd6\x0e\x9e\x3f\x55\x56\xaf\xa0\x19\x48\xdd\xb0\x10\x0e\xeb\xc0\xc4\xcc\x7c\xdb\xf8\xc4\x6d\x8c\x95\xcf\x5f\xc2\x99\xfe\x6e\x62\x70\x16\xca\x5f\xdc\xc7\xc6\x8d\x50\x17\xb8\xdf\xbd\xd9\x60\x24\x5e\x46\xc5\x74\x37\x70\x80\xe0\x4a\x50\x9f\x0c\x21\x97\x24\x1b\xd8\x0a\x09\x44\xbd\x33\x5d\xef\x71\xe3\xd7\x17\x9e\xcc\x60\xcc\x5a\xb9\x5c\xd7\x37\x80\xc2\x28\x08\x0d\xe9\x3b\xd3\xb8\x13\xb1\x3c\x2a\xca\x34\x8f\x2e\xe5\x24\x28\x2d\x24\xe3\xbb\x79\xab\xe7\x8e\x3c\x5d\xe6\x6b\x72\xcd\x5f\x5e\xee\xc4\xe9\xaf\xaf\x1c\xa7\xfe\x1f\x17\x8c\x21\xcd\x1b\x68\x05\x8e\x61\x2d\xe6\x38\x5d\xe2\x6e\x29\x3a\x90\x6e\x9e\x8f\xd8\xd0\x81\x44\xfa\x6b\xd0\xc1\x52\xbc\x0b\x78\x7b\x74\x1b\xcc\x08\x6f\xbe\x37\xf2\x49\x0b\x99\x91\x3b\x39\x5c\xdf\x14\x9e\x85\x4c\xd3\x11\x97\x3a\x33\x57\x9e\x13\x9d\x67\x8d\x7b\x29\xf3\xfd\xbc\x41\x27\xc2\xde\x2d\x32\x1c\x4b\x80\x46\x94\xb6\x85\x54\x1c\x79\xbd\x97\x82\xb3\xbf\x30\xc5\x0a\xa4\x25\x29\x7f\x38\xba\xb4\x4c\x1f\xe2\xe4\x5c\x66\x3d\x65\x89\x38\xe4\x6f\xdc\xe9\x13\xed\x29\x4f\xaf\x4e\x9d\x14\x7b\xb6\x61\x5a\x11\x3c\xe3\x6c\x6c\xa5\x38\x90\x56\xec\x76\x58\x60\x8c\x7f\xfb\x0c\xc9\xf4\x6e\x6b\xa6\xbc\x30\x2e\x0c\x18\x9f\x23\x34\x2e\x6c\x4c\x11\x4d\xd5\xeb\x39\x1a\xa3\xe8\xdb\x21\x34\x23\xd3\x7b\x5e\x55\x61\x9a\xdc\xc7\x0f\xa7\x3d\x39\x9c\x0e\xd3\x0b\xfa\x72\x12\x38\x7f\x1e\x2b\xcf\x07\xf1\x47\x85\xd6\x40\xd7\x8a\xe3\xc1\xe0\x7a\x4b\xf9\x27\x0b\xce\xbb\x65\x1d\x8e\xf5\xd1\x4f\xb4\x07\x5c\x83\x84\x06\x97\x5b\x05\x3b\xa3\x12\x5d\x68\x59\xad\xd5\x09\xbb\x8c\xef\x18\xda\xd3\xb1\xaf\xa4\x9b\x2f\xca\x74\x47\x19\x1f\x5f\x14\xa7\x9b\x71\x9c\xe1\xee\x84\x1e\xd6\x75\xdf\x31\x68\x08\xe5\xcd\xc4\x49\x09\x46\x53\x63\x84\xe3\xe4\x39\x58\xc6\x18\x8e\xb8\xb3\x6b\xc6\x1b\x6d\x59\x33\x70\x92\xc9\x5b\x06\xef\x91\x4c\xe0\x3a\xb6\x03\x8e\x57\xb7\xd7\xa0\x4d\x23\x41\x29\x30\x16\xff\xf8\x76\xc9\x75\x94\xa6\xd2\x5c\xc6\x9d\x34\xde\xa8\x7e\xc3\x01\x0b\xcf\x84\xe9\xff\x3a\x21\x5a\x34\x97\xa5\xe9\xf2\x6a\x9e\xe2\x8c\xe0\x99\x09\x69\xb9\x02\xf9\xe3\x63\x80\x65\x83\xf3\x5b\x8f\x64\xc3\xf2\x59\xa5\xe5\xd1\x43\x22\x55\x94\xf9\xcb\xe5\xdb\x4b\x39\x7d\x89\x15\x5b\xfb\x7c\x45\x65\xbd\x67\x1a\x6a\xdd\x4b\x30\xb3\xfb\x0a\x57\x76\xa0\x34\x62\xe5\x80\xb7\x59\x9e\x3e\xc7\x8b\x28\x1f\x59\xdb\x14\x73\x6b\x09\xe6\x26\x98\xd6\x5e\x8b\x03\xd5\xac\x26\x07\x24\x26\xce\xff\x03\xe5\x3d\x6d\xdb\x23\x7e\xc9\xb6\xc7\xf9\x32\xab\x26\x90\x55\xbe\x64\xd1\xcc\x84\x41\x2a\xeb\xac\x6b\xf9\x91\x7e\xdc\x90\x94\xb7\xc7\xe1\xb3\x22\x88\x90\x5f\xc9\x1c\xa9\x7e\xcd\x3c\x4e\x78\xbd\xfd\x09\xf3\x20\x06\x07\x60\x77\x6d\x56\xe3\xa4\x9a\x8f\xd9\x71\x76\xd1\x5a\x9b\x07\x34\xdb\x4f\x0a\x94\xc2\x45\xa4\x88\x8a\x02\x09\xf0\x53\xf4\x32\x83\x51\xf7\xbb\x79\x6d\x73\x75\xec\x68\x6d\x96\xa7\x38\x9c\x26\xd5\x3e\x9c\xb5\x6b\xa3\xe0\x6f\x20\xd5\x94\x70\x19\x31\xe4\xa3\x49\x3a\x5d\x3e\xfa\xc9\x9e\x3a\xc4\xdf\x14\x31\x4e\x4c\xba\x03\xcf\xe4\x19\xbd\xc3\x54\xff\x59\xc4\x48\x62\x0a\xfb\x1b\x42\xe9\x1b\x43\x8e\x70\x56\x36\xff\x0d\x00\x00\xff\xff\x46\xa3\x5d\xc9\x41\x18\x00\x00")

func localesEnUsHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesEnUsHomeYml,
		"locales/en-US/home.yml",
	)
}

func localesEnUsHomeYml() (*asset, error) {
	bytes, err := localesEnUsHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/en-US/home.yml", size: 6209, mode: os.FileMode(420), modTime: time.Unix(1628043151, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesZhCnHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x58\xcd\x52\xdb\x4a\x16\xde\xeb\x29\x54\x76\xdd\xdd\x9d\xa9\x59\x4e\x65\xa7\xc8\x02\x34\xd8\x92\x4a\x92\xc9\x65\x36\x2a\xae\xe3\x49\x98\x10\x4c\x61\x32\x55\x77\x56\x71\xc2\x8f\x01\x1b\x3b\x09\x30\x09\x38\x01\x13\x08\xbe\x10\xdb\x40\x12\xec\xd8\x18\x5e\x46\xdd\x92\x57\xbc\xc2\x54\x77\x4b\xed\xb6\x1c\x08\x1b\xaa\xb0\xce\x77\xfa\xe8\xfc\x7c\xe7\x6b\x85\x13\xa9\xa7\x4f\x53\xd3\x9c\x22\xc4\x24\x4b\xfa\x4d\x36\x4c\xe3\x1e\x1f\x02\xc5\xbc\x73\x78\x02\x1a\x67\xa0\xfa\x16\x94\x2a\x21\x4e\xd6\x2c\x45\x35\x7b\x06\x6e\xbd\x01\x4a\x15\xe7\x4b\xdb\x69\xef\xb8\xb5\x4b\xa7\x53\xeb\x96\xbf\x75\xdf\xef\x81\xf2\x31\x58\x7c\x67\xb7\xdf\x80\xd6\x1b\x59\x0b\x71\x5c\x38\x31\xf5\x2c\x3d\x97\x9c\xe5\xc4\x68\xdc\x30\x25\xdd\x8a\x48\x51\xc9\x94\xac\x21\x41\x8e\x4a\x91\x7b\x7c\x08\xfe\x6f\x17\x7e\xd9\x00\xd9\xdd\xee\xbb\x7d\xd0\x79\x03\x96\xf3\xce\xca\x39\x7c\x9e\x71\xb6\xe6\xbb\xdb\x8b\xce\xe5\x7e\x88\x42\x65\x03\x07\xa1\xc7\x15\x45\x56\x86\xef\xf1\x21\x62\x60\x37\xf3\xa0\x54\x71\xaf\x8a\x6e\x39\x67\x37\xab\xd7\x17\x99\x01\x48\x54\x15\x85\x28\x7a\xaf\xfa\x05\x58\x38\x20\x30\xef\xe0\xfc\x92\xd3\x3a\x0c\x71\x1c\x17\x7e\x9c\x9c\x98\x9a\x7b\xcc\x27\x1e\x27\x13\x4f\x38\x71\x44\x12\x47\xad\x11\xd5\x30\x2d\xc3\x18\xb1\x44\x55\x51\x24\xd1\x94\x55\x05\x85\xfc\xf1\x39\xfc\xb6\xea\xae\xbc\x70\x5e\x7c\x07\x85\xba\x7b\xf5\x01\xae\x1d\xc0\xe7\x87\x21\x0f\x35\xfa\x77\xc3\x32\xd5\x51\xa9\x67\x4b\x4e\xe4\xe7\x52\x4f\x92\xd3\x3c\x7c\x5b\x07\xc5\x4f\x20\xf7\xbd\xbb\x90\x67\x21\x82\x26\x07\x01\x82\x26\xfb\xe6\x8d\x33\x70\x72\xea\xb4\x8f\x58\x84\xa2\x46\x24\xcb\x30\x05\x33\x6e\x04\x90\x24\x38\x0f\x5a\xcc\xc1\xea\x41\x88\x23\x86\x96\x11\x17\x45\xc9\xc0\x80\x6c\x11\xac\xec\xd0\x07\x0f\x04\xdd\xcb\xab\x5b\xfd\x04\x5e\xad\xd0\x07\xb4\x56\x60\xff\xd4\xfd\xda\xf3\x24\xe9\xba\xaa\xa3\x32\xac\xbf\x73\xeb\x75\x9c\xc3\xc4\x6c\xf2\x61\x72\x7a\x6e\x72\x62\x8a\xeb\x2b\xb4\xa5\x4b\x86\x1a\xd7\x45\x09\x79\x21\xb5\xc6\xbe\xae\x2f\x32\x6e\xfd\xc0\x39\x7c\xdb\x7d\x7d\x60\x37\x57\x61\x69\x19\x2c\x7c\x71\x33\xeb\x76\xb3\x0d\x4b\xad\xd0\x0d\x4e\xac\x7f\xaa\xca\x5d\x3d\x81\x42\xdd\x59\xaf\x80\x1c\x76\x36\x24\xc4\xa3\xa6\x25\xea\x52\x44\x52\x4c\x59\x88\x5a\xa2\xa0\xe0\x06\x21\xe7\xa0\x77\x69\xbf\x75\x6b\xfb\x60\xa9\x0a\xf3\x35\xbb\x99\x77\x5f\x76\xc8\x21\xb8\xab\xf0\x90\x90\xf4\xd3\x9c\x90\x13\xc9\xc0\x10\x80\xdd\x5c\x73\xd6\x2b\x30\xdb\x40\x3f\x6e\x37\x41\x31\x17\xe2\x34\xc1\x30\x1e\xa8\x7a\x84\x1e\xa8\xc4\xa3\xa4\x21\x17\x9d\xdd\x8c\x8f\x6b\x39\x7f\xb6\xf0\x41\x9a\x2e\x8f\x09\xa6\x64\x8d\x4a\xe3\x41\x84\xff\x86\x01\x04\xea\xdf\x54\x7a\x8e\xc3\x1d\x2b\x44\x75\x49\x88\x8c\xf7\xc6\x95\xa4\x93\x99\x67\x2f\xaf\xd8\xba\x57\xde\x81\x74\x52\x9c\xd3\x2e\x90\x74\xfa\x33\x39\xe8\xc0\xba\x3f\x6e\x69\xba\xfa\x0f\x49\x34\xef\xea\xab\xfc\xdd\xd9\xae\xe1\xf0\x8d\x71\xc3\x94\x62\x96\x47\x33\x43\x6a\x5c\x89\x78\x2c\xb3\x90\x25\x9c\x02\x4b\x9f\x61\xa9\x25\x6b\xa4\x10\x2a\x32\x15\xc6\x04\x39\x2a\xdc\x8f\xa2\xba\xc9\x1a\xef\x7e\x9b\x87\xad\x22\xca\xcc\xf9\x97\x10\x27\x1b\x64\xea\x71\x88\xd8\x97\x17\x81\xdd\x5c\x23\xfc\xc4\xcb\x1a\x0f\x16\xcf\x9c\xa3\xcc\xf5\x45\x0e\x96\x8e\xdc\x97\x1d\x32\x11\xb0\xd1\x06\x2b\xbb\x21\x92\x4b\x39\xa6\xa9\xba\x49\x7a\xdd\xaf\x01\x2c\x1d\xc1\xe5\x4b\x90\x3d\x01\x85\x3a\xa1\x14\x67\x6b\x1e\x6e\x9c\xc0\x7c\x0d\xbf\x6b\x03\x8d\xe2\xce\x01\x79\x04\x37\x97\xec\xf6\x39\x0e\x9b\x75\x88\x5c\x59\x63\x42\x34\x8e\xa2\xff\x25\xcd\xbb\xe5\x1c\x2c\x2d\x3b\x7f\xb6\x88\x9f\x80\xb1\x6a\x5a\xa2\x1a\xd3\x70\xce\x03\x20\x6c\x8e\x38\xb0\x96\x83\x1b\x5f\xfb\x71\x0f\x74\x55\x19\xb6\x86\x54\x3d\x26\x98\x14\xe1\x1c\xd7\x41\xe1\x23\xdc\xbd\x00\x17\x05\xbb\x99\x87\xd5\x8f\x4e\x39\x70\x1e\x33\x21\x6c\x3d\xbc\x13\x97\x2f\xd1\x71\xd9\x13\x50\x5f\xec\xbe\x3e\xe8\x47\x7a\x1d\x70\x1b\x8c\x94\xbd\x1f\xe6\xb5\x90\x12\x8f\xa1\xde\x59\x38\xe5\x03\x2f\x07\xab\x1f\x41\xb3\x79\x7d\x91\x73\x1b\x5f\xdc\xab\x25\x0f\x4c\xf9\xc0\xef\x40\x19\x9f\x47\xea\x4c\xda\x01\x39\xb2\xaf\xde\xa3\xbe\xf7\x7a\x31\x07\xd6\x76\xc0\xf6\xee\xf5\xc5\xd6\x2f\xe9\x1f\x06\x61\x08\x63\x12\xf5\xf2\x33\x3c\xc7\x85\x9f\xa5\x93\xb3\xbd\x01\x47\x2f\x1e\x13\x4c\x71\x84\x4e\xb7\x4f\x8f\xaa\x2e\x0f\xcb\x8a\x97\x52\x6a\xb2\xb6\xd3\x6f\x15\x37\x7a\x6b\x4b\x10\x4d\x19\xc7\x42\xf8\x04\x96\x8e\x40\x11\xb1\x19\x69\x32\x37\xb3\x8e\x16\x70\xad\xec\x14\x17\xc1\xab\xb7\xb8\xc3\x30\x9a\xcd\x3d\xda\x72\xd5\x7d\x82\xc7\x16\x42\x24\x26\x2b\x37\xf1\x1e\x3f\xf1\xf0\xe9\xe4\x34\x4f\xcc\x09\xc7\xb8\x7b\xc7\x0c\x03\xb2\xd1\xe9\x52\x54\x30\xa5\x08\x33\xf4\x5e\x98\x67\x65\xca\xbe\x7e\xad\xa3\x11\x41\xa3\x87\xc6\xb5\x88\x80\x0f\x45\xbf\xf6\x1d\x66\x5f\xd5\xe0\xfa\x77\x7c\xd2\x98\xa4\xcb\x43\xe3\x96\x88\x56\x1c\x65\xa8\xee\x51\xce\xad\x67\x98\x6c\x49\x31\x41\x8e\x5a\x11\xd9\xf0\x68\xa0\xfb\xa2\x66\xb7\xcf\x89\x22\x71\xf7\x8e\x9d\x4f\x99\x9b\xd2\xe5\x63\xd9\x62\x10\x34\xd9\xcc\x94\xba\x3c\xda\xa7\x05\x36\xd0\x7f\x3d\xfa\xf7\x99\x9e\x72\x3f\x29\xa7\x4f\xfc\xfd\x58\x7f\x63\x52\x14\xcc\x6e\xf6\x97\x9f\x04\x85\x89\x9b\x04\xe4\xd4\x4e\x19\xde\xe6\xb8\xf0\x6c\xf2\xd1\x64\x6a\xda\x27\x60\x5d\x1a\x96\x55\xe5\x4e\x5b\x16\xe4\x5a\x60\x67\x87\x25\x60\x66\x37\x72\xe1\xff\xa6\xa6\x93\xbe\x57\xb4\x5f\xef\xe6\xd3\xf7\xd0\xc7\xeb\x2f\x2b\x4e\xe7\xcc\xad\x95\x41\xf6\x75\xbf\x14\x23\xf4\xe9\xae\x35\x40\x61\xd3\x23\x03\xbc\x4f\x58\xd6\xec\x2e\xe4\x9d\x0e\xd9\x0a\x72\x4c\x18\x96\x6e\x02\x6e\x94\xc0\xcb\xc2\x4d\x40\xcd\x32\x46\x54\x1d\xa5\x50\x9e\xe1\xfd\x95\xc0\x71\xe1\xd4\x4c\x72\x3a\x3d\x37\x91\x78\xc2\x0d\x4b\xa6\x9f\x3c\xbf\x2a\x3d\x62\xc3\x99\x42\x49\x99\x99\x4d\xfd\x3b\x99\x98\x8b\x25\x9f\xfe\x9e\x9c\xa5\xdd\x2f\x44\x3c\x5a\xf3\xea\x88\xdf\xdd\xdf\x1a\xec\x88\x30\x0c\x48\x47\x98\x6c\x0e\xb2\xb4\x7d\xff\x54\x9a\xf8\xf4\x79\xc3\x7c\x92\x71\x1a\xd0\x25\x3e\x6a\x44\x30\x2c\x2f\xdd\x08\x82\x8d\xd9\xb5\x7d\x7d\x91\x19\xc0\x72\xe1\xe9\xd4\xc3\x24\x87\xa5\xa4\xaf\x1b\x3c\x85\x6d\x99\x82\x31\x8a\xf9\xf8\xdc\x6e\x6f\x7a\x92\x72\xe3\xa4\xbb\x54\x80\x6f\xf2\x76\xa7\x84\x48\xb9\x54\x81\xcb\x87\x6e\x39\xf7\x2b\xef\xd6\x1b\x4e\x75\x19\x5c\x2e\x80\xda\x4b\xbb\xfd\x99\xfc\x8c\x96\x52\x7d\xe3\xaf\xe8\x98\xdf\x27\x12\x4f\x9e\xcd\x08\x89\x44\xea\xd9\xf4\x1c\xa7\x09\xba\x10\xb3\xa4\x98\x66\x8e\xa3\x13\x0a\x2f\xe0\xc6\x89\x5f\x27\xf4\xe2\x46\x5c\xd3\x48\x01\x11\xfb\xaf\xd7\x61\x0e\xdd\x08\x9c\xd3\x36\xf8\xb0\xea\x4b\xe0\xde\x1d\x62\xb7\xdc\x3d\xca\x31\x13\xeb\xb5\xf1\x7d\x41\x1c\x8d\x6b\x96\x20\x8a\x6a\x5c\xb9\xab\x4e\x01\xfb\x4b\x76\xbb\xe3\x7e\xfd\x04\x0a\x8d\x1b\xd4\x0a\x17\x9e\x99\x9a\xa0\x23\xa8\x45\x05\xe5\x36\x11\xc5\x8e\x03\x1a\xe5\x52\xc5\x2f\xe3\xaa\x7f\x81\xa9\xda\x9d\x2b\x67\xbd\x12\xd4\xbb\x3f\x89\x34\xe0\x38\x10\x29\x73\xf9\xba\x8f\x53\x1f\xc8\xca\x2d\x11\x07\x52\x70\x6b\xc4\xbe\x37\x39\x2a\x19\xac\x4e\xf5\xb4\x9b\xe7\x1b\xf9\x23\x42\x08\x2c\xe6\x41\x76\x09\xe6\xf7\xd8\x43\xfa\x58\x82\x78\xa4\xd7\x3b\xd2\x65\xc4\xfa\x07\xd7\x3b\x5d\x32\x4c\x55\x97\x02\xe6\x30\xb3\x07\xf6\xf3\xbe\x39\x9d\x33\x3d\x99\x4e\x3d\x9b\x4d\x24\x07\xf3\xcc\xbc\xc6\x2d\xc1\xb3\xcd\x15\x90\xbe\xbd\xb9\xeb\x13\xba\xa7\x1f\xec\xd6\x5a\x60\xfa\xdc\xab\x6d\xa4\x6d\xaa\xfb\x64\x8c\x18\x69\x38\xc0\x1a\xbe\x64\xcd\xfb\x0b\x80\x4a\x1e\x42\x43\x92\xaf\xaf\xb0\xd8\x01\x8d\x33\x9f\x85\x70\x53\x0e\xfa\x63\x5b\x86\xf1\x1a\x18\x94\x41\x1c\x5b\x2c\x06\xc7\x85\xa7\x1e\x4e\xcc\x90\xed\x4e\x79\xcf\xbb\xd9\xe0\x5b\x27\xc8\x9e\xa0\xb1\xf5\x56\x7c\xeb\x6f\x9e\x12\x88\xaa\xc3\xb2\x12\x44\x50\x21\x40\xbc\xe3\xb4\x60\xeb\xde\x7a\x27\x1f\x1c\x9c\x4f\x19\x58\xdd\x43\x8f\x08\xc4\x79\xd7\xee\xbe\x5b\xe4\x6f\x90\x44\x5c\x38\x31\x99\xe6\x44\xd9\xc0\x74\x16\xe4\x38\x14\xa9\xbf\x5e\xe1\xf2\x31\x2c\x14\xec\x66\xd5\xd9\x9a\xb7\xdb\x6d\xb0\x52\x46\xe8\xff\x3c\x15\x53\xd3\xff\x9a\x7c\xc4\x8d\xc5\x2c\x51\x55\x86\xe4\xe1\xde\xbd\x8a\xac\x1c\x66\x3f\xf7\x6c\x82\xdf\x39\xa8\x69\xaf\x2b\x98\x5a\xdc\xda\x1b\x5c\x78\x72\x06\xad\xb4\xde\xe7\x19\x7c\x23\x72\xb6\xe6\x65\x0d\xd6\xbe\x21\xcd\xd1\x38\x83\xa5\x65\xfc\x1f\xbd\xd1\xb8\xf5\x46\x77\x29\x0f\x37\x4f\x88\x35\xfd\x86\x13\xb8\x35\xa1\xe6\xd9\x3b\x06\xf9\x5d\x2c\x94\x72\x54\xf4\x75\x97\x56\xe0\xfa\x25\x46\xc9\xca\x98\x10\x95\x23\xd8\x1e\x94\x4e\xc0\xfb\xe7\xf4\xda\xe0\x6f\x5b\x5a\xc2\x1d\x98\x2d\xe2\xc0\x88\x21\x59\x17\xa8\xf2\x3c\xdd\xd3\xee\xb7\x06\x38\x5c\x25\xcf\xc1\xeb\x1c\xa8\x16\x9d\xce\x2b\xfa\xa2\x7f\x99\x49\xa5\xa6\x90\x4b\x4d\x55\xa3\x03\x59\x94\x67\x78\x78\xba\xfb\x43\x0d\x83\x2e\x71\xcc\xb7\xa4\x90\x27\x95\xd2\x73\xb3\x7f\x70\x68\xd1\x1b\xa6\x3e\x3e\x78\x33\x76\xeb\x07\xf0\xc3\x39\xfc\xe0\xad\x16\x5c\x79\x74\x39\xf4\x8e\xa0\x7d\xee\x31\x29\x25\x10\x9f\x81\x34\x5d\x1d\x93\x23\x92\x4e\x45\x84\xbb\x74\x04\x56\x2a\xb0\x52\x06\x17\x05\x90\xdd\x06\xed\x16\xfd\x92\x45\x72\x0b\x97\x57\xc1\x4a\x85\x28\x5d\xf6\xa6\xc2\xcc\xb6\x39\xae\x49\xd4\x21\xdd\x7f\x64\xb4\xe9\x16\x44\x2d\xd3\x5e\x20\x8f\x78\x44\x1f\xbf\xf6\x4f\xf1\xcf\xb7\x60\x8f\xb2\x7e\xb2\x02\x70\xa2\x9d\xad\x79\xf2\xa3\x53\xdd\x74\x36\x0e\x10\x27\xe3\xcb\x48\x8f\x64\xd3\xc9\x74\x1a\x49\x53\x43\x32\x0c\xa4\xab\x46\xa5\xf1\x3e\x1e\xf1\x9e\xf3\x4f\x92\x7f\xf0\xa8\x54\x1b\x59\x4f\x2d\x69\xba\x8a\x88\x97\x69\x34\xdf\x94\x0c\xb8\xdb\xf9\x0c\x72\x9b\xfe\xd7\x27\x0c\x41\x52\x47\x51\x59\x71\xca\x5e\x3e\xfc\x8c\xa2\xa0\xe6\x52\xb3\x13\x8f\x92\x1c\x2e\x14\x0a\x0b\xd5\xea\x37\x43\x36\xd9\xc9\x47\x7f\x5f\x54\x60\xa1\x68\x5f\x6e\x83\x8d\xc5\x10\xf7\xff\x00\x00\x00\xff\xff\x41\x5d\xcf\x36\x17\x15\x00\x00")

func localesZhCnHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesZhCnHomeYml,
		"locales/zh-CN/home.yml",
	)
}

func localesZhCnHomeYml() (*asset, error) {
	bytes, err := localesZhCnHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/zh-CN/home.yml", size: 5399, mode: os.FileMode(420), modTime: time.Unix(1628043151, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"locales/en-US/home.yml": localesEnUsHomeYml,
	"locales/zh-CN/home.yml": localesZhCnHomeYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"en-US": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesEnUsHomeYml, map[string]*bintree{}},
		}},
		"zh-CN": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesZhCnHomeYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
