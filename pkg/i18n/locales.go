// Code generated for package i18n by go-bindata DO NOT EDIT. (@generated)
// sources:
// locales/en-US/home.yml
// locales/zh-CN/home.yml
package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localesEnUsHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xcb\x72\xe3\xba\x11\xdd\xf3\x2b\x60\xba\x66\x37\x99\xba\xd9\x6a\x47\x53\xb4\xcd\x0c\x45\xb2\x48\xca\x37\xbe\x1b\x16\x44\xb6\x24\xc4\x24\xc0\x00\xe0\x38\xba\xbb\xfc\x57\xfe\x29\xbf\x90\x6a\x00\xa2\xa8\x87\x6b\x3c\x95\x95\x25\x17\xba\xfb\xa0\x5f\xe7\x40\xf7\x8d\xe8\x7b\xc1\xbd\x34\x58\x45\x75\xf4\xf7\xb8\xac\xca\x05\xf1\x53\xda\x03\xa1\x9d\x04\xda\x1e\x08\xfc\x8b\x29\xad\x7c\x2f\xce\xeb\x34\xab\x4e\x87\xf2\x0e\xa8\x02\xb2\x65\x5d\x47\x18\x27\x7a\x0f\x44\xc2\x8e\x29\x2d\x0f\x24\xce\x89\xb0\xff\x52\x07\xa5\xa1\x27\x0a\xb4\x66\x7c\x47\x06\xba\x03\xdf\xf3\xee\x9b\x6e\x54\x1a\xa4\x17\x26\xeb\xb2\x8a\x8a\x7a\x19\x25\x51\x15\xd5\x8f\x41\x9c\x44\xcb\x05\xf1\x1b\xca\x09\x17\x9a\xb4\xd0\x81\x06\xe2\x8e\x63\x9c\x66\x94\x12\xb8\x26\x4a\x53\x0d\xfe\xe4\x20\x2e\x0d\xba\x62\x9d\xa6\x71\xfa\xb4\x20\x7e\xb5\x9f\x99\x29\xe3\x4c\x8e\x9c\x33\xbe\xbb\x32\x4a\xb2\x30\x48\x16\xc4\x8f\xfb\x41\x48\x3d\x59\x35\x94\xa3\xd5\x06\xc8\x38\xec\x24\x6d\xa1\x35\xc8\x25\xb4\xc0\x35\xa3\x9d\x77\x06\xba\x2e\xa2\x32\x5b\x17\x61\xb4\x20\xfe\x23\x65\x1d\xb4\x44\x0b\x87\xff\x8e\x54\x7b\x90\x80\x38\x28\x27\x54\x29\xd1\x30\xaa\xa1\x25\x7b\xa1\x34\x19\x79\x0b\x92\xe8\x3d\x53\xe4\x0d\x0e\xfe\x07\x6e\xeb\x3f\xb2\xf4\x97\x7c\xff\x29\x38\xdc\xf0\xfd\x18\xac\x93\xaa\x0e\x8b\x68\x19\xa5\x55\x1c\x24\x75\x18\xa4\x26\x0b\x36\xec\x82\xf8\x4b\xd8\xd2\xb1\xd3\xe4\x74\xd3\x59\x2a\x6c\xd0\xd6\xb7\x1d\x13\x3e\x47\xe1\xf7\x53\xd5\x4c\xce\x4f\x56\x1c\xdb\xe8\x64\x6a\xda\xc1\x74\x96\x32\x9f\x47\x05\xd2\x9c\xf1\x3d\xcf\xbb\xc7\x54\x78\xcf\x59\x59\xd5\x41\x52\x44\xc1\xf2\xf5\xd4\x69\xcf\x98\xa5\xcb\x76\x74\x59\x32\x16\x13\x80\x9b\xc9\xb1\x59\xc6\xfc\x38\x17\xb3\x24\xbd\x33\xbd\x37\x60\x5c\xd1\x6f\xf9\xad\x1f\x5e\xeb\xbc\xc8\xfe\x16\x85\xd5\xff\x15\x62\x90\xe2\x1f\xd0\x68\xdf\x0b\xf2\xdc\xfa\x8f\x57\x79\x56\x54\xf5\x63\x9c\x44\x75\x19\xff\x11\xd5\x51\x51\x64\xc5\x82\xf8\x19\xef\x0e\x38\x59\xa0\x8c\x39\xe3\xe4\xaf\xbf\xad\x1e\x30\x97\xb6\x1d\x3b\x61\xdb\xb1\x7c\x2d\xab\x68\x55\xbb\xd1\x7c\xcc\xd6\xe9\xf2\xf6\x64\x76\xa2\xa1\x1d\x8e\xe5\x96\x49\xa5\xff\xfb\x9f\x7f\xfb\x5e\x9a\xa1\x5d\xf0\x12\xc4\x49\xf0\x90\x60\xe1\x53\x41\xe2\x81\xd0\x1f\x94\x75\x74\xd3\x81\xef\xc5\xa5\x9d\x0d\x83\x76\x36\x95\xcc\x0e\x8a\x75\x8a\x57\xf7\xbd\xf9\x7d\xcc\x2d\xea\x74\x9d\x24\xd6\x69\x4b\x35\xc5\x84\x39\xb3\x77\xaa\xc8\x56\x8c\xbc\xbd\x23\x0e\x69\xb3\x87\xe6\xcd\xe0\x74\x47\xf0\xea\x77\xe7\x4e\xd1\x5d\xfd\x12\x24\x6b\x44\x1a\xf5\x83\x3e\x58\xbf\x82\x93\x8e\x71\x20\x5f\xd4\xf9\xf9\xdf\x8b\x2c\x7d\xaa\x1f\xb3\x62\x15\x20\xf4\x98\x37\x42\x4a\x68\x34\xb1\x01\x84\xec\xa9\xfe\xd0\x78\x36\x1e\xf3\xc4\x86\xb3\xde\x16\xda\x5e\xe2\x43\x1f\xae\x79\xd2\xf5\x6a\x41\xfc\x80\x68\xa1\x69\x47\xc4\x96\x7c\x51\x44\x8a\x77\x85\x1f\xcd\x05\xa8\x04\x42\x37\x1c\x01\x75\x5f\x89\x7a\x63\xc3\x4d\x3f\x65\xf0\x72\x3e\xfe\x8a\xfe\x70\x7d\xf7\x45\x7d\x25\x12\xa8\x12\x7c\x81\x20\x3c\xef\x1e\x47\xcb\xcb\x83\xb2\xfc\x3d\x2b\x96\xe6\x0a\xab\xa0\x0a\x9f\xdd\x88\x0e\x54\xa9\x77\x21\x5b\x6c\x58\x76\xcc\x8b\xef\x65\x45\xfc\x14\xa7\xee\xca\xf3\xf3\x42\xb2\x1d\xe3\xb4\xfb\xc8\xb0\xca\xb2\x7a\x15\xa4\xaf\x06\xea\xba\x88\x70\x66\x2b\x21\x48\x4f\xf9\x81\x6c\x2d\x60\xaa\x35\xf4\x83\x56\xdf\x8e\x35\x47\x9a\xa0\x3b\x6a\xfa\x53\x02\x90\x9e\xf1\x51\x83\x22\x1d\xd5\x20\x4d\x83\xae\xcb\xd3\x8a\x0e\xc2\x2a\x36\xf7\xaf\x8e\x8b\xc3\xed\x74\xe0\xd8\xaa\xb3\x56\x12\x5c\xd3\x46\x9b\x66\xa2\x6d\xcf\x38\x12\x12\xd5\x42\xde\x39\x87\xf3\x7a\xa6\x82\xa8\xb1\xd9\x1b\x87\x26\x64\xb0\x5c\xc5\xe9\xf5\x46\xc4\xa0\xad\xdb\x8a\xc6\xa9\x85\x70\xb5\x15\xef\xce\x41\x17\x51\x12\x54\xd1\x72\xb6\x3c\xd6\x68\xb6\xa7\x08\x7d\xbe\x22\xdc\x66\x30\x10\x92\x65\x90\x4f\x08\xd6\xf9\x32\x98\x10\x74\x2d\x1d\x2e\x03\x43\xcb\x6c\xdc\x97\xa8\x88\x1f\x5f\xeb\x30\x5b\xce\x58\xf4\x05\x24\xdb\xb2\x86\x6a\x26\x38\x69\x44\x0b\x04\xa4\x14\xd2\xf7\xa2\x55\x10\x27\xf5\x32\x2e\xdd\xe4\xaf\x28\xeb\x8e\x1c\xad\x4c\x47\xb6\x4c\x7d\x32\xb1\x47\x6f\xf3\xae\x89\x7a\x74\xd8\x53\xdd\xec\x5d\x03\xd8\x95\x83\x9c\x31\xb5\x65\x89\xdf\xce\xb8\x63\xea\x2f\xa5\x25\xf0\x9d\xde\x93\x56\x80\xad\x73\x0f\xa0\x8f\x62\x42\xc2\x3f\x47\x26\xa1\x07\x8e\x44\x70\xee\xf4\xb8\x41\xdf\xa5\xe0\xbb\x13\xc5\x10\x21\x27\xef\x47\xc0\x86\x5f\x26\xb0\x97\xfc\xe2\xdd\xa3\x9a\x11\xfc\x48\x08\x45\xf4\x14\x67\xe9\x67\xc9\x9e\x58\xe3\x9f\x51\x02\x72\x34\x86\xc2\xbf\xc7\x40\xc8\xf3\x9f\x0e\x63\x48\xfe\x67\xbc\xd3\x51\x7e\xae\x79\xec\x66\x0e\x6d\x17\xed\x40\xcf\x19\xf0\xc6\x52\x6e\x04\xdf\xb2\xdd\x28\x4d\x1f\x99\x42\xc6\xab\xe0\x29\xfa\xd8\x15\xeb\xe9\x0e\x3e\xe7\x28\xaf\xcb\xe7\xac\xb0\x1b\x5a\x8d\xdb\x2d\x6b\x18\xaa\xbb\x78\xc0\xb4\x88\x01\xb8\xd2\xb4\x79\xf3\x9e\xa2\xea\x58\x81\x63\x85\x53\x71\x4c\xb2\xd9\xc3\x78\xde\xcd\xd1\x0a\xfa\x0d\xc8\x69\x14\x83\xe5\x72\x3e\x7a\x1b\x00\x4e\x68\xeb\xe4\x9c\x33\x99\x84\x91\x9b\xd5\x8f\x55\x91\x33\xb8\x25\x89\x8e\xb6\xcf\x41\x59\xbb\x74\x23\x1b\x3b\x83\x59\x69\xa6\x54\x87\x37\x36\x88\x77\xcf\x45\x0b\x5e\x8a\x93\x7c\x94\x42\x4e\xd6\xd6\x55\x50\x7e\x47\x36\x69\x5b\x82\x87\xb0\xab\x9d\x42\x36\x5f\x8f\x5d\xe0\x84\xee\xd7\xc1\x16\xe0\x9d\x32\x4d\x98\x26\xad\xe0\xf0\x0d\x03\x6c\x68\xf3\x36\x0e\x41\xd3\x88\x91\x6b\x2f\x0f\x8a\x60\x55\x47\xab\xbc\x7a\xbd\x2c\xc3\x40\x25\xed\x41\x83\xc4\x39\xcb\xaa\xba\x5c\xe7\xb9\xad\xd6\x9a\xab\x71\x40\x2a\xc5\x9e\x3c\x0c\xa8\xc4\xcf\xb5\xe0\xd9\xee\xb1\x3b\x60\x12\x57\x0f\x41\xf8\x7d\x9d\xd7\x41\x18\x66\xeb\xf4\x57\x64\xd6\x19\xf0\x4f\xeb\x2d\xef\x1e\x47\xe0\x42\x57\x7f\x22\x1a\x5a\xfd\x42\x10\x57\xd5\x07\x83\xd1\x73\x77\x44\x6d\x67\xd9\xc0\x8d\x8a\x1b\x0a\x57\x36\x3d\x5d\xca\x68\x1e\xb2\x81\xad\x90\x40\xd4\x3b\xd3\xcd\x1e\x1f\x4c\xb3\x03\xd4\x5e\xfb\x6c\x94\x6d\x94\xeb\xe7\xce\x06\xd0\x18\x0d\xa1\x25\xe3\x60\x66\x6d\x66\x56\x44\x65\x95\x15\xd1\xb5\x9d\x04\xa5\x85\x64\x7c\x67\x2c\xa6\xf1\x28\x40\x89\x51\x36\x70\x9d\xc3\xd9\x35\x7f\x7a\xb9\x93\xf6\xbc\x2d\xb2\x4f\x33\x33\x49\xea\x63\xea\x37\xd0\x09\xa4\x26\x2d\xce\x77\x55\x85\x2f\x1b\x31\x80\x74\x1c\x37\xcd\xd3\x00\x12\x35\x9e\x9b\x28\xa4\x4e\xcb\xac\x13\x3f\xdb\x6a\x94\x07\xde\xec\xa5\xe0\xec\x4f\xcc\x93\x02\x69\xd9\xef\x37\xc7\xc3\x49\xf6\x14\xa7\x97\x36\xeb\xb9\xfc\x40\xb6\xb8\x73\xa7\x4f\x7c\x5a\x9d\x5e\xbe\x83\x14\x7b\xb6\x61\x5a\x11\x3c\xe3\x62\x6c\xa5\xe8\x49\x27\x76\x3b\xac\x12\xe3\xdf\x3e\xa3\x5e\xbc\xfb\x86\x29\x2f\x8c\x4b\xb3\x05\x2e\x57\x03\xaa\x73\xa6\x88\xa6\xea\xed\x72\x0d\xa0\xe9\x8f\x3e\x34\xbb\xd7\x7b\x59\xd5\x61\x96\x3e\xc6\x4f\xa7\xe7\x55\x38\xdf\xca\x57\x3c\x78\x32\xb8\x7c\xa3\x57\x97\x1b\xfd\xa3\x6a\xb5\x30\x74\xe2\xd0\x9b\x85\xd2\x51\xfe\xe9\xaa\xb1\x01\xf9\x61\xc2\x89\xf1\x80\x6b\x90\xd0\xe2\x4b\x46\xc1\xce\xb8\x44\x08\x1d\x6b\xb4\x3a\x0d\xa5\xc1\x8e\xa9\x3d\x1d\xfb\x4a\x86\xf3\x57\x91\xd1\x9e\xd3\xaf\x1a\xf3\x67\x50\x9c\xa3\x46\x47\x84\x4d\x33\x0e\x0c\xc5\x2b\x6f\x67\x20\x25\x18\x4f\xad\x85\xf8\x97\x41\x88\x0e\xdd\xe4\x59\x96\xdc\xcc\x51\x9c\x13\x3c\x33\x23\x9f\x1b\x7b\x64\x7a\x75\x59\x4a\x3f\x8f\x38\x31\x8c\x15\x25\x4a\xcb\x83\x87\x6c\x58\x56\xc5\xeb\xf5\x73\xb9\x9a\xff\x12\x23\xb6\xf6\xf5\x4f\x65\xb3\x67\x1a\x1a\x3d\x4a\x30\x0b\xfb\x5a\xf0\xfc\x2f\x00\x00\xff\xff\xec\xe1\xcf\x8b\x0c\x12\x00\x00")

func localesEnUsHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesEnUsHomeYml,
		"locales/en-US/home.yml",
	)
}

func localesEnUsHomeYml() (*asset, error) {
	bytes, err := localesEnUsHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/en-US/home.yml", size: 4620, mode: os.FileMode(420), modTime: time.Unix(1643190310, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesZhCnHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x57\x5b\x53\xe2\x58\x1e\x7f\xcf\xa7\xa0\xa0\xe6\x6d\x77\x6b\xf6\xb5\xdf\x22\x44\xcd\x76\x48\x52\x49\x70\xd6\x79\x49\x39\x34\x3b\xeb\x8e\x02\x25\xba\x55\xbb\x4f\x83\xca\xcd\x21\xc2\x76\xab\xdb\x2a\xd3\x82\x0d\xb6\xab\xcd\x45\x9d\x16\x9a\xa0\x7e\x99\x9c\x93\xe4\xc9\xaf\xb0\x75\xce\x09\x21\x40\x3b\xed\x23\xe1\x7f\xbf\xfc\x7e\xff\x13\x88\x26\x56\x57\x13\x71\x8a\xa7\xc3\x8c\xca\xfc\x95\x95\x15\xf9\x85\xcf\x0f\xca\x9a\xf9\xa1\x03\xba\xd7\xa0\xf9\x16\x54\xce\xfd\x14\x2b\xaa\xbc\xa0\x8c\x04\xac\x76\x17\x54\xce\xcd\x1b\xdd\xd4\x4f\xac\xd6\xbd\x79\xd7\xb2\x6b\x9f\xec\x5f\x4f\x41\xed\x12\x64\x0f\x0d\xfd\x0d\xe8\xbf\x61\x45\x3f\x45\x05\xa2\x2b\x1b\xa9\xf5\xd8\x1a\x15\xe4\x22\xb2\xc2\x48\x6a\x88\xe1\x18\x85\x51\x67\x69\x96\x63\x42\x2f\x7c\x7e\xf8\xdf\x2a\xbc\xd9\x07\xf9\xaa\x7d\x58\x07\x77\x6f\x40\x41\x33\x77\x6e\xe1\xcf\x69\xf3\x68\xdb\x3e\xce\x9a\xf7\x75\xbf\xab\xca\xca\x38\x08\x29\xc2\xf3\x2c\x3f\xf7\xc2\xe7\x27\x02\x46\x4f\x03\x95\x73\xeb\xa1\x6c\xd5\x8a\x46\xaf\xf9\x38\x48\x4f\xa9\x70\x42\x90\xe6\x50\x5e\xed\x01\xc8\x34\x88\x9a\xe3\x58\xcb\x99\xfd\x0f\x38\xd0\xb5\xd8\xab\x58\x7c\x7d\x79\x69\x85\x1a\x8b\x51\x95\x18\x59\x88\x48\x41\x06\xe9\x93\x30\xeb\x57\xd6\x6f\x8d\xc7\x41\xda\x6a\x37\xcc\x0f\x6f\xed\xd7\x0d\xa3\xf7\x0b\xac\x14\x40\xe6\xc6\x4a\xef\x19\x3d\x1d\x56\xfa\xfe\x27\x8c\xa8\xdf\x0b\xfc\x73\x2d\x81\x52\xdb\xdc\x3b\x07\x45\x6c\x6c\x96\x8e\x70\x8a\x1a\x94\x98\x10\xc3\x2b\x2c\xcd\xa9\x41\x9a\xc7\xb9\x11\x3f\xa8\x1a\xfa\x5b\xab\x55\x07\xb9\x26\xd4\x5a\x46\x4f\xb3\xb6\xee\x88\x13\x5c\x10\xdc\xdf\xe0\x3c\x13\x7c\x39\x2a\x3d\xf1\x48\x7a\x4d\x14\x8c\xde\xae\xb9\x77\x0e\xf3\x5d\xf4\xf1\xb8\x07\xca\x45\x54\x99\xbf\x27\x52\xeb\xd4\xbc\x20\x2b\x2a\xcd\x49\x0c\x1d\x5a\x1c\xcd\x01\x49\xd6\x33\x28\x4e\xd6\x58\xda\x75\x34\x9d\xac\xab\x67\xea\x25\x92\xec\xb0\xd9\xd3\x06\xd4\x99\x45\x55\x94\x84\xbf\x30\x41\xe5\xb9\xb6\x6a\x9f\xcd\xe3\x16\xce\x9b\x16\x45\x62\x8b\x0d\x8b\x82\xa4\xa8\xb3\x2c\xc7\xa8\x32\xfb\x3d\xa3\x32\x92\x24\x48\x28\x05\x3d\x03\xf7\xda\xb0\x98\x36\x7a\x3b\xc6\xa0\xea\xfb\xf3\xb7\xe1\x19\x9f\xa1\x37\x40\x36\x63\x1e\x6d\xc3\x83\x9c\xa1\xdf\xfa\x29\x79\x51\x56\x98\xb0\xea\xec\xc1\xac\x10\xe1\x43\xce\x1a\x64\xf2\x64\xe8\x61\xe5\x23\xac\xf4\x59\x91\x94\x5b\x40\xa2\xf4\x02\xcd\x72\xf4\x0c\x87\xba\xc3\x8a\x3e\xeb\xd3\x36\xec\x97\x51\xa5\x6f\x6f\xfc\x14\x2b\x93\xb1\xc4\xe1\x61\x5b\x4e\x26\x46\x6f\x97\x2c\x90\x8f\x15\x7d\x20\x7b\x6d\x5e\xa4\x1f\x07\x45\x58\xb9\xb0\xb6\xee\x60\xbe\x0c\x76\x4e\x60\x57\x07\x3b\x55\x3f\xe5\x4d\x0c\xa7\xa3\xf2\x11\x0e\xcd\x39\xac\x5c\xc0\xc2\x3d\xc8\x77\x40\xa9\x4d\x66\x1e\xa5\xb2\xdf\x81\x5a\x0b\xd7\xac\x0b\xdf\xff\x0c\x4f\x1a\xe4\x2f\x92\x22\x0e\xdb\x6b\x10\x99\x52\x17\x68\x2e\x82\xa2\xff\x26\xe5\xb3\x6a\x45\x58\x29\x98\xff\xeb\x13\x3b\xe3\xc2\xdf\x49\x02\x3f\xa7\xce\x0a\x52\x98\x56\x5c\x71\xf3\xb2\x0d\x4a\xef\x61\x75\x00\x06\x25\xa3\xa7\xc1\xe6\x7b\xb3\x36\xa1\xe7\x99\x67\x6f\x5d\x1d\x77\x85\x7b\xb4\xdb\xf9\x0e\x68\x67\xed\xd7\x8d\x71\x4d\x67\x36\xf8\x48\x18\x0d\x45\xe6\xca\xe7\xe8\xe0\xe0\x88\x37\xd0\xeb\x3d\x0e\x8a\x56\xf7\xc6\x7a\xc8\x7d\x51\x59\xa6\x17\x18\x77\x88\x91\x01\xe3\xe1\x57\x34\xc8\xce\x70\x15\xc1\xee\x09\x38\xae\x3e\x0e\x8e\xbe\x49\xf9\x29\x8a\x0a\x6c\xa4\x62\x6b\x94\x48\xcb\xf2\x77\x82\x14\xc2\x01\x87\x69\x25\x38\x8f\x81\x25\x6b\x56\xd3\xf6\xde\xa1\xd5\x6e\xfb\x29\x41\x62\xe7\x58\xde\xc9\xc9\x15\xd9\x3d\x19\x97\x52\x04\x41\x0d\xd3\xfc\x22\x8e\x26\x22\x31\x18\x78\xb1\x6b\xf8\xb1\x06\xf7\x3b\xd6\x43\x0e\xd4\x8f\x50\x06\xed\xae\xd1\x2b\x80\x7c\xd6\x7e\x7d\x02\xca\xbb\x76\x4e\xb3\xda\xfb\xb8\x5f\x11\x79\x84\x71\x74\x50\x61\x71\x3a\x64\x83\x61\xe5\x02\x94\x11\x7e\x90\x86\x5b\xe9\x3d\x84\xd6\xad\x9a\x59\xce\x82\xff\xbc\x1d\x69\x7b\xcb\x8e\x20\xb1\x59\x27\xfa\x64\x7b\x42\x61\x96\x7f\x0a\x69\x7c\x4b\xaf\x56\x97\xe3\x3e\x22\x4e\xf0\xc3\x3a\xbd\xf4\x60\x8e\x37\x3a\x89\xe1\x68\x85\x09\x79\x16\xd9\x09\xf3\xba\xe6\xe2\x1d\x59\x5b\x3f\xc5\x85\x68\xd1\x75\x1a\x11\x43\x34\x76\x8a\xbe\x8e\x39\x33\x1e\x5a\x70\xef\x33\xf6\xb4\xc0\x48\xec\xec\xa2\x1a\x14\x42\x1e\x66\xb1\x2f\x8a\x56\x3b\xed\x29\x38\x13\xa6\x59\x4e\x0d\xb1\xb2\xb3\x92\xf6\x66\xcb\xd0\x6f\x09\x7d\x59\xa7\x97\xe6\x59\xfa\xa9\x72\x0d\x75\xbd\xfd\x24\xda\xa0\xf8\xd9\xce\x68\x2e\x1c\x39\x40\xeb\xce\x88\x8c\x7e\x8d\x70\x10\xf7\x1f\x0c\xfa\xa0\x7f\x66\xf4\x34\xf3\xe3\x19\x28\xe7\x1d\x12\x3d\x4b\xc3\xab\xcd\x49\xf5\x21\x46\xb9\xa0\x0c\xf3\x07\xe3\x43\x44\xe2\xc2\x78\x4c\x62\x32\x5b\x57\x1e\x38\xa6\xa8\xc0\x5a\xec\xc7\xe5\x44\x7c\x88\xab\x12\x33\xc7\x0a\xfc\xb3\xa8\x0d\x14\xfb\xe0\xe4\xc4\x8b\xab\x1e\x42\xa2\x02\xff\x4e\xc4\x63\x43\xab\x88\xd4\x9e\x67\x73\x68\x61\x0c\xae\xb7\xce\xcd\xbb\x6b\xab\x55\x03\xf9\xd7\xe3\xd4\x4d\xd0\xcc\xda\xed\x82\xd2\x01\x81\x02\x42\x13\x5e\x10\xb3\x33\x9a\x79\x47\xc0\x9e\x0d\xd3\x73\xcc\x53\x8a\xfb\x15\xb0\x55\x7a\x4a\x51\x54\xe5\x79\x41\x42\x25\x64\x93\xbe\x21\x42\x53\x54\x20\x91\x8c\xc5\x53\xeb\x4b\xd1\x9f\xa8\x39\x46\x19\x16\x6f\xd8\x95\x11\x3e\xe1\x4a\xa1\xa2\x24\xd7\x12\xff\x88\x45\xd7\xc3\xb1\xd5\x1f\x62\x6b\xee\x02\xd0\xa1\xd0\xa8\x89\x38\xf1\x21\x82\xbb\x1a\x2e\xc3\x3b\x0b\xf2\xd4\xd2\x91\x1d\x99\xa2\xf7\xa1\xd6\x3c\x2d\xab\x4e\x01\x91\x0a\x16\xf6\xf2\xeb\xe3\x20\x3d\xa5\x4b\x05\xe2\x89\x57\x31\x8a\x47\xcb\x33\x24\x78\xe7\xc6\x52\x15\x5a\x7e\x89\xf1\xf5\xd6\xd0\x0f\xac\x9d\x4d\x73\xf3\x33\xdc\xef\xd8\xb9\x12\x7c\xa3\x19\x77\x15\x04\xb2\x95\x73\x58\xf8\x60\xd5\x8a\x7f\xf0\x59\xed\xae\xd9\x2c\x80\xfb\x0c\x68\x6d\x19\xfa\x47\xf2\x19\xb4\x8a\xb0\xbd\xff\x27\xe4\xe6\x87\xa5\xe8\x4f\x1b\x49\x3a\x1a\x4d\x6c\xc4\xd7\x29\x91\x96\xe8\xb0\xca\x84\x45\x65\x11\x79\x28\x6d\xc2\xfd\xce\xb0\xf2\x28\x71\x39\x22\x8a\xa4\x25\x08\xcd\x31\x43\x9b\x47\xdb\xe6\x95\x0e\xde\xfd\xe2\xa7\x26\x4e\x19\x58\xad\xd9\x17\x45\xcf\x1a\x3a\x83\x39\x43\x07\x5f\x46\x44\x95\x0e\x06\x85\x08\xff\xdc\x83\x02\xd4\x73\x86\x7e\x67\xfd\x76\x06\x4a\xdd\x27\xce\x0a\x2a\x90\x5c\x59\x8a\x4f\xdc\x78\x5f\x31\xeb\x1d\xf3\x69\xb3\x9e\x5b\x79\x06\xd7\x89\x72\x62\x47\x17\x0b\xc1\xd0\xe1\x54\x93\xa3\xc3\xb1\x8f\x42\x25\x0c\x0e\xb2\x1a\xc8\xe7\xa0\x76\xea\x8d\x7f\x6c\x9f\x88\x45\xf7\x70\x26\xdd\x23\xd2\x5f\x38\x9c\x25\x46\x56\x04\x89\x99\x10\x87\xe9\x53\x50\xd7\x86\xe2\xee\xfc\x4a\xb1\x54\x62\x63\x2d\x1a\x9b\x2e\x89\x27\x8d\xdf\x09\xde\xdb\xb4\x89\xdb\x6f\x34\xcf\x63\x97\xde\xd5\x3b\xa3\xbf\x3b\x31\xd5\xd6\xc3\x31\xba\x01\x9a\x75\x32\x9e\x4e\x88\x2b\xaf\x96\x92\x84\x54\x5c\x46\x22\x95\x04\xe5\x22\x6c\x36\x40\xbe\x83\x06\xcb\x61\x96\xfe\xb7\x0e\x01\x71\xc2\x1c\xcb\x4f\x6a\xb8\xfc\x43\x00\x16\x3b\xc0\xd2\x23\x56\x21\x78\x6e\x9e\xa5\x61\xf3\x14\xfd\x45\x54\xcc\x43\xdd\x3e\xcc\xfa\x9e\x60\x62\x2a\x10\x5d\x4e\x51\x41\x56\xc6\x0b\x37\xb9\x85\x28\xd2\x21\xa4\xc3\xc2\x25\x2c\x95\x8c\x5e\xd3\x3c\xda\x36\x74\x1d\xec\xd4\x90\xf6\x3f\x57\x83\x89\xf8\xdf\x96\x7f\xa4\x16\xc2\x6a\x50\xe0\x67\xd9\xb9\xd1\x89\x4e\x60\xce\xc3\x09\x23\x99\xc9\xb7\x98\x2b\x3a\xaa\xaf\x67\x66\xbf\x52\xe5\xe5\x24\x82\xd1\xd1\x13\x12\x1f\xc5\xe6\xd1\x36\x2b\xc2\xd6\x27\xa3\xb7\x0b\xba\xd7\xb0\x52\xc0\xbf\xdc\xa3\xd6\x6a\x77\xed\x9c\x06\x0f\x3a\x44\xda\x7d\x67\x4e\x1c\xce\xe8\xb4\x3b\xbd\x04\x5a\x15\xf3\x73\xd1\xbd\x35\xec\xdc\x0e\xdc\xbb\x27\xce\xff\x98\x4c\x24\x56\x90\xbe\x28\x08\xdc\x54\x66\x6c\xd2\x07\xaf\xaa\x5f\xe4\x32\x74\x5b\x7b\xde\xa0\x7e\x87\x32\x53\xeb\x6b\xff\xa2\x10\xe0\xcb\x8a\xb4\x38\xfd\xf0\xb1\xda\x0d\xf8\xee\x16\xbe\x73\x00\x09\x77\x03\xdd\xec\x8e\x8b\x21\xfd\xfe\x3f\x00\x00\xff\xff\xdf\xfa\x75\xd7\x5f\x0f\x00\x00")

func localesZhCnHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesZhCnHomeYml,
		"locales/zh-CN/home.yml",
	)
}

func localesZhCnHomeYml() (*asset, error) {
	bytes, err := localesZhCnHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/zh-CN/home.yml", size: 3935, mode: os.FileMode(420), modTime: time.Unix(1643190274, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"locales/en-US/home.yml": localesEnUsHomeYml,
	"locales/zh-CN/home.yml": localesZhCnHomeYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"en-US": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesEnUsHomeYml, map[string]*bintree{}},
		}},
		"zh-CN": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesZhCnHomeYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
