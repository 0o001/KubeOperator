// Code generated for package i18n by go-bindata DO NOT EDIT. (@generated)
// sources:
// locales/en-US/home.yml
// locales/zh-CN/home.yml
package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localesEnUsHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x59\xcd\x72\xe3\xb8\x11\xbe\xf3\x29\x60\xb9\xa6\x72\x99\x4c\xed\xd9\x37\x0e\x45\xdb\x8c\x25\x92\x45\x52\xde\x71\x2e\x2c\x88\x6c\x49\x88\x49\x80\x05\x80\xf6\x7a\x6f\x79\xaf\xbc\x53\x5e\x21\xd5\x00\xf8\x27\xd9\x3b\x9e\xca\x69\x46\x12\xfa\x07\xfd\xf3\xf5\xd7\xf0\x75\x25\xda\x56\x70\x2f\xf6\xb7\x61\x19\xfe\x88\xf2\x22\xbf\x21\xab\x98\xb6\x40\x68\x23\x81\xd6\x6f\x04\xfe\x60\x4a\xab\x95\x17\xa5\x65\x9c\x14\xd3\xa1\xb4\x01\xaa\x80\x1c\x58\xd3\x10\xc6\x89\x3e\x01\x91\x70\x64\x4a\xcb\x37\x12\xa5\x44\xd8\xaf\xd4\x9b\xd2\xd0\x12\x05\x5a\x33\x7e\x24\x1d\x3d\xc2\xca\xf3\xbc\xeb\xaa\xe9\x95\x06\xe9\x05\x9b\x5d\x5e\x84\x59\xb9\x0e\x37\x61\x11\x96\xb7\x7e\xb4\x09\xd7\x37\x64\x55\x51\x4e\xb8\xd0\xa4\x86\x06\x34\x10\x77\x1c\x0d\x55\xbd\x94\xc0\x35\x51\x9a\x6a\x58\x8d\x0a\xa2\xdc\xb8\x97\xed\xe2\x38\x8a\xef\x6e\xc8\xaa\x38\xcd\xc4\x94\x51\x26\x7b\xce\x19\x3f\x5e\x08\x6d\x92\xc0\xdf\xdc\x90\x55\xd4\x76\x42\xea\x51\xaa\xa2\x1c\xa5\xf6\x40\xfa\xee\x28\x69\x0d\xf5\x24\x19\x27\xe5\xed\x26\xfc\x71\x43\x56\x01\xe5\x7f\xd3\xe4\xc0\x78\x4d\x0e\x0d\xfc\x41\x58\xb7\xf2\xe2\xa4\xdc\xfa\xe6\x9c\xff\xe8\x47\x1b\xff\xfb\x26\xbc\x21\xab\x5b\xca\x1a\xa8\x89\x16\xf6\x34\x7d\xa1\xac\xa1\xfb\x06\x48\x4b\x8d\x3d\x2e\x6a\x17\x1c\x09\x35\x70\xcd\x68\xe3\x2d\xe2\x52\x66\x61\x9e\xec\xb2\x60\xa9\xcc\x86\xe8\x8a\x14\x27\x90\x80\x57\xa5\x9c\x50\xa5\x44\xc5\xa8\x86\x9a\x9c\x84\xd2\xa4\xe7\x35\x48\xa2\x4f\x4c\x91\x67\x78\x5b\x7d\xa0\xb6\xfc\x67\x12\xff\x92\xee\x3f\x05\x87\x77\x74\xdf\xfa\xbb\x4d\x51\x06\x59\xb8\x0e\xe3\x22\xf2\x37\x65\xe0\xc7\x26\xd0\xd6\xec\x0d\x59\xad\xe1\x40\xfb\x46\x93\xe9\xa6\xb3\x68\x5b\xa3\xf5\xca\x56\x65\x70\x1f\x06\x0f\x53\x61\x98\xb4\x4e\x52\x1c\x4b\x75\x12\x35\x25\x67\xaa\x57\x99\xff\xf7\x0a\xe3\x4a\x5b\x58\x79\xa9\x9f\xe7\xbf\x27\xd9\x7a\x74\x26\xde\x6d\x30\xe9\x1d\x55\xea\x55\xc8\x9a\x0c\x25\xb7\x07\xb2\x6f\x28\x7f\xfe\xef\x7f\xfe\xbd\xf2\xd2\x2c\x7a\xf4\x8b\xb0\x7c\x08\x9f\xce\x05\xd1\x93\x4e\xb2\x17\xaa\x01\x2f\x3e\xf3\x62\x12\xf7\xae\x31\xfc\xde\x7d\x92\x17\xa5\xbf\xc9\x42\x7f\xfd\x34\x75\xd0\x3d\x66\xe6\xbc\xcd\x5c\x66\x8c\xc4\x78\xe9\x77\x13\x62\x33\x8b\x39\x71\x2a\x66\x89\x79\x65\xfa\x64\x02\xe0\x6a\xf9\x3d\xbd\xe5\xf7\xa7\x32\xcd\x92\x7f\x84\x41\xf1\x7f\x99\xe8\xa4\xf8\x17\x54\x7a\xe5\xe5\x4f\x79\x11\x6e\x4b\x07\x14\xb7\xc9\x2e\x5e\xbf\x8f\x13\x8d\xa8\x68\x83\x20\x71\x60\x52\x69\x13\xa8\x38\x41\xb9\x79\xb7\xc4\x82\x44\xdd\xd4\x24\x2b\x2f\xca\x6d\xa3\x9a\x3b\xcc\x20\x82\xd9\xae\xb5\x4a\xd1\xe1\x95\x8d\x77\xb4\x4d\x93\xac\x28\xc3\x2c\x4b\xb2\x21\x67\xb1\x20\x35\xd5\x14\xaf\xe9\xc4\x5e\xa9\x22\x07\xd1\xf3\xfa\x8a\x38\x4f\xab\x13\x54\xcf\xc6\x4f\x77\xe4\xc0\x1a\xb8\x5a\x2a\x45\x75\xe5\xa3\xbf\xd9\xa1\xa7\x61\xdb\xe9\x37\xab\x57\x70\xd2\x30\x0e\xe4\x8b\x3a\x3b\x9f\x14\x65\x90\x6c\x53\x93\x83\x41\x2e\xe2\x95\x68\x3b\x83\x6f\x7f\x29\xfc\x7b\x96\xc4\x77\xe5\x6d\x92\x6d\xfd\xc2\x89\x49\x09\x95\x26\xd6\x3b\x21\x5b\xaa\x3f\x14\x9e\x75\xe1\x3c\x2b\xc1\xac\x85\x84\xb6\x11\xf8\x50\x87\xab\x92\x65\x5a\x6d\xd6\x3f\x21\xed\xaa\x2d\xde\x6d\x6f\xc8\xca\x27\x5a\x68\xda\x10\x71\x20\x5f\x14\x91\xe2\x55\xe1\x7f\xcd\xf5\xa9\x04\x42\xf7\x1c\xaf\xd3\x7c\x25\xea\x19\x81\xd4\xe8\x19\xe1\x69\xa8\xdb\x28\x5e\x36\xc5\x1e\xe1\xd4\x94\xaa\x04\x25\x7a\x59\xa1\x13\x5f\x89\x04\xaa\x04\xbf\xf9\xc0\x9f\xdc\x7f\x5c\x62\x9d\xa2\x2f\xae\xe0\xcf\x84\x3d\xef\x1a\x71\x64\x42\x10\x8c\xc3\xd6\x2f\x82\xfb\x01\x05\x06\x08\x61\x8a\xb0\x21\x3b\x2b\x2f\xc9\xa2\xbb\x28\x76\x81\x9f\x9f\x17\x92\x1d\x19\xa7\xcd\x47\x82\xbb\x7c\x9a\x4d\x7e\x50\x44\xc6\xd1\x62\x80\x33\x37\xcc\x80\x63\x5b\xcc\xca\x56\x70\x4d\x2b\x6d\x0a\x97\xd6\x2d\xe3\x38\x8a\xa9\x16\xf2\xca\x29\x9c\x67\x2f\x16\x44\xf5\xd5\xc9\x28\x34\xfd\xe7\xaf\xb7\x51\x7c\x89\xd3\x68\xb4\x76\x58\x6d\x94\x5a\x17\x2e\xb0\xfa\x6a\xe9\x74\x16\x6e\xfc\x22\x5c\xcf\xe0\x65\x87\x62\x27\x8a\xae\xcf\x41\xc4\x61\x87\x71\x61\xb3\xf6\xd3\xd1\x83\x5d\xba\xf6\x47\x0f\x9a\x9a\x76\xe7\x86\xa1\x66\xd6\xee\x63\x98\x45\xb7\x4f\x65\x90\xac\x67\xf4\xe1\x11\x24\x3b\xb0\x8a\x6a\x26\x38\xa9\x44\x0d\x04\xa4\x14\x72\xe5\x85\x5b\x3f\xda\x94\xeb\x28\x77\x28\xb3\xa5\xac\x19\xd8\x89\x32\x25\x58\x33\xf5\xc9\xc0\x0e\xda\xe6\xe9\x0d\x5b\x54\xd8\x52\x5d\x9d\xc8\xc1\x94\x96\x85\x37\x9c\x64\x63\xfd\xe4\xf8\x69\xf4\x15\x43\xf3\x17\x63\x6c\xa8\x91\x73\x25\x06\xd7\x6e\xc8\xea\x55\x0a\x7e\x9c\x06\x1d\x11\x72\x26\x62\x1d\x34\x13\x67\x74\xee\x7c\xe2\xc4\x49\xf9\xb0\xfb\x1e\xa6\x51\x69\x8a\x60\x82\x6c\x05\xf6\xd2\xcf\xfd\x1e\x3a\x46\x68\x5b\x33\x3e\x2b\x59\x3e\x90\xbb\x7c\x08\x9f\x81\xf3\xb9\xc2\x29\xff\xe3\x14\x90\x4a\x2f\x14\xa7\x11\x69\xc4\x91\x71\xc2\xb8\x45\x32\xcc\x98\x9b\x13\xae\x3a\x48\x4b\x39\x3d\x42\x0b\x5c\xe3\x44\x45\x96\x29\xf8\x30\xd0\xb2\xf0\x2e\x4a\xe2\xcf\x12\x24\x62\x85\x7f\x36\xd2\x90\xd7\xa0\x29\xfc\x77\x30\x84\xdc\xe8\xd3\x66\x0c\x31\xfa\xd9\xdc\x6c\x28\x5f\x52\x51\x3b\xa3\x02\x5b\x06\x47\x17\x24\x37\xc1\xdf\x19\x4f\x95\xe0\x07\x76\xec\xa5\x89\x99\x29\xb3\x68\xeb\xdf\x85\x1f\xab\x62\x2d\x3d\xc2\xe7\x14\xa5\x65\x7e\x9f\x64\x76\xdc\xa8\xfe\x70\x60\x15\x43\xd2\x1d\x75\x18\x16\xd1\x01\x57\x9a\x56\xcf\xde\x5d\x58\x0c\x19\x18\xea\x31\x16\x43\x90\xcd\x58\xc0\xf3\x2e\x8f\x5b\x68\xf7\x20\x47\xa0\xf0\xd7\x58\xfd\x5f\x14\x19\xb1\x61\x0f\xc0\x09\xad\x0d\xd1\x9e\xc3\xc9\x80\x5a\x5f\xd4\x02\x01\x8d\x7e\x47\xb3\x9c\x89\x91\x7c\x0e\x23\xeb\x43\xe6\x39\xd4\xd6\x3b\xb4\x73\x90\xbd\xf7\xf3\xd2\xa5\x67\x36\xf0\x66\xa9\x1c\x53\x13\xbc\x83\x87\xde\x35\xf2\x79\x2f\x46\x5c\x1a\xa8\x9f\xdb\x4e\xca\xc2\xcf\x1f\x70\x18\xd6\xb5\x21\xfd\xd8\xb3\x6e\xd1\x31\x1f\x87\xaa\x71\xfb\xca\xd7\xce\x26\xec\x95\x32\x4d\x98\x26\xb5\xe0\xf0\x0d\x0d\xec\x69\xf5\xdc\x77\x7e\x55\x89\x9e\x6b\x2f\xf5\x33\x7f\x5b\x86\xdb\xb4\x78\x3a\x4f\x5b\x47\x25\x6d\x41\x83\x34\xed\x5e\x94\xf9\x2e\x4d\x6d\x76\x77\x5c\xf5\x1d\xf2\x08\xac\xe1\xb7\x0e\x17\xaa\x25\xdf\x5e\x20\xa9\x45\xb4\x91\x4c\x7e\xf7\x83\x87\x5d\x5a\xfa\x41\x90\xec\xe2\x5f\xa1\x95\x0b\xc7\x3f\xcd\x2f\xbd\x6b\x6c\x99\xc1\x78\xba\xf1\xe3\xf7\x18\xb2\xf5\xd1\xda\xc1\xf3\x53\x65\xf5\x0a\xea\x01\x5a\x86\x1d\x6f\x58\x5e\x66\x66\x96\xbb\xd1\x27\x6e\x63\xac\x7c\xfe\x12\xce\xf4\x77\x13\x83\xb3\x50\xfe\xe4\x3e\x36\x6e\x84\xba\xc0\xfd\xea\xcd\x06\x23\xd1\x26\xcc\xe7\x9b\x8c\x03\x04\x57\x82\x7a\x32\x84\xcc\x97\xec\xe1\x20\x24\x10\xf5\xca\x74\x75\xc2\x25\x5e\x5f\x78\xb2\x80\x31\x6b\xe5\x72\x03\xdf\x03\x0a\xa3\x20\xd4\xa4\xef\x4c\xe3\xce\xc4\xb2\x30\x2f\x92\x2c\xbc\x94\x93\xa0\xb4\x90\x8c\x1f\x97\xad\x9e\x39\xaa\x77\x99\xaf\xd9\x35\x7f\x7a\xb9\x69\x03\x79\x7f\x41\x9a\xfa\x7f\x5c\x87\x86\x34\xef\xa1\x11\x38\xf5\xb4\x58\xe2\x74\x81\x9b\xb0\xe8\x40\x3a\xf6\x31\x62\x43\x07\x12\x47\x9c\x41\x07\x4b\x48\x2f\xe0\xed\xde\xed\x5b\x23\xbc\xad\xbc\x91\xfd\x5a\xc8\x0c\xdd\xc9\xe1\xfa\xa6\xf0\x2c\x64\x9a\x8e\xb8\xd4\x99\xba\xf2\x9c\xe9\x3c\x6b\xdc\x4b\x99\xef\xe7\x0d\x3a\x13\xf6\xae\x91\x8f\x59\xba\x36\xa2\xb4\x2d\xa4\xfc\x8d\x57\x27\x29\x38\xfb\x13\x53\xac\x40\x5a\x4a\xf5\x9b\x23\x77\x9b\xe4\x2e\x8a\xcf\x65\x76\x73\x4e\x8b\x94\xe4\xca\x9d\x9e\x48\x5a\x31\x3d\x24\x75\x52\x9c\xd8\x9e\x69\x45\xf0\x8c\xb3\x71\x90\xa2\x45\x16\x71\xc4\x02\x63\xfc\xdb\x67\x28\xf1\xdc\x44\x99\x17\x7e\xb1\x9b\x3d\x6a\x59\x6e\x6d\x4d\x38\x52\x83\x8d\xcb\x94\x17\x44\xb9\x41\xef\x73\x48\xc7\x7d\x94\x29\xa2\xa9\x7a\x3e\x87\x6f\x8c\xd8\x4b\x1b\x98\x19\xeb\x3d\x6e\xcb\x20\x89\x6f\xa3\xbb\xe9\x19\x20\x98\x4f\xdf\x0b\x76\x36\x09\x9c\x3f\x91\x15\xe7\x93\xfb\xa3\xca\xac\xa1\x6b\xc4\x5b\x6b\x06\x41\x43\xf9\x27\x2b\xd4\xbb\x66\x1d\xf2\x80\xd1\x4f\xb4\x07\x5c\x83\x84\x1a\x77\x77\x05\x47\xa3\x12\x5d\x68\x58\xa5\xd5\x04\x76\xc6\x77\xcc\xc5\x74\xec\x2b\xe9\x96\xef\x00\xf4\x48\x19\x1f\x5f\x15\xe7\x8b\x7f\x94\xe2\x6a\x88\x1e\x56\x55\xdf\x31\xa8\x09\xe5\xf5\xcc\x49\x09\x46\x53\x6d\x84\xa3\xf8\xd1\xdf\x44\x18\x8e\xa8\xb3\x5b\xd4\x0b\x6d\x58\x3d\x90\x98\xd9\x53\x0d\xef\x91\x7d\xe0\xb6\x79\x04\x8e\x57\xb7\xd7\xa0\x75\x2d\x41\x29\x30\x16\x7f\xfb\x76\x49\x8e\x94\xa6\xd2\x5c\xc6\x9d\x34\xde\xa8\x7e\xcf\x01\x2b\xd5\x84\xe9\xef\x9d\x10\x0d\x9a\x4b\x93\x64\xf3\x6e\x9e\xa2\x94\xe0\x99\x19\xcb\x79\x67\x46\x4c\x0f\x82\x86\x3e\x2e\x6f\x3d\xb2\x13\x4b\x80\x95\x96\x6f\x1e\x32\xaf\xbc\xc8\x9e\x2e\x9f\x96\x8a\xf9\x6b\xac\x38\xd8\xd7\x39\x2a\xab\x13\xd3\x50\xe9\x5e\x82\x19\xf6\x17\xc5\x76\xa1\x70\x97\x8f\x57\xf8\x84\x3a\x13\x7f\xec\xc9\xd9\x98\x1b\x61\x7a\x80\xfa\x34\x4b\x1e\xa3\x75\x98\x8d\x84\x71\x0e\xf7\x95\x04\x13\x13\x2c\x90\x5e\x0b\x5c\x07\x2a\xd2\x22\x27\x72\x91\x68\x29\xef\x69\xd3\xbc\xe1\x97\xec\xf0\xb6\xdc\xfa\xd5\x0c\x2d\x8b\xa7\x34\x5c\x98\x30\x20\x39\xfa\x89\xba\x46\xe6\x73\x45\x12\xde\xbc\x0d\x9f\x15\x41\x70\xfe\x4a\x96\x20\xf9\x73\xd2\x33\x8d\x8a\xc3\x5f\x90\x1e\x62\x20\x08\x8e\xef\xd1\x04\x1c\x92\xcb\x09\x3f\x8e\x4d\x5a\x69\xf3\xd2\x68\x3b\x53\x81\x52\xb8\x03\xe5\x61\x9e\x23\xf7\x7e\x08\x9f\x16\x08\xee\x7e\x37\xcf\x92\xae\x23\x1c\xa3\x4e\xb3\x04\xe7\xe2\xac\x6f\x86\xb3\x76\xbf\x16\xfc\x05\xa4\x9a\x73\x3d\x23\x86\x54\x38\x4e\xe6\x7b\x8f\x3e\x7b\x8e\xd8\x9b\x37\x20\x2d\x08\x1d\xa9\xb5\x90\xd3\xf3\x23\x3a\xad\x85\xa4\x47\xf0\x4c\x01\xa0\xdb\x58\x03\x3f\xf2\x08\x89\x55\x6e\x7f\x43\xd1\x17\x86\xbc\xe5\xbc\x32\x0d\xe6\x46\x71\x19\xfe\x08\x83\x5d\x11\x25\xb1\x7d\x4b\x42\xb8\x1d\x63\x04\x7f\x40\xd5\xeb\x19\x13\x72\x7f\x29\x70\x4e\x8c\xbd\x8d\x45\x6c\xe0\x87\x34\x14\xbf\xff\x66\xc8\x74\x25\xda\x4e\x70\xe0\xda\x0b\x92\x6d\x9a\xc4\x61\x5c\x8c\x8b\xb3\x85\x5a\xf7\xfb\x99\x6f\xdf\xc8\x5a\xd8\xbf\x2e\x40\x07\xd4\x0e\x9b\x11\x5b\xbf\xad\xfe\x17\x00\x00\xff\xff\xac\x94\x66\xe0\x62\x19\x00\x00")

func localesEnUsHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesEnUsHomeYml,
		"locales/en-US/home.yml",
	)
}

func localesEnUsHomeYml() (*asset, error) {
	bytes, err := localesEnUsHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/en-US/home.yml", size: 6498, mode: os.FileMode(420), modTime: time.Unix(1657103108, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesZhCnHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x58\xcd\x52\xdb\x4a\xda\xde\xeb\x2a\x54\xa6\xce\xee\x7c\xa9\x6f\x9d\x9d\x62\x0b\xa2\xc1\x96\x54\x92\xcc\x09\xb3\x51\x11\xe2\xc9\x30\x09\xb6\x0b\xc3\x54\x9d\x59\xc5\x09\x60\x03\x36\x26\x09\x66\x02\x38\x01\x13\x08\x3e\x10\xdb\x40\x12\xec\xf8\x07\x6e\x46\xdd\x92\x57\xdc\xc2\x54\x77\x4b\xed\xb6\x1c\x48\x36\x14\x96\xde\xbf\x7e\x7f\x9e\xf7\x69\x8d\x4c\x27\x66\x67\x13\x71\x4e\x16\x22\xa2\x29\x3e\x92\x74\x43\xbf\xcf\x07\xc0\x46\xde\x3e\x3e\x03\x8d\x0b\x50\x7d\x07\x4a\x95\x00\x27\xa9\xa6\xac\x18\x7d\x01\xa7\xde\x00\xa5\x8a\xfd\xa5\x6d\xb7\xf7\x9c\xda\x95\xdd\xad\xf5\xca\xdf\x7a\xef\x0f\x40\xf9\x14\x2c\x6f\x5b\xed\xb7\xa0\xf5\x56\x52\x03\x1c\x37\x32\xfd\x7c\x21\x35\x1f\x9b\xe3\x82\xe1\xa8\x6e\x88\x9a\x19\x12\xc3\xa2\x21\x9a\xa3\x82\x14\x16\x43\xf7\xf9\x00\xfc\xef\x3e\xfc\x52\x04\xd9\xfd\xde\xf6\x21\xe8\xbe\x05\x2b\x79\x7b\xf5\x12\xbe\x48\xdb\x3b\x8b\xbd\xdd\x65\xfb\xea\x30\x40\x55\x25\x1d\x07\xa1\x45\x65\x59\x92\xc7\xee\xf3\x01\x22\x60\x35\xf3\xa0\x54\x71\xae\x37\x9c\x72\xce\x6a\x56\x6f\x3a\xe9\x21\x95\xb0\x12\x14\xc2\xe8\x5c\xf5\x0e\x58\x3a\x22\x6a\xae\xe3\x7c\xc6\x6e\x1d\xf7\x15\x64\xc5\x1c\x0d\x8b\x8f\x50\x60\xa5\x13\xe7\x55\x17\xae\x5c\x81\xec\x19\xe8\x7c\x87\x2f\x8e\xf9\x99\x64\x80\x93\x15\x33\x22\x60\x51\x61\x42\x90\xc2\xc2\x83\xb0\xe8\x17\x2e\xd4\xed\xcd\x8a\xbd\xb3\xc8\xcf\x4e\xa1\xa3\xf3\xce\xea\x4b\xfb\xe5\xf7\x00\x87\xb2\x31\x17\x7b\x12\x8b\xcf\xcf\x4c\x3d\xe7\x06\x12\x61\x6a\xa2\xae\x44\xb5\x20\xb2\xe5\xe6\xe2\xf0\xdc\xf9\x7a\x74\xd3\x49\x3b\xf5\x23\xfb\xf8\x5d\xef\xcd\x91\xd5\x5c\x83\xa5\x15\xb0\xf4\xc5\x49\x6f\x5a\xcd\x36\x2c\xb5\x02\xb7\x18\x31\xff\xae\xc8\xbf\x6a\x89\x44\x0b\x72\xd8\xd8\xa8\x10\x0d\x1b\x66\x50\x13\x43\xa2\x6c\x48\x42\xd8\x0c\x0a\x32\x4e\x20\xf1\x83\x52\xde\x7e\xe7\xd4\x0e\x41\xa6\x0a\xf3\x35\xab\x99\x77\x5e\x75\x89\x13\x9c\x75\xdc\x44\xc1\x87\x62\x70\xbc\x5f\x5f\xe2\x91\x34\x14\x51\xb0\x9a\xeb\xf6\x66\x05\x66\x1b\xe8\xe1\x6e\x13\x6c\xe4\x02\x9c\x2a\xe8\xfa\x1f\x8a\x16\xa2\x0e\xe5\x68\x98\x14\x6c\xd9\xde\x4f\x7b\x7a\x2d\xfb\xaf\x16\x76\xa4\x6a\xd2\x84\x60\x88\xe6\xb8\x38\xe9\xd7\xf0\x4e\xe8\xd3\xe0\xb8\x91\x7f\x26\x52\xf3\xdc\x43\x45\x37\x4c\x21\xac\x89\x42\x68\xb2\xdf\xce\x24\x9d\x4c\xbf\xbb\x79\xc5\xd2\xf4\x28\xc3\xe9\xa4\x7a\x76\xbb\x40\xd2\xe9\xf5\xec\xb0\x01\xf3\xc1\xa4\xa9\x6a\xca\xdf\xc4\xa0\xf1\xab\xb6\xca\xdf\xed\xdd\x1a\x0e\x5f\x9f\xd4\x0d\x31\x62\xba\x63\x38\xaa\x44\xe5\x90\x3b\x85\x4b\x59\x32\x73\xb0\xf4\x19\x96\x5a\x92\x4a\x0a\xa1\x20\x51\xb6\x41\x25\x95\x77\xbe\x2d\xc2\xd6\x06\xca\xcc\xe5\x97\x00\x27\xe9\x64\x2a\x70\x88\xd8\x96\x1b\x81\xd5\x5c\x27\xf3\xcb\x4b\x2a\x0f\x96\x2f\xec\x93\xf4\x4d\x27\xe7\x36\x78\x76\x03\xac\xee\xc1\x46\x1b\xac\xee\x07\x48\x2e\xa5\x88\xaa\x68\x86\x29\x6a\x9a\xa2\x79\x35\x80\xa5\x13\x3a\x0a\x64\xe4\xec\x9d\x45\x58\x3c\x83\xf9\x1a\x3e\x6b\x03\x7e\x7c\x01\xf7\x8e\xc8\x2b\xb8\x95\xb1\xda\x97\x38\x6c\xd6\x20\x32\x65\x4e\x08\xe1\x28\x8a\xfe\xb7\x14\xef\x94\x73\xb0\xb4\x62\xff\xd5\x22\x76\x7c\xc2\x8a\x61\x06\x95\x88\x8a\x73\xee\x53\xc2\xe2\x08\x23\x6a\x39\x58\xfc\x3a\xa8\xf7\x87\xa6\xc8\x63\xe6\xa8\xa2\x45\x04\x83\x6a\xd8\xa7\x75\x50\xf8\x08\xf7\x3b\xa0\x53\xb0\x9a\x79\x58\xfd\x68\x97\x7d\xfe\x98\x09\x61\xeb\xe1\x7a\x5c\xb9\x42\xee\xb2\x67\xa0\xbe\xdc\x7b\x73\x34\xa8\xe9\x76\xc0\x5d\x6a\xa4\xec\x83\x6a\x6e\x0b\xc9\xd1\x08\xea\x9d\xa5\x73\xde\x77\x38\x58\xfd\x08\x9a\xcd\x9b\x4e\xce\x69\x7c\x71\xae\x33\xae\x32\xc5\x03\xaf\x03\x25\xec\x8f\xd4\x99\xb4\x03\x32\x64\x5d\xbf\x47\x7d\xef\xf6\x62\x0e\xac\xef\x81\xdd\xfd\x9b\xce\xce\x6f\xa9\x1f\x06\xa1\x0b\x13\x22\xb5\xf2\x33\x7d\x8e\x1b\x59\x48\xc5\xe6\xfa\x03\x8e\x0e\x1e\x11\x8c\xe0\x43\x3a\xdd\xbd\xcd\x6d\xa7\x5e\x0f\x70\x8a\x26\x8d\x49\xb2\x9b\x52\x2a\xb2\xbe\x37\x28\x15\xd5\xfb\xb0\x2e\x04\x0d\x09\xc7\x42\xf0\x04\x96\x4e\xc0\x06\x42\x33\xd2\x64\x4e\x7a\x13\x2d\xa8\x5a\xd9\xde\x58\x06\xaf\xdf\xe1\x0e\xc3\xda\x6c\xee\xd1\x16\xa8\x1e\x12\x7d\x2c\x21\x84\x22\x92\x7c\x1b\xee\xf1\x53\x4f\x66\x67\xe2\x3c\x11\x27\x18\xe3\x1c\x9c\x32\x08\xc8\x46\xa7\x89\x61\xc1\x10\x43\xcc\xd0\xbb\x61\x5e\x94\x29\xfa\x7a\xb5\x0e\x87\x04\x95\x3a\x8d\xaa\x21\x01\x3b\x45\x4f\x07\x9c\x59\xd7\x35\xb8\xf9\x1d\x7b\x9a\x10\x35\x69\x74\xd2\x0c\x2a\x21\x66\x99\xf6\x4e\x72\x4e\x3d\xcd\x64\x4b\x8c\x08\x52\xd8\x0c\x49\xba\x0b\x03\xbd\x97\x35\xab\x7d\x49\x36\xb6\x73\x70\x6a\x7f\x4a\xdf\x96\x2e\x4f\x97\x2d\x06\xd1\x06\xb9\xef\xbd\xa5\x3c\x85\x2e\x17\xf6\x69\x81\x75\xf4\xab\x0f\xff\x1e\xd2\x53\xec\x27\xe5\xf4\x80\x7f\x50\x17\xa3\x08\xab\x05\xb3\x5b\x83\xe5\x27\x41\x61\xe0\x26\x01\xd9\xb5\x73\x06\xb7\x65\xc5\x1c\x8f\x3e\x10\x55\xc9\xc4\x75\xec\x63\xe4\x20\x59\xb1\x9a\x55\xf2\x0f\xff\x6c\xe1\x71\x2c\x39\xc3\x4f\xcd\x3e\x99\x89\xf3\xc4\x15\x6b\xa5\x5f\x3b\x6a\x87\x94\x8c\xe4\x69\xc8\x8e\xbd\xdd\x06\xdd\xa2\x75\x5d\x86\xe9\x3a\x6e\xfe\xb9\xd8\xd3\x99\x44\xdc\x5b\x07\x9a\x38\x26\x29\xf2\x2f\xed\x7c\x90\x6b\x81\xbd\x3d\x76\x1d\x30\x9b\x9a\x1b\xf9\x4f\x22\x1e\xf3\xac\xa2\x6d\xff\x6b\x36\x3d\x0b\x03\x5b\xe6\x55\xc5\xee\x5e\x38\xb5\x32\xc8\xbe\x19\x24\x4e\x04\xcc\x9d\xf5\x06\x28\x6c\xb9\xd0\x84\xb7\x1b\x8b\xe1\xbd\xa5\xbc\xdd\x25\x3b\x4a\x8a\x08\x63\xe2\x6d\x8a\xc5\x12\x78\x55\xb8\x4d\x51\x35\xf5\x87\x8a\x86\xb2\x2c\x25\x79\x6f\x41\x71\xdc\x48\x22\x19\x8b\xa7\xe6\xa7\xa6\x9f\x71\x63\xa2\xe1\x25\xcf\xeb\x91\x3e\xcc\xe2\x4c\xa1\xa4\x24\xe7\x12\xff\x8a\x4d\xcf\x47\x62\xb3\x8f\x63\x73\x74\x16\x85\x90\x0b\xb2\x6e\x57\xe1\xb3\x7b\x3b\x8c\x1d\x58\x06\x8f\x29\xa0\x90\x3d\x46\x28\x84\x67\x9f\x12\x25\x0f\xcc\x6f\x41\x0b\xd2\x29\x43\x2c\xc9\xd3\x7a\x28\xe8\xa6\x9b\x6e\xa4\x82\x85\x59\x12\x71\xd3\x49\x0f\xe9\x72\x23\xf1\xc4\x93\x18\x27\xa3\xa9\xf7\x58\x8c\xcb\x87\x4d\x43\xd0\xc7\xf1\x76\xb8\xb4\xda\x5b\x84\x73\xc2\xb7\x79\xab\x5b\x42\xcb\xa1\x54\x81\x2b\xc7\x4e\x39\xf7\x3b\xef\xd4\x1b\x76\x75\x05\x5c\x2d\x81\xda\x2b\xab\xfd\x99\x3c\x46\xcb\xb1\x5e\xbc\x87\x1c\x3c\x9e\x9a\x7e\xb6\x90\x14\xa6\xa7\x13\x0b\xf1\x79\x4e\x15\x34\x21\x62\x8a\x11\xd5\x98\x44\xb6\x0b\x2f\x61\xf1\xcc\xab\x10\x3a\xb2\x1e\x55\x55\x52\x3a\xb4\x85\x36\xeb\x30\x87\x98\xbb\x7d\xde\x06\x1f\xd6\x02\x9c\x8f\x0b\xc2\xfd\x72\xef\x24\xc7\x20\x87\xdb\xc0\x0f\x84\xe0\x78\x54\x35\x85\x60\x50\x89\xca\xbf\xca\x97\xc0\x61\xc6\x6a\x77\x9d\xaf\x9f\x40\xa1\x71\x0b\x6b\xe2\x46\x92\xcf\xa7\xe8\xf0\xa9\x61\x41\xbe\x8b\xcc\xb1\x83\x80\x20\xc5\x1b\x75\xab\xb9\xe6\x5d\x34\xaa\x56\xf7\xda\xde\xac\xf8\x79\xf7\x4f\x22\xf5\x19\xf6\x45\xca\x5c\x92\x1e\xe0\xd4\xfb\xb2\x72\x47\xc4\xbe\x14\xdc\x19\xb1\x67\x4d\x0a\x8b\x3a\xcb\x97\x5d\x5c\x73\x6d\x23\x7b\x84\x90\x81\xe5\x3c\xc8\x66\x60\xfe\x80\x75\x32\x80\x0f\xc4\x22\xbd\x86\x91\x2e\x23\xd2\x3f\xb8\x86\x69\xa2\x6e\x28\x9a\xe8\x13\x87\xe9\x03\x70\x98\xf7\xc4\xe9\x84\x69\xb1\x54\x62\x61\x6e\x3a\x36\x9c\x67\xe6\x18\x77\x04\xcf\x36\x97\x8f\x82\xf7\x27\x6e\x80\x70\x9f\x7f\xb0\x5a\xeb\xbe\xb9\x73\xae\x77\x11\xc7\xaa\x1e\x92\x31\x62\x28\xea\x10\x5e\x78\xd4\x39\xef\x2d\x22\x4a\xbd\x08\x00\x89\x1e\xcf\xc3\xa4\x0b\x34\x2e\x3c\xfc\xc1\x4d\x39\x6c\x8f\x6d\x19\xc6\xaa\x6f\x50\x86\xf5\xd8\x62\x31\x7a\xdc\xc8\xf3\x27\x53\x49\xc2\x32\x28\xe2\xb9\x37\xac\x8d\x1c\xac\x1e\x81\xec\x19\x1a\x5b\x97\x6a\xb4\xfe\xdf\x65\x24\x61\x65\x4c\x92\xfd\x1a\x94\x90\x10\xeb\x38\x2d\x58\xba\x4f\x33\xc8\xae\xb5\x3f\xa5\x61\xf5\x00\xbd\x22\x2a\xf6\x76\xbb\xb7\xbd\xcc\xdf\x42\xcd\x58\x13\xa6\x6e\x08\x46\x54\xef\x57\x18\xd3\x3a\x24\x81\xa7\x65\x26\xc5\x05\x25\x1d\x03\x9e\x1f\x05\xd1\x89\x3c\x3a\x00\x57\x4e\x61\xa1\x60\x35\xab\xf6\xce\xa2\xd5\x6e\x83\xd5\x32\xd2\xfe\xf7\x6c\x30\x11\xff\xc7\xcc\x53\x6e\x22\x62\x06\x15\x79\x54\x1a\xeb\xdf\x03\xc9\x52\x62\xf8\x44\x5f\xc6\xff\xdd\x82\x8a\xf6\xbb\x87\xa9\xd9\x9d\x3d\xc4\x8d\xcc\x24\xd1\xd2\xeb\x7f\x6e\xc1\x37\x38\x7b\x67\x51\x52\x61\xed\x1b\xe2\x48\x8d\x0b\x58\x5a\xc1\xbf\xe8\x0d\xcc\xa9\x37\x7a\x99\x3c\xdc\x3a\x23\xd2\xf4\x9b\x8c\xef\x96\x87\x9a\xec\xe0\x14\xe4\xf7\x31\xb1\xcb\x51\x92\xda\xcb\xac\xc2\xcd\x2b\xac\x25\xc9\x13\x42\x58\x0a\x61\x79\x50\x3a\x03\xef\x5f\xd0\x6b\x8e\xb7\x8f\x69\xa9\xf7\x60\x76\x03\x07\x46\x04\x61\xf1\xac\x97\x29\xa0\x0e\xe1\xe9\x26\x77\xbe\x35\xc0\xf1\x1a\x79\x0f\xde\xe4\x40\x75\xc3\xee\xbe\xa6\x07\xfd\xbf\x64\x22\xf1\x1c\x99\x54\x15\x25\x3c\x94\x45\x29\xc9\xc3\xf3\xfd\x1f\xb2\x1c\x74\xe9\x64\xbe\x0d\x05\x5c\x32\x95\x9a\x9f\xfb\x93\x43\x54\x40\x37\xb4\xc9\xe1\x9b\xbc\x53\x3f\x82\x1f\x2e\xe1\x07\x77\x05\xe1\xca\xa3\xcb\xac\xeb\x82\x4e\xa7\x4f\x3f\xaa\x8b\xa1\x3b\xb4\x61\xf5\xa3\x73\x70\xea\x41\x29\xc5\x6b\x0a\x53\x1e\xce\xa9\x9a\x32\x21\x85\x44\x8d\x92\x14\x27\x73\x02\x56\x2b\xb0\x52\x06\x9d\x02\xc8\xee\x82\x76\x8b\x7e\xd7\x22\x95\x81\x2b\x6b\x60\xb5\x42\x78\x3d\x7b\x2f\x63\x10\xc4\x98\x54\x45\x6a\x90\x6e\x59\x02\x20\x74\xd7\xa2\x86\x6b\x2f\x91\x57\x3c\x02\xa9\xdf\x07\xb1\xe2\xe7\xbb\xb6\x0f\x8c\x3f\x59\x34\xb8\x4c\xf6\xce\x22\x79\x68\x57\xb7\xec\xe2\x11\x42\x7e\x3c\xa3\x7d\x28\x4f\xc5\x52\x29\x44\x7d\x75\x51\xd7\x11\x6f\x1b\x17\x27\x07\xd0\xca\x7d\xcf\x3f\x8b\xfd\xc9\xa3\x42\x17\xb3\x2e\x1b\x53\x35\x05\xc1\x3b\xd3\xa6\x9e\x28\x81\x11\xa7\xfb\x19\xe4\xb6\x48\x78\xae\x0a\xa2\x52\xb2\xc2\x92\x5f\x4a\xe0\xec\xf6\x6b\x50\xdb\xa1\xd7\x6a\x98\xdd\xf2\x3e\xd1\xa0\x18\xe7\x13\x73\x53\x4f\x63\x1c\xae\x1b\x8a\x12\x95\xee\x91\x2e\x19\x2c\x8c\xa0\xbf\x2f\x2b\xb0\xb0\x61\x5d\xed\x82\xe2\x72\x80\xc3\xb8\x23\xc9\xa6\xf8\x48\x0c\x46\x0d\x49\x41\xd7\x0c\xf2\xe9\xd2\x5d\x6d\xa5\x15\x02\x37\x94\x75\xe1\xac\xa0\x09\xb6\x2b\x79\xf0\x62\xbb\x97\xc9\x3b\xf5\xe2\xbd\x7b\x98\x6f\x4d\x27\x66\x93\x89\x78\x2c\x3e\xcf\x05\x95\x88\xaa\xc8\xa2\x6c\xd0\xfb\x8d\xdd\x5e\x44\xab\xd8\x8b\x84\xd8\x00\x6b\xd7\xbd\x4c\x1e\x1c\xe6\x19\x48\xf9\x5f\x00\x00\x00\xff\xff\x64\x66\x0b\xb6\xc7\x15\x00\x00")

func localesZhCnHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesZhCnHomeYml,
		"locales/zh-CN/home.yml",
	)
}

func localesZhCnHomeYml() (*asset, error) {
	bytes, err := localesZhCnHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/zh-CN/home.yml", size: 5575, mode: os.FileMode(420), modTime: time.Unix(1657103098, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"locales/en-US/home.yml": localesEnUsHomeYml,
	"locales/zh-CN/home.yml": localesZhCnHomeYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"en-US": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesEnUsHomeYml, map[string]*bintree{}},
		}},
		"zh-CN": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesZhCnHomeYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
