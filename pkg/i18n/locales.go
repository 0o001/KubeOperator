// Code generated for package i18n by go-bindata DO NOT EDIT. (@generated)
// sources:
// locales/en-US/home.yml
// locales/zh-CN/home.yml
package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localesEnUsHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xcb\x72\xe3\xba\x11\xdd\xf3\x2b\x60\xb9\xa6\xb2\x71\x5c\x77\xed\x1d\x4d\xd1\x36\x63\x89\x64\x91\x94\xef\x38\x1b\x16\x44\xb6\x24\xc4\x14\xc0\x02\x40\x7b\x74\x77\xf9\xaf\xfc\x53\x7e\x21\xd5\x00\xf8\xd0\xc3\x33\x9e\xca\xca\x96\x84\x7e\xa0\x1f\xa7\x4f\xe3\xba\x12\xfb\xbd\xe0\x5e\xec\x2f\xc3\x32\xfc\x1e\xe5\x45\x7e\x47\x66\x31\xdd\x03\xa1\x8d\x04\x5a\x1f\x08\xfc\x60\x4a\xab\x99\x17\xa5\x65\x9c\x14\xe3\xa1\xb4\x01\xaa\x80\x6c\x58\xd3\x10\xc6\x89\xde\x01\x91\xb0\x65\x4a\xcb\x03\x89\x52\x22\xec\x57\xea\xa0\x34\xec\x89\x02\xad\x19\xdf\x92\x96\x6e\x61\xe6\x79\xde\x75\xd5\x74\x4a\x83\xf4\x82\xc5\x2a\x2f\xc2\xac\x9c\x87\x8b\xb0\x08\xcb\x07\x3f\x5a\x84\xf3\x3b\x32\xab\x28\x27\x5c\x68\x52\x43\x03\x1a\x88\x3b\x8e\x86\xaa\x4e\x4a\xe0\x9a\x28\x4d\x35\xcc\x06\x05\x51\x6e\xdc\xcb\x56\x71\x1c\xc5\x8f\x77\x64\x56\xec\x26\x62\xca\x28\x93\x1d\xe7\x8c\x6f\xcf\x84\x16\x49\xe0\x2f\xee\xc8\x2c\xda\xb7\x42\xea\x41\xaa\xa2\x1c\xa5\xd6\x40\xba\x76\x2b\x69\x0d\xf5\x28\x19\x27\xe5\xc3\x22\xfc\x7e\x47\x66\x01\xe5\x7f\xd3\x64\xc3\x78\x4d\x36\x0d\xfc\x20\xac\xb5\x17\x94\x50\x03\xd7\x8c\x36\xde\xd1\xdd\xca\x2c\xcc\x93\x55\x16\x84\x77\x64\xf6\x40\x59\x03\x35\xd1\xc2\x5d\xf3\x8a\x14\x3b\x90\x80\xee\x52\x4e\xa8\x52\xa2\x62\x54\x43\x4d\x76\x42\x69\xd2\xf1\x1a\x24\xd1\x3b\xa6\xc8\x1b\x1c\x66\x9f\xa8\x2d\xff\x99\xc4\xbf\xa5\xfb\x2f\xc1\xe1\x82\xee\x07\x7f\xb5\x28\xca\x20\x0b\xe7\x61\x5c\x44\xfe\xa2\x0c\xfc\xd8\x04\xcb\x9a\xbd\x23\xb3\x39\x6c\x68\xd7\x68\x32\xde\x74\x12\x31\x6b\xb4\x9e\xd9\xca\x0a\x9e\xc2\xe0\x79\x4c\xae\x49\xcd\x28\xc5\xb1\xdc\x46\x51\x53\x36\xa6\x02\x95\xf9\xbf\x53\x20\xcd\x99\x99\x97\xfa\x79\xfe\x67\x92\xcd\x07\x67\xe2\xd5\x02\x13\xd7\x52\xa5\x3e\x84\xac\x49\x5f\x36\x6b\x20\xeb\x86\xf2\xb7\xff\xfe\xe7\xdf\x33\x2f\xcd\xa2\x17\xbf\x08\xcb\xe7\xf0\xf5\x54\x10\x3d\x69\x25\x7b\xa7\x1a\xf0\xe2\x13\x2f\x46\x71\xef\x1a\xc3\xef\x3d\x25\x79\x51\xfa\x8b\x2c\xf4\xe7\xaf\x63\x17\x3c\x61\x66\x4e\x5b\xc5\x65\xc6\x48\x0c\x97\xbe\x98\x10\x9b\x59\xcc\x89\x53\x31\x49\xcc\x07\xd3\x3b\x13\x00\x57\x8f\x97\xf4\x96\xf7\xaf\x65\x9a\x25\xff\x08\x83\xe2\xff\x32\xd1\x4a\xf1\x2f\xa8\xf4\xcc\xcb\x5f\xf3\x22\x5c\x96\xae\xd9\x1f\x92\x55\x3c\xbf\xdc\xeb\x8d\xa8\x68\x83\x8d\xbe\x61\x52\x69\x13\xa8\x38\x41\x39\xff\xc5\x8f\x16\xfe\xfd\x02\x4b\x24\x16\x24\x6a\x09\x7d\xa7\xac\xa1\xeb\x06\x66\x5e\x94\xdb\x66\x33\x77\x98\xb4\x39\xb3\x9d\x67\x95\xa2\xc3\x33\x1b\xef\x68\x99\x26\x59\x51\x86\x59\x96\x64\x7d\xce\x62\x41\x6a\xaa\x29\x5e\xd3\x89\x7d\x50\x45\x36\xa2\xe3\xf5\x15\x71\x9e\x56\x3b\xa8\xde\x8c\x9f\xee\xc8\x86\x35\x70\x75\xac\x14\xd5\x95\x2f\xfe\x62\x85\x9e\x86\xfb\x56\x1f\xac\x5e\xc1\x49\xc3\x38\x90\x6f\xea\xe4\x7c\x52\x94\x41\xb2\x4c\x4d\x0e\x7a\xb9\x88\x57\x62\xdf\x1a\x8c\xfa\xa9\xf0\x9f\x59\x12\x3f\x96\x0f\x49\xb6\xf4\x0b\x27\x26\x25\x54\x9a\x58\xef\x84\xdc\x53\xfd\xa9\xf0\xa4\x0b\xa7\x59\x09\x26\x2d\x24\xb4\x8d\xc0\xa7\x3a\x5c\x95\x1c\xa7\xd5\x66\xfd\x0b\xd2\xae\xda\xe2\xd5\xf2\x8e\xcc\x7c\xa2\x85\xa6\x0d\x11\x1b\xf2\x4d\x11\x29\x3e\x14\xfe\x6b\xae\x4f\x25\x10\xba\xe6\x78\x9d\xe6\x86\xa8\x37\x04\x43\xa3\x67\x80\xa7\xbe\x6e\xa3\xf8\xb8\x29\xd6\x08\xa0\xa6\x54\x25\x28\xd1\xc9\x0a\x9d\xb8\x21\x12\xa8\x12\xfc\xee\x13\x7f\x72\xff\xe5\x18\xeb\x14\x7d\x77\x05\x7f\x22\xec\x79\xd7\x88\x23\x23\x82\x60\x1c\x96\x7e\x11\x3c\xf5\x28\xd0\x43\x08\x53\x84\xf5\xd9\x99\x79\x49\x16\x3d\x46\xb1\x0b\xfc\xf4\xbc\x90\x6c\xcb\x38\x6d\x3e\x13\x5c\xe5\xe3\x7c\xf1\x83\x22\x32\x8e\x16\x3d\x9c\xb9\x81\x04\x1c\xdb\x62\x52\xb6\x82\x6b\x5a\x69\x53\xb8\xb4\xde\x33\x8e\xe3\x94\x6a\x21\xaf\x9c\xc2\x69\xf6\x62\x41\x54\x57\xed\x8c\x42\xd3\x7f\xfe\x7c\x19\xc5\xe7\x38\x8d\x46\x6b\x87\xd5\x46\xa9\x75\xe1\x0c\xab\xaf\x8e\x9d\xce\xc2\x85\x5f\x84\xf3\x09\xbc\xac\x50\x6c\x47\xd1\xf5\x29\x88\x38\xec\x30\x2e\x2c\xe6\x7e\x3a\x78\xb0\x4a\xe7\xfe\xe0\x41\x53\xd3\xf6\xd4\x30\xd4\xcc\xda\x7d\x09\xb3\xe8\xe1\xb5\x0c\x92\xf9\x84\x02\xbc\x80\x64\x1b\x56\x51\xcd\x04\x27\x95\xa8\x81\x80\x94\x42\xce\xbc\x70\xe9\x47\x8b\x72\x1e\xe5\x0e\x65\x96\x94\x35\x3d\xc3\x50\xa6\x04\x6b\xa6\xbe\x18\xd8\x5e\xdb\x34\xbd\xe1\x1e\x15\xee\xa9\xae\x76\x64\x63\x4a\xcb\xc2\x1b\x4e\xb2\xa1\x7e\x72\xfc\x34\xf8\x8a\xa1\xf9\xc9\x18\xeb\x6b\xe4\x54\x89\xc1\xb5\x3b\x32\xfb\x90\x82\x6f\xc7\x41\x47\x84\x9c\x88\x58\x07\xcd\xc4\x19\x9c\x3b\x9d\x38\x71\x52\x3e\xaf\xee\xc3\x34\x2a\x4d\x11\x8c\x90\xad\xc0\x5e\xfa\xad\x5b\x43\xcb\x08\xdd\xd7\x8c\x4f\x4a\x96\xf7\x04\x2d\xef\xc3\x67\xe0\x7c\xaa\x70\xcc\xff\x30\x05\xa4\xd2\x47\x8a\xd3\x88\x34\x62\xcb\x38\x61\xdc\x22\x19\x66\xcc\xcd\x09\x57\x1d\x64\x4f\x39\xdd\xc2\x1e\xb8\xc6\x89\x8a\x4c\x51\xf0\x7e\xa0\x65\xe1\x63\x94\xc4\x5f\x25\x48\xc4\x0a\xff\x6a\xa4\x21\xaf\x41\x53\xf8\xb7\x37\x84\xdc\xe8\xcb\x66\x0c\x31\xfa\xd5\xdc\x6c\x28\x3f\xa6\x93\x76\x46\x05\xb6\x0c\xb6\x2e\x48\x6e\x82\x5f\x18\x4f\x95\xe0\x1b\xb6\xed\xa4\x89\x99\x29\xb3\x68\xe9\x3f\x86\x9f\xab\x62\x7b\xba\x85\xaf\x29\x4a\xcb\xfc\x29\xc9\xec\xb8\x51\xdd\x66\xc3\x2a\x86\xc4\x39\x42\x82\x7a\x2d\x5a\xe0\x4a\xd3\xea\xcd\x7b\x0c\x8b\x3e\x03\x7d\x3d\xc6\xa2\x0f\xb2\x19\x0b\x78\xde\xe5\x71\x09\xfb\x35\xc8\x01\x28\xfc\x39\x56\xff\x37\x45\x06\x6c\x58\x03\x70\x42\x6b\x43\x96\xa7\x70\xd2\xa3\xd6\x37\x75\x84\x80\x46\xbf\xa3\x59\xce\xc4\x40\x3e\xfb\x91\xf5\x29\xf3\xec\x6b\xeb\x02\xed\xec\x65\x9f\xfc\xbc\x74\xe9\x99\x0c\xbc\x49\x2a\x87\xd4\x04\x17\xf0\xd0\xbb\xe6\xa2\x06\x2f\x46\x5c\xea\xa9\x9f\xdb\x30\xca\xc2\xcf\x9f\x71\x18\xd6\x35\xc1\x43\xd8\xb3\x6e\x59\x31\x1f\xfb\xaa\x71\x3b\xc7\x4d\x6b\x13\xf6\x41\x99\x26\x4c\x93\x5a\x70\xb8\x45\x03\x6b\x5a\xbd\x75\xad\x5f\x55\xa2\xe3\xda\x4b\xfd\xcc\x5f\x96\xe1\x32\x2d\x5e\x4f\xd3\xd6\x52\x49\xf7\xa0\x41\x9a\x76\x2f\xca\x7c\x95\xa6\x36\xbb\x2b\xae\xba\x16\x79\x04\xd6\xf0\xa1\xc5\xa5\xe8\x98\x6f\x1f\x21\xa9\x45\xb4\x81\x4c\xde\xfb\xc1\xf3\x2a\x2d\xfd\x20\x48\x56\xf1\xef\xd0\xca\x23\xc7\xbf\xcc\x2f\xbd\x6b\x6c\x99\xde\x78\xba\xf0\xe3\x4b\x0c\xd9\xfa\x68\xed\xe0\xf9\xb1\xb2\x3a\x05\x75\x0f\x2d\xfd\x9e\xd6\x2f\x2f\x13\x33\xc7\xbb\xd1\x17\x6e\x63\xac\x7c\xfd\x12\xce\xf4\xbd\x89\xc1\x49\x28\x7f\x71\x1f\x1b\x37\x42\x5d\xe0\x7e\xf7\x66\xbd\x91\x68\x11\xe6\xd3\x4d\xc6\x01\x82\x2b\x41\x3d\x1a\x42\xe6\x4b\xd6\xb0\x11\x12\x88\xfa\x60\xba\xda\xe1\x22\xae\xcf\x3c\x39\x82\x31\x6b\xe5\x7c\x8b\x5e\x03\x0a\xa3\x20\xd4\xa4\x6b\x4d\xe3\x4e\xc4\xb2\x30\x2f\x92\x2c\x3c\x97\x93\xa0\xb4\x90\x8c\x6f\x8f\x5b\x3d\x73\x54\xef\x3c\x5f\x93\x6b\xfe\xf2\x72\xe3\x06\x72\x79\x41\x1a\xfb\x7f\x58\x87\xfa\x34\xaf\xa1\x11\x38\xf5\xb4\x38\xc6\xe9\x02\x37\x61\xd1\x82\x74\xec\x63\xc0\x86\x16\x24\x8e\x38\x83\x0e\x96\x90\x9e\xc1\xdb\x93\xdb\xb7\x06\x78\x9b\x79\x03\xfb\xb5\x90\x19\xba\x93\xfd\xf5\x4d\xe1\x59\xc8\x34\x1d\x71\xae\x33\x75\xe5\x39\xd1\x79\xd2\xb8\xe7\x32\xf7\xa7\x0d\x3a\x11\xf6\xae\x91\x8f\x59\xba\x36\xa0\xb4\x2d\xa4\xfc\xc0\xab\x9d\x14\x9c\xfd\x85\x29\x56\x20\x2d\xa5\xfa\xc3\x91\xbb\x45\xf2\x18\xc5\xa7\x32\xab\x29\xa7\x45\x4a\x72\xe5\x4e\x8f\x24\xad\x18\x1f\x83\x5a\x29\x76\x6c\xcd\xb4\x22\x78\xc6\xd9\xd8\x48\xb1\x47\x16\xb1\xc5\x02\x63\xfc\xf6\x2b\x94\xd8\xbb\xae\x98\xf2\x82\x28\x37\x60\x7c\x8a\xd0\xb8\x5e\x32\x45\x34\x55\x6f\xa7\x68\x8c\xa2\xef\xfb\xc0\x8c\x4c\xef\x65\x59\x06\x49\xfc\x10\x3d\x8e\x5b\x7d\x30\x1d\xa6\x67\x64\x6b\x14\x38\x7d\xb5\x2a\x4e\x07\xf1\x67\x85\x56\x43\xdb\x88\xc3\xde\xe0\x7a\x43\xf9\x17\x0b\xce\xbb\x66\x2d\x8e\xf5\xc1\x4f\xb4\x07\x5c\x83\x84\x1a\x57\x71\x05\x5b\xa3\x12\x5d\x68\x58\xa5\xd5\x88\x5d\xc6\x77\x0c\xed\x78\xec\x86\xb4\xc7\x6b\x3d\xdd\x52\xc6\x87\x87\xbe\xe9\x1e\x1f\xa5\xb8\xe9\xa1\x87\x55\xd5\xb5\x0c\x6a\x42\x79\x3d\x71\x52\x82\xd1\x54\x1b\xe1\x28\x7e\xf1\x17\x11\x86\x23\x6a\xed\x52\xf4\x4e\x1b\x56\xf7\x9c\x64\xf2\xf2\xc2\x3b\x24\x13\xb8\x3c\x6e\x81\xe3\xd5\xed\x35\x68\x5d\x4b\x50\x0a\x8c\xc5\x3f\x6e\xcf\xb9\x8e\xd2\x54\x9a\xcb\xb8\x93\xc6\x1b\xd5\xad\x39\x60\xe1\x99\x30\xfd\xbd\x15\xa2\x41\x73\x69\x92\x2c\x2e\xe6\x29\x4a\x09\x9e\x99\x90\x96\x0b\x90\x3f\x3c\x5d\x58\x36\x78\x7c\xeb\x81\x6c\x58\x3e\xab\xb4\x3c\x78\x48\xa4\xf2\x22\x7b\x3d\x7f\x29\x2a\xa6\x0f\xa4\x62\x63\x1f\xdb\xa8\xac\x76\x4c\x43\xa5\x3b\x09\x66\x76\x9f\x15\xdb\x99\xc2\x55\x3e\x5c\xe1\x0b\xea\x4c\xfc\xb1\xc5\x26\x53\x6b\x40\xdd\x1e\xb9\xd3\x2c\x79\x89\xe6\x61\x36\xf0\xbf\x29\x7a\x57\x12\x4c\x4c\xb0\x40\x3a\x2d\x90\xdd\x57\x64\x8f\x14\xc7\x45\x62\x4f\x79\x47\x9b\xe6\x80\x5f\xb2\xcd\xe1\x78\x89\x57\x13\xf0\x2b\x5e\xd3\xf0\xc8\x84\xc1\xbc\xc1\x4f\xd4\x35\x10\x99\x2b\x92\xf0\xe6\xd0\x7f\x56\x04\xb1\xf6\x86\x1c\x63\xde\xaf\x39\xcc\x88\xfc\x9b\x9f\x70\x18\x62\x10\x05\xb6\x97\xa6\x3e\xce\xbc\xe3\x81\x3d\x4c\x41\x5a\x69\xf3\x70\x68\x3b\x53\x81\x52\xb8\xd2\xe4\x61\x9e\x23\x95\x7e\x0e\x5f\x8f\x00\xd9\xfd\x6e\x5e\x19\x5d\x47\x38\x82\x9c\x66\x09\x8e\xb9\x49\xdf\xf4\x67\xed\xba\x2c\xf8\x3b\x48\x35\xa5\x6e\x46\x0c\x99\x6d\x9c\x4c\xd7\x98\x6e\xb2\x9f\xf7\xf1\x37\xed\x80\xb3\x97\x6e\xc1\x33\x79\x46\xef\x30\xd5\xdf\xf3\x08\xe9\x50\x6e\x7f\x43\x50\x7e\x67\xc8\x36\x4e\x0b\xd0\x40\x6b\x14\x97\xe1\xf7\x30\x58\x15\x51\x12\xdb\x17\x20\x44\xd5\x21\x14\xf0\x03\xaa\x4e\x4f\xf8\x8b\x7b\xa3\x77\x35\x34\xb4\x30\xd6\xaa\x41\x19\xd2\x50\xfc\xfe\xd6\x50\xe0\x4a\xec\x5b\xc1\x81\x6b\x2f\x48\x96\x69\x12\x87\x71\x31\xac\xbb\x16\x51\xdd\xef\x27\xbe\xdd\x92\xb9\xb0\xef\xfa\xd0\x02\xb5\x23\x62\x80\xd0\xdb\xd9\xcd\xff\x02\x00\x00\xff\xff\xd4\x45\xf8\xbc\xdd\x18\x00\x00")

func localesEnUsHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesEnUsHomeYml,
		"locales/en-US/home.yml",
	)
}

func localesEnUsHomeYml() (*asset, error) {
	bytes, err := localesEnUsHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/en-US/home.yml", size: 6365, mode: os.FileMode(420), modTime: time.Unix(1655720466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesZhCnHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x58\x5d\x53\xda\xda\xfa\xbf\xcf\xa7\xc8\xe0\xec\xbb\xfe\x3b\xff\xeb\xde\xa5\x10\x6d\x8e\x90\x64\x92\xe0\xae\xe7\x26\x63\x2d\xa7\xc7\xd3\x0a\x8c\xe8\x99\xd9\xe7\xaa\xb4\x2a\xa0\x44\xd8\xad\x78\xaa\xd2\x2a\x56\x2b\x5b\x0b\xa8\x6d\x85\xf2\xa2\x5f\x26\x6b\x25\x5c\xf9\x15\xce\xac\xb5\x92\x45\x08\xd5\xf6\xc6\x91\xe4\x79\x5b\xcf\xcb\xef\xf9\xad\x8c\xcd\x26\xe6\xe7\x13\x71\x46\xe4\x22\xbc\xce\x3f\x16\x54\x4d\x7d\xc0\x06\x40\xd1\xb0\x8e\xcf\x40\xf3\x02\xd4\xde\x81\x72\x35\xc0\x08\xb2\x2e\x4a\xda\x40\xc0\x6e\x34\x41\xb9\x6a\x7d\xe9\x58\x9d\x3d\xbb\x7e\x65\xf5\xea\xfd\xca\xb7\xfe\xfb\x03\x50\x39\x05\xab\xdb\x66\xe7\x2d\x68\xbf\x15\xe4\x00\xc3\x8c\xcd\xbe\x58\x4a\x2d\xc6\x16\x98\x60\x38\xaa\x6a\xbc\xa2\x87\xf8\x30\xaf\xf1\xfa\x38\x27\x84\xf9\xd0\x03\x36\x00\xff\xbb\x0f\xbf\x94\x40\x76\xbf\xbf\x7d\x08\x7a\x6f\x41\xce\xb0\xd6\x2e\xe1\xcb\xb4\xb5\xb3\xdc\xdf\x5d\xb5\xae\x0e\x03\x54\x55\x50\x71\x10\x4a\x54\x14\x05\x71\xe2\x01\x1b\x20\x02\x66\xcb\x00\xe5\xaa\x7d\x5d\xb4\x2b\x79\xb3\x55\xbb\xe9\xa6\x47\x54\xc2\x52\x90\x0b\xa3\x73\x35\xba\x60\xe5\x88\xa8\x39\x8e\x8d\x8c\xd5\x3e\x1e\x28\x88\x92\x3e\x1e\xe6\x1f\xa3\xc0\xca\x27\xf6\xeb\x1e\xcc\x5d\x81\xec\x19\xe8\x7e\x87\x2f\x8f\xd9\xb9\x64\x80\x41\x47\x5a\x88\x3d\x8d\xc5\x17\xe7\x66\x5e\x30\x43\xa7\xd1\x15\x5e\x95\xa2\x4a\x90\x47\x9e\xc8\x81\x0e\xcf\xed\xaf\x47\x37\xdd\xb4\xdd\x38\xb2\x8e\xdf\xf5\xdf\x1c\x99\xad\x75\x58\xce\x81\x95\x2f\x76\x7a\xd3\x6c\x75\x60\xb9\x1d\xb8\xc5\x88\xfe\x77\x49\xfc\x55\x4b\xa0\xd0\xb0\x36\xab\x20\x8f\x8d\x8d\x73\xd1\xb0\xa6\x07\x15\x3e\xc4\x8b\x9a\xc0\x85\xf5\x20\x27\xe2\x2c\x10\x3f\x28\x6f\x9d\x77\x76\xfd\x10\x64\x6a\xd0\xa8\x9b\x2d\xc3\x7e\xdd\x23\x4e\x70\xea\x70\x27\x04\x1f\xf1\xc1\xc9\x41\x91\x88\x47\xd2\x15\x44\xc1\x6c\x6d\x58\x9b\x55\x98\x6d\xa2\x87\xbb\x2d\x50\xcc\x07\x18\x99\x53\xd5\xdf\x25\x25\x44\x1d\x8a\xd1\x30\xc9\xfa\xaa\xb5\x9f\x76\xf5\xda\xd6\x5f\x6d\xec\x48\x56\x84\x29\x4e\xe3\xf5\x49\x7e\xda\xaf\xe1\x9e\xd0\xa7\xc1\x30\x63\xff\x4c\xa4\x16\x99\x47\x92\xaa\xe9\x5c\x58\xe1\xb9\xd0\xf4\xa0\x27\x49\x3a\x3d\x4d\xeb\xe4\x15\x4b\xd3\xa3\x8c\xa6\x93\xea\x59\x9d\x02\x49\xa7\xdb\x78\xa3\x06\xf4\x87\xd3\xba\xac\x48\x7f\xe3\x83\xda\xaf\xda\xaa\x7c\xb7\x76\xeb\x38\x7c\x75\x5a\xd5\xf8\x88\xee\xcc\xd2\xb8\x14\x15\x43\xce\x28\xad\x64\xc9\xe0\xc0\xf2\x67\x58\x6e\x0b\x32\x29\x84\x84\x44\xb9\x29\x4e\x08\x73\x0f\xc3\xa8\x6e\x82\xcc\xda\xdf\x96\x61\xbb\x88\x32\x73\xf9\x25\xc0\x08\x2a\x69\x6d\x1c\x22\xb6\xe5\x44\x60\xb6\x36\xc8\x10\xb2\x82\xcc\x82\xd5\x0b\xeb\x24\x7d\xd3\xcd\x3b\x2d\x9d\x2d\x82\xb5\x3d\xd8\xec\x80\xb5\xfd\x00\xc9\xa5\x10\x91\x25\x45\xd3\x79\x45\x91\x14\xb7\x06\xb0\x7c\xe2\x34\x7f\xa1\x41\xe6\xc6\xda\x59\x86\xa5\x33\x68\xd4\xf1\x59\x9b\xf0\xe3\x4b\xb8\x77\x44\x5e\xc1\xad\x8c\xd9\xb9\xc4\x61\x7b\x0d\x22\x53\xfa\x14\x17\x8e\xa2\xe8\x7f\x4b\xb1\x76\x25\x0f\xcb\x39\xeb\xaf\x36\xb1\xe3\x13\x96\x34\x3d\x28\x45\x64\x9c\x73\x9f\x12\x16\x47\x83\x5e\xcf\xc3\xd2\xd7\x61\xbd\xdf\x15\x49\x9c\xd0\xc7\x25\x25\xc2\x69\x54\xc3\x3a\x6d\x80\xc2\x47\xb8\xdf\x05\xdd\x82\xd9\x32\x60\xed\xa3\x55\xf1\xf9\xf3\x4c\x88\xb7\x1e\x8e\xc7\xdc\x15\x72\x97\x3d\x03\x8d\xd5\xfe\x9b\xa3\x61\x4d\xa7\x03\xee\x52\x23\x65\x1f\x56\x73\x5a\x48\x8c\x46\x50\xef\xac\x9c\xb3\xbe\xc3\xc1\xda\x47\xd0\x6a\xdd\x74\xf3\x76\xf3\x8b\x7d\x9d\x71\x94\x29\x1e\xb8\x1d\x28\x60\x7f\xa4\xce\xa4\x1d\x90\x21\xf3\xfa\x3d\xea\x7b\xa7\x17\xf3\x60\x63\x0f\xec\xee\xdf\x74\x77\x7e\x4b\xfd\x30\x08\x95\x9b\xe2\xa9\x95\x9f\xe9\x33\xcc\xd8\x52\x2a\xb6\x30\x18\x70\x74\xf0\x08\xa7\x05\x1f\xd1\xe9\xee\x6f\x6e\xdb\x8d\x46\x80\x91\x14\x61\x42\x10\x9d\x94\x52\x91\x8d\xbd\x61\xa9\xa8\x3a\xc0\x66\x2e\xa8\x09\x38\x16\x82\x27\xb0\x7c\x02\x8a\x08\xcd\x48\x93\xd9\xe9\x4d\xb4\x65\xea\x15\xab\xb8\x0a\xfe\x7c\x87\x3b\x0c\x6b\x7b\x73\x8f\xa0\xbc\x76\x48\xf4\xb1\x04\x17\x8a\x08\xe2\x6d\xb8\xc7\xce\x3c\x9d\x9f\x8b\xb3\x44\x9c\x60\x8c\x7d\x70\xea\x41\x40\x6f\x74\x0a\x1f\xe6\x34\x3e\xe4\x19\x7a\x27\xcc\x8b\x0a\x45\x5f\xb7\xd6\xe1\x10\x27\x53\xa7\x51\x39\xc4\x61\xa7\xe8\xe9\x90\x33\xf3\xba\x0e\x37\xbf\x63\x4f\x53\xbc\x22\x8c\x4f\xeb\x41\x29\xe4\xd9\x88\xfd\x93\xbc\xdd\x48\x7b\xb2\xc5\x47\x38\x21\xac\x87\x04\xd5\x81\x81\xfe\xab\xba\xd9\xb9\x24\x6b\xd7\x3e\x38\xb5\x3e\xa5\x6f\x4b\x97\xab\xeb\x2d\x06\xd1\x06\xf9\xef\xfd\x15\x83\x42\x97\x03\xfb\xb4\xc0\x2a\xfa\x35\x80\x7f\x17\xe9\x29\xf6\x93\x72\xba\xc0\x3f\xac\x8b\x51\xc4\xab\x05\xb3\x5b\xc3\xe5\x27\x41\x61\xe0\x26\x01\x59\xf5\x73\x0f\x6e\x8b\x92\x3e\x19\x7d\xc8\xcb\x82\x8e\xeb\x38\xc0\xc8\x61\xc6\x61\xb6\x6a\xe4\x1f\xf6\xf9\xd2\x93\x58\x72\x8e\x9d\x99\x7f\x3a\x17\x67\x89\x2b\xaf\x95\x41\xed\xa8\x1d\x52\x32\x92\xa7\x11\x3b\xd6\x76\x07\xf4\x4a\xe6\x75\x05\xa6\x1b\xb8\xf9\x17\x62\xcf\xe6\x12\x71\x77\x1d\x28\xfc\x84\x20\x89\xbf\xb4\xf3\x41\xbe\x0d\xf6\xf6\xbc\xeb\xc0\xb3\xa9\x99\xb1\xff\x24\xe2\x31\xd7\x2a\xda\xf6\xbf\x66\xd3\xb5\x30\xb4\x65\x5e\x57\xad\xde\x85\x5d\xaf\x80\xec\x9b\x61\xf6\x43\xc0\xdc\xde\x68\x82\xc2\x96\x03\x4d\x78\xbb\x79\x31\xbc\xbf\x62\x58\x3d\xb2\xa3\x84\x08\x37\xc1\xdf\xa6\x58\x2a\x83\xd7\x85\xdb\x14\x65\x5d\x7d\x24\x29\x28\xcb\x42\x92\x75\x17\x14\xc3\x8c\x25\x92\xb1\x78\x6a\x71\x66\xf6\x39\x33\xc1\x6b\x6e\xf2\xdc\x1e\x19\xc0\x2c\xce\x14\x4a\x4a\x72\x21\xf1\xaf\xd8\xec\x62\x24\x36\xff\x24\xb6\x40\x67\x91\x0b\x39\x20\xeb\x74\x15\x3e\xbb\xbb\xc3\xbc\x03\xeb\xc1\x63\x0a\x28\x64\x8f\x11\x0a\xe1\xda\xa7\x44\xc9\x05\xf3\x5b\xd0\x82\x74\xca\x08\x4b\x72\xb5\x1e\x71\xaa\xee\xa4\x1b\xa9\x60\x61\x2f\x89\xb8\xe9\xa6\x47\x74\x99\xb1\x78\xe2\x69\x8c\x11\xd1\xd4\xbb\x2c\xc6\x21\xb5\xba\xc6\xa9\x93\x78\x3b\x5c\x9a\x9d\x2d\x7b\xed\x95\xf5\xea\x3b\x7c\x6b\x98\xbd\x32\x5a\x0e\xe5\x2a\xcc\x1d\xdb\x95\xfc\x3d\xd6\x6e\x34\xad\x5a\x0e\x5c\xad\x80\xfa\x6b\xb3\xf3\x99\x3c\x46\xcb\xb1\x51\xba\x8f\x1c\x3c\x99\x99\x7d\xbe\x94\xe4\x66\x67\x13\x4b\xf1\x45\x46\xe6\x14\x2e\xa2\xf3\x11\x59\x9b\x46\xb6\x0b\xaf\x60\xe9\xcc\xad\x10\x3a\xb2\x1a\x95\x65\x52\x3a\xb4\x85\x36\x1b\x30\x8f\xe8\xb7\x75\xde\x01\x1f\xd6\x03\x8c\x8f\x0b\xc2\xfd\x4a\xff\x24\xef\x41\x0e\xa7\x81\x1f\x72\xc1\xc9\xa8\xac\x73\xc1\xa0\x14\x15\x7f\x95\x2f\x81\xc3\x8c\xd9\xe9\xd9\x5f\x3f\x81\x42\xf3\x16\xd6\xc4\x8c\x25\x5f\xcc\xd0\xe1\x93\xc3\x9c\x78\x17\x99\xf3\x0e\x02\x82\x14\x77\xd4\xcd\xd6\xba\x7b\x5b\xa8\x99\xbd\x6b\x6b\xb3\xea\xe7\xdd\x3f\x89\xd4\x67\xd8\x17\xa9\xe7\xa6\xf3\x10\xa7\xde\x97\x95\x3b\x22\xf6\xa5\xe0\xce\x88\x5d\x6b\x42\x98\x57\xbd\x7c\xd9\xc1\x35\xc7\x36\xb2\x47\x08\x19\x58\x35\x40\x36\x03\x8d\x03\xaf\x93\x21\x7c\x20\x16\xe9\x5d\x8a\x74\x19\x91\xfe\xc1\x5d\x4a\xe1\x55\x4d\x52\x78\x9f\x38\x4c\x1f\x80\x43\xc3\x15\xa7\x13\xa6\xc4\x52\x89\xa5\x85\xd9\xd8\x68\x9e\x3d\xc7\xb8\x23\x78\x6f\x73\xf9\x28\xf8\x60\xe2\x86\x08\xf7\xf9\x07\xb3\xbd\xe1\x9b\x3b\xfb\x7a\x17\x71\xac\xda\x21\x19\x23\x0f\x45\x1d\xc1\x0b\x97\x3a\x1b\xee\x22\xa2\xd4\x8b\x00\x10\xef\xf2\x3c\x4c\xba\x40\xf3\xc2\xc5\x1f\xdc\x94\xa3\xf6\xbc\x2d\xe3\xb1\xea\x1b\x94\x51\x3d\x6f\xb1\x3c\x7a\xcc\xd8\x8b\xa7\x33\x49\xc2\x32\x28\xe2\x39\x37\xac\x62\x1e\xd6\x8e\x40\xf6\x0c\x8d\xad\x43\x35\xda\xff\xef\x30\x92\xb0\x34\x21\x88\x7e\x0d\x4a\x48\x88\x75\x9c\x16\x2c\x3d\xa0\x19\x64\xd7\x5a\x9f\xd2\xb0\x76\x80\x5e\x11\x15\x6b\xbb\xd3\xdf\x5e\x65\x6f\xa1\x66\xcc\xd8\xec\x5c\x8a\x09\x0a\x2a\x06\x32\x3f\xba\xa1\x48\xdd\x35\x0f\x73\xa7\xb0\x50\x30\x5b\x35\x6b\x67\xd9\xec\x74\xc0\x5a\x05\x69\xff\x7b\x3e\x98\x88\xff\x63\xee\x19\x33\x15\xd1\x83\x92\x38\x2e\x4c\x0c\xee\x77\x64\xd9\x78\x78\xc2\x40\xc6\xff\x51\x81\x8a\x0e\xba\xc2\x53\x8b\x3b\x7b\x83\x19\x9b\x4b\xa2\x65\x36\xf8\x16\x82\x6f\x66\xd6\xce\xb2\x20\xc3\xfa\x37\xc4\x7d\x9a\x17\xb0\x9c\xc3\xbf\xe8\xcd\xca\x6e\x34\xfb\x19\x03\x6e\x9d\x11\x69\xfa\xc1\xc4\x77\x7b\x43\xcd\x73\x70\x0a\x8c\x7d\x4c\xd8\xf2\x94\x7c\xf6\x33\x6b\x70\xf3\x0a\x6b\x09\xe2\x14\x17\x16\x42\x58\x1e\x94\xcf\xc0\xfb\x97\xf4\xfa\xe2\xee\x59\x5a\xc2\x3d\x98\x2d\xe2\xc0\x88\x20\x2c\x9d\xf5\x33\x05\x54\x79\x96\x6e\x68\xfb\x5b\x13\x1c\xaf\x93\xf7\xe0\x4d\x1e\xd4\x8a\x56\xef\x4f\x7a\xd0\xff\x4b\x26\x12\x2f\x90\x49\x59\x92\xc2\x23\x59\x14\x92\x2c\x3c\xdf\xff\x21\x7b\x41\x97\x49\xcf\x87\x9b\x80\x43\x92\x52\x8b\x0b\x7f\x30\x68\xc5\xab\x9a\x32\x3d\x7a\x43\xb7\x1b\x47\xf0\xc3\x25\xfc\xe0\xac\x16\x5c\x79\x74\x49\x75\x5c\xd0\xa9\xf3\xe9\x47\x55\x3e\x74\x87\x36\xac\x7d\xb4\x0f\x4e\x5d\x88\xa4\x38\x4c\xe1\xc7\xc5\x2f\x59\x91\xa6\x84\x10\xaf\x50\xf2\x61\x67\x4e\xc0\x5a\x15\x56\x2b\xa0\x5b\x00\xd9\x5d\xd0\x69\xd3\x8f\x4e\xa4\x32\x30\xb7\x0e\xd6\xaa\x84\xaf\x7b\xef\x5b\x1e\x64\xd0\xa6\x65\x9e\x1a\xa4\xdb\x93\x00\x03\xdd\xa1\xa8\xe1\x3a\x2b\xe4\x15\x8b\xc0\xe7\xde\x30\x06\xfc\x7c\x87\x0e\x00\xef\x27\x0b\x04\x97\xc9\xda\x59\x26\x0f\xad\xda\x96\x55\x3a\x42\x88\x8e\xaf\x54\x03\x88\x4e\xc5\x52\x29\x44\x69\x55\x5e\x55\x11\x1f\x9b\xe4\xa7\x87\x50\xc8\x79\xcf\x3e\x8f\xfd\xc1\xa2\x42\x97\xb2\x0e\xcb\x92\x15\x09\xc1\xb6\xa7\x4d\x5d\x51\x02\x0f\x76\xef\x33\xc8\x6f\x91\xf0\x1c\x15\x44\x91\x44\xc9\x4b\x6a\xbd\x57\x28\x37\xa3\x28\xa8\xc5\xc4\xc2\xcc\xb3\x18\x83\x0b\x85\xc2\x42\xb5\x7a\xac\x0a\x9a\x17\x37\xd0\xdf\x57\x55\x58\x28\x9a\x57\xbb\xa0\xb4\x1a\x60\x30\xd0\x08\xa2\xce\x3f\xe6\x83\x51\x4d\x90\xd0\x7d\x81\x7c\x48\x74\x76\x54\x39\x47\xf0\x85\xd2\x27\x9c\x06\x34\xb2\x56\xd5\x00\x2f\xb7\xfb\x19\xc3\x6e\x94\xee\xdf\xc7\xc4\x69\x36\x31\x9f\x4c\xc4\x63\xf1\x45\x26\x28\x45\x64\x49\xe4\x45\x8d\x5e\x54\xac\xce\x32\xda\xa9\x6e\x24\xc4\x06\x58\xbf\xee\x67\x0c\x70\x68\x0c\x30\xe4\x1e\xf3\xbf\x00\x00\x00\xff\xff\x98\x90\xf0\x11\x56\x15\x00\x00")

func localesZhCnHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesZhCnHomeYml,
		"locales/zh-CN/home.yml",
	)
}

func localesZhCnHomeYml() (*asset, error) {
	bytes, err := localesZhCnHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/zh-CN/home.yml", size: 5462, mode: os.FileMode(420), modTime: time.Unix(1656474784, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"locales/en-US/home.yml": localesEnUsHomeYml,
	"locales/zh-CN/home.yml": localesZhCnHomeYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"en-US": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesEnUsHomeYml, map[string]*bintree{}},
		}},
		"zh-CN": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesZhCnHomeYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
